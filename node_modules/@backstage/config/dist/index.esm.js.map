{"version":3,"file":"index.esm.js","sources":["../src/reader.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { JsonValue, JsonObject } from '@backstage/types';\nimport { AppConfig, Config } from './types';\nimport cloneDeep from 'lodash/cloneDeep';\nimport mergeWith from 'lodash/mergeWith';\n\n// Update the same pattern in config-loader package if this is changed\nconst CONFIG_KEY_PART_PATTERN = /^[a-z][a-z0-9]*(?:[-_][a-z][a-z0-9]*)*$/i;\n\nfunction isObject(value: JsonValue | undefined): value is JsonObject {\n  return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction typeOf(value: JsonValue | undefined): string {\n  if (value === null) {\n    return 'null';\n  } else if (Array.isArray(value)) {\n    return 'array';\n  }\n  const type = typeof value;\n  if (type === 'number' && isNaN(value as number)) {\n    return 'nan';\n  }\n  if (type === 'string' && value === '') {\n    return 'empty-string';\n  }\n  return type;\n}\n\n// Separate out a couple of common error messages to reduce bundle size.\nconst errors = {\n  type(key: string, context: string, typeName: string, expected: string) {\n    return `Invalid type in config for key '${key}' in '${context}', got ${typeName}, wanted ${expected}`;\n  },\n  missing(key: string) {\n    return `Missing required config value at '${key}'`;\n  },\n  convert(key: string, context: string, expected: string) {\n    return `Unable to convert config value for key '${key}' in '${context}' to a ${expected}`;\n  },\n};\n\n/**\n * An implementation of the `Config` interface that uses a plain JavaScript object\n * for the backing data, with the ability of linking multiple readers together.\n *\n * @public\n */\nexport class ConfigReader implements Config {\n  /**\n   * A set of key paths that where removed from the config due to not being visible.\n   *\n   * This was added as a mutable private member to avoid changes to the public API.\n   * Its only purpose of this is to warn users of missing visibility when running\n   * the frontend in development mode.\n   */\n  private filteredKeys?: string[];\n  private notifiedFilteredKeys = new Set<string>();\n\n  /**\n   * Instantiates the config reader from a list of application config objects.\n   */\n  static fromConfigs(configs: AppConfig[]): ConfigReader {\n    if (configs.length === 0) {\n      return new ConfigReader(undefined);\n    }\n\n    // Merge together all configs into a single config with recursive fallback\n    // readers, giving the first config object in the array the lowest priority.\n    return configs.reduce<ConfigReader>(\n      (previousReader, { data, context, filteredKeys, deprecatedKeys }) => {\n        const reader = new ConfigReader(data, context, previousReader);\n        reader.filteredKeys = filteredKeys;\n\n        if (deprecatedKeys) {\n          for (const { key, description } of deprecatedKeys) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `The configuration key '${key}' of ${context} is deprecated and may be removed soon. ${\n                description || ''\n              }`,\n            );\n          }\n        }\n\n        return reader;\n      },\n      undefined!,\n    );\n  }\n\n  constructor(\n    private readonly data: JsonObject | undefined,\n    private readonly context: string = 'mock-config',\n    private readonly fallback?: ConfigReader,\n    private readonly prefix: string = '',\n  ) {}\n\n  /** {@inheritdoc Config.has} */\n  has(key: string): boolean {\n    const value = this.readValue(key);\n    if (value !== undefined) {\n      return true;\n    }\n    return this.fallback?.has(key) ?? false;\n  }\n\n  /** {@inheritdoc Config.keys} */\n  keys(): string[] {\n    const localKeys = this.data ? Object.keys(this.data) : [];\n    const fallbackKeys = this.fallback?.keys() ?? [];\n    return [...new Set([...localKeys, ...fallbackKeys])];\n  }\n\n  /** {@inheritdoc Config.get} */\n  get<T = JsonValue>(key?: string): T {\n    const value = this.getOptional(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key ?? '')));\n    }\n    return value as T;\n  }\n\n  /** {@inheritdoc Config.getOptional} */\n  getOptional<T = JsonValue>(key?: string): T | undefined {\n    const value = cloneDeep(this.readValue(key));\n    const fallbackValue = this.fallback?.getOptional<T>(key);\n\n    if (value === undefined) {\n      if (process.env.NODE_ENV === 'development') {\n        if (fallbackValue === undefined && key) {\n          const fullKey = this.fullKey(key);\n          if (\n            this.filteredKeys?.includes(fullKey) &&\n            !this.notifiedFilteredKeys.has(fullKey)\n          ) {\n            this.notifiedFilteredKeys.add(fullKey);\n            // eslint-disable-next-line no-console\n            console.warn(\n              `Failed to read configuration value at '${fullKey}' as it is not visible. ` +\n                'See https://backstage.io/docs/conf/defining#visibility for instructions on how to make it visible.',\n            );\n          }\n        }\n      }\n      return fallbackValue;\n    } else if (fallbackValue === undefined) {\n      return value as T;\n    }\n\n    // Avoid merging arrays and primitive values, since that's how merging works for other\n    // methods for reading config.\n    return mergeWith({}, { value: fallbackValue }, { value }, (into, from) =>\n      !isObject(from) || !isObject(into) ? from : undefined,\n    ).value as T;\n  }\n\n  /** {@inheritdoc Config.getConfig} */\n  getConfig(key: string): ConfigReader {\n    const value = this.getOptionalConfig(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalConfig} */\n  getOptionalConfig(key: string): ConfigReader | undefined {\n    const value = this.readValue(key);\n    const fallbackConfig = this.fallback?.getOptionalConfig(key);\n\n    if (isObject(value)) {\n      return this.copy(value, key, fallbackConfig);\n    }\n    if (value !== undefined) {\n      throw new TypeError(\n        errors.type(this.fullKey(key), this.context, typeOf(value), 'object'),\n      );\n    }\n    return fallbackConfig;\n  }\n\n  /** {@inheritdoc Config.getConfigArray} */\n  getConfigArray(key: string): ConfigReader[] {\n    const value = this.getOptionalConfigArray(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalConfigArray} */\n  getOptionalConfigArray(key: string): ConfigReader[] | undefined {\n    const configs = this.readConfigValue<JsonObject[]>(key, values => {\n      if (!Array.isArray(values)) {\n        return { expected: 'object-array' };\n      }\n\n      for (const [index, value] of values.entries()) {\n        if (!isObject(value)) {\n          return { expected: 'object-array', value, key: `${key}[${index}]` };\n        }\n      }\n      return true;\n    });\n\n    if (!configs) {\n      if (process.env.NODE_ENV === 'development') {\n        const fullKey = this.fullKey(key);\n        if (\n          this.filteredKeys?.some(k => k.startsWith(fullKey)) &&\n          !this.notifiedFilteredKeys.has(key)\n        ) {\n          this.notifiedFilteredKeys.add(key);\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Failed to read configuration array at '${key}' as it does not have any visible elements. ` +\n              'See https://backstage.io/docs/conf/defining#visibility for instructions on how to make it visible.',\n          );\n        }\n      }\n      return undefined;\n    }\n\n    return configs.map((obj, index) => this.copy(obj, `${key}[${index}]`));\n  }\n\n  /** {@inheritdoc Config.getNumber} */\n  getNumber(key: string): number {\n    const value = this.getOptionalNumber(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalNumber} */\n  getOptionalNumber(key: string): number | undefined {\n    const value = this.readConfigValue<string | number>(\n      key,\n      val =>\n        typeof val === 'number' ||\n        typeof val === 'string' || { expected: 'number' },\n    );\n    if (typeof value === 'number' || value === undefined) {\n      return value;\n    }\n    const number = Number(value);\n    if (!Number.isFinite(number)) {\n      throw new Error(\n        errors.convert(this.fullKey(key), this.context, 'number'),\n      );\n    }\n    return number;\n  }\n\n  /** {@inheritdoc Config.getBoolean} */\n  getBoolean(key: string): boolean {\n    const value = this.getOptionalBoolean(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalBoolean} */\n  getOptionalBoolean(key: string): boolean | undefined {\n    return this.readConfigValue(\n      key,\n      value => typeof value === 'boolean' || { expected: 'boolean' },\n    );\n  }\n\n  /** {@inheritdoc Config.getString} */\n  getString(key: string): string {\n    const value = this.getOptionalString(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalString} */\n  getOptionalString(key: string): string | undefined {\n    return this.readConfigValue(\n      key,\n      value =>\n        (typeof value === 'string' && value !== '') || { expected: 'string' },\n    );\n  }\n\n  /** {@inheritdoc Config.getStringArray} */\n  getStringArray(key: string): string[] {\n    const value = this.getOptionalStringArray(key);\n    if (value === undefined) {\n      throw new Error(errors.missing(this.fullKey(key)));\n    }\n    return value;\n  }\n\n  /** {@inheritdoc Config.getOptionalStringArray} */\n  getOptionalStringArray(key: string): string[] | undefined {\n    return this.readConfigValue(key, values => {\n      if (!Array.isArray(values)) {\n        return { expected: 'string-array' };\n      }\n      for (const [index, value] of values.entries()) {\n        if (typeof value !== 'string' || value === '') {\n          return { expected: 'string-array', value, key: `${key}[${index}]` };\n        }\n      }\n      return true;\n    });\n  }\n\n  private fullKey(key: string): string {\n    return `${this.prefix}${this.prefix ? '.' : ''}${key}`;\n  }\n\n  private copy(data: JsonObject, key: string, fallback?: ConfigReader) {\n    const reader = new ConfigReader(\n      data,\n      this.context,\n      fallback,\n      this.fullKey(key),\n    );\n    reader.filteredKeys = this.filteredKeys;\n    return reader;\n  }\n\n  private readConfigValue<T extends JsonValue>(\n    key: string,\n    validate: (\n      value: JsonValue,\n    ) => { expected: string; value?: JsonValue; key?: string } | true,\n  ): T | undefined {\n    const value = this.readValue(key);\n\n    if (value === undefined) {\n      if (process.env.NODE_ENV === 'development') {\n        const fullKey = this.fullKey(key);\n        if (\n          this.filteredKeys?.includes(fullKey) &&\n          !this.notifiedFilteredKeys.has(fullKey)\n        ) {\n          this.notifiedFilteredKeys.add(fullKey);\n          // eslint-disable-next-line no-console\n          console.warn(\n            `Failed to read configuration value at '${fullKey}' as it is not visible. ` +\n              'See https://backstage.io/docs/conf/defining#visibility for instructions on how to make it visible.',\n          );\n        }\n      }\n\n      return this.fallback?.readConfigValue(key, validate);\n    }\n    const result = validate(value);\n    if (result !== true) {\n      const { key: keyName = key, value: theValue = value, expected } = result;\n      throw new TypeError(\n        errors.type(\n          this.fullKey(keyName),\n          this.context,\n          typeOf(theValue),\n          expected,\n        ),\n      );\n    }\n\n    return value as T;\n  }\n\n  private readValue(key?: string): JsonValue | undefined {\n    const parts = key ? key.split('.') : [];\n    for (const part of parts) {\n      if (!CONFIG_KEY_PART_PATTERN.test(part)) {\n        throw new TypeError(`Invalid config key '${key}'`);\n      }\n    }\n\n    if (this.data === undefined) {\n      return undefined;\n    }\n\n    let value: JsonValue | undefined = this.data;\n    for (const [index, part] of parts.entries()) {\n      if (isObject(value)) {\n        value = value[part];\n      } else if (value !== undefined) {\n        const badKey = this.fullKey(parts.slice(0, index).join('.'));\n        throw new TypeError(\n          errors.type(badKey, this.context, typeOf(value), 'object'),\n        );\n      }\n    }\n\n    return value;\n  }\n}\n"],"names":[],"mappings":"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"}