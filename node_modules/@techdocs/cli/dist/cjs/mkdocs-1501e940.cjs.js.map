{"version":3,"file":"mkdocs-1501e940.cjs.js","sources":["../../src/commands/serve/mkdocs.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OptionValues } from 'commander';\nimport openBrowser from 'react-dev-utils/openBrowser';\nimport { createLogger } from '../../lib/utility';\nimport { runMkdocsServer } from '../../lib/mkdocsServer';\nimport { LogFunc, waitForSignal } from '../../lib/run';\n\nexport default async function serveMkdocs(opts: OptionValues) {\n  const logger = createLogger({ verbose: opts.verbose });\n\n  const dockerAddr = `http://0.0.0.0:${opts.port}`;\n  const localAddr = `http://127.0.0.1:${opts.port}`;\n  const expectedDevAddr = opts.docker ? dockerAddr : localAddr;\n  // We want to open browser only once based on a log.\n  let boolOpenBrowserTriggered = false;\n\n  const logFunc: LogFunc = data => {\n    // Sometimes the lines contain an unnecessary extra new line in between\n    const logLines = data.toString().split('\\n');\n    const logPrefix = opts.docker ? '[docker/mkdocs]' : '[mkdocs]';\n    logLines.forEach(line => {\n      if (line === '') {\n        return;\n      }\n\n      // Logs from container is verbose.\n      logger.verbose(`${logPrefix} ${line}`);\n\n      // When the server has started, open a new browser tab for the user.\n      if (\n        !boolOpenBrowserTriggered &&\n        line.includes(`Serving on ${expectedDevAddr}`)\n      ) {\n        // Always open the local address, since 0.0.0.0 belongs to docker\n        logger.info(`\\nStarting mkdocs server on ${localAddr}\\n`);\n        openBrowser(localAddr);\n        boolOpenBrowserTriggered = true;\n      }\n    });\n  };\n  // mkdocs writes all of its logs to stderr by default, and not stdout.\n  // https://github.com/mkdocs/mkdocs/issues/879#issuecomment-203536006\n  // Had me questioning this whole implementation for half an hour.\n\n  // Commander stores --no-docker in cmd.docker variable\n  const childProcess = await runMkdocsServer({\n    port: opts.port,\n    dockerImage: opts.dockerImage,\n    dockerEntrypoint: opts.dockerEntrypoint,\n    dockerOptions: opts.dockerOption,\n    useDocker: opts.docker,\n    stdoutLogFunc: logFunc,\n    stderrLogFunc: logFunc,\n  });\n\n  // Keep waiting for user to cancel the process\n  await waitForSignal([childProcess]);\n}\n"],"names":["createLogger","openBrowser","runMkdocsServer","waitForSignal"],"mappings":";;;;;;;;;;;;AAsBA,eAA8B,YAAY,IAAoB,EAAA;AAC5D,EAAA,MAAM,SAASA,oBAAa,CAAA,EAAE,OAAS,EAAA,IAAA,CAAK,SAAS,CAAA,CAAA;AAErD,EAAM,MAAA,UAAA,GAAa,kBAAkB,IAAK,CAAA,IAAA,CAAA,CAAA,CAAA;AAC1C,EAAM,MAAA,SAAA,GAAY,oBAAoB,IAAK,CAAA,IAAA,CAAA,CAAA,CAAA;AAC3C,EAAM,MAAA,eAAA,GAAkB,IAAK,CAAA,MAAA,GAAS,UAAa,GAAA,SAAA,CAAA;AAEnD,EAAA,IAAI,wBAA2B,GAAA,KAAA,CAAA;AAE/B,EAAA,MAAM,UAAmB,CAAQ,IAAA,KAAA;AAE/B,IAAA,MAAM,QAAW,GAAA,IAAA,CAAK,QAAS,EAAA,CAAE,MAAM,IAAI,CAAA,CAAA;AAC3C,IAAM,MAAA,SAAA,GAAY,IAAK,CAAA,MAAA,GAAS,iBAAoB,GAAA,UAAA,CAAA;AACpD,IAAA,QAAA,CAAS,QAAQ,CAAQ,IAAA,KAAA;AACvB,MAAA,IAAI,SAAS,EAAI,EAAA;AACf,QAAA,OAAA;AAAA,OACF;AAGA,MAAO,MAAA,CAAA,OAAA,CAAQ,CAAG,EAAA,SAAA,CAAA,CAAA,EAAa,IAAM,CAAA,CAAA,CAAA,CAAA;AAGrC,MAAA,IACE,CAAC,wBACD,IAAA,IAAA,CAAK,QAAS,CAAA,CAAA,WAAA,EAAc,iBAAiB,CAC7C,EAAA;AAEA,QAAA,MAAA,CAAO,IAAK,CAAA,CAAA;AAAA,0BAA+B,EAAA,SAAA,CAAA;AAAA,CAAa,CAAA,CAAA;AACxD,QAAAC,+BAAA,CAAY,SAAS,CAAA,CAAA;AACrB,QAA2B,wBAAA,GAAA,IAAA,CAAA;AAAA,OAC7B;AAAA,KACD,CAAA,CAAA;AAAA,GACH,CAAA;AAMA,EAAM,MAAA,YAAA,GAAe,MAAMC,4BAAgB,CAAA;AAAA,IACzC,MAAM,IAAK,CAAA,IAAA;AAAA,IACX,aAAa,IAAK,CAAA,WAAA;AAAA,IAClB,kBAAkB,IAAK,CAAA,gBAAA;AAAA,IACvB,eAAe,IAAK,CAAA,YAAA;AAAA,IACpB,WAAW,IAAK,CAAA,MAAA;AAAA,IAChB,aAAe,EAAA,OAAA;AAAA,IACf,aAAe,EAAA,OAAA;AAAA,GAChB,CAAA,CAAA;AAGD,EAAM,MAAAC,0BAAA,CAAc,CAAC,YAAY,CAAC,CAAA,CAAA;AACpC;;;;"}