{"version":3,"sources":["webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/ajv.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/codegen/code.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/codegen/index.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/codegen/scope.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/errors.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/index.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/names.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/ref_error.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/resolve.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/rules.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/util.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/validate/applicability.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/validate/boolSchema.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/validate/dataType.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/validate/defaults.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/validate/index.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/validate/keyword.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/compile/validate/subschema.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/core.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/runtime/equal.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/runtime/ucs2length.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/runtime/uri.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/runtime/validation_error.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/additionalItems.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/additionalProperties.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/allOf.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/anyOf.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/contains.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/dependencies.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/if.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/index.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/items.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/items2020.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/not.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/oneOf.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/patternProperties.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/prefixItems.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/properties.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/propertyNames.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/applicator/thenElse.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/code.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/core/id.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/core/index.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/core/ref.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/discriminator/index.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/discriminator/types.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/draft7.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/format/format.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/format/index.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/metadata.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/const.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/enum.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/index.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/limitItems.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/limitLength.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/limitNumber.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/limitProperties.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/multipleOf.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/pattern.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/required.js","webpack://techdocs-cli-embedded-app/../node_modules/ajv/dist/vocabularies/validation/uniqueItems.js"],"names":["exports","core_1","draft7_1","discriminator_1","draft7MetaSchema","META_SUPPORT_DATA","META_SCHEMA_ID","Ajv","v","metaSchema","module","validate_1","codegen_1","_CodeOrName","Name","s","_Code","code","item","_a","c","names","_","strs","args","i","addCodeArg","plus","str","expr","safeStringify","optimize","arg","interpolate","res","mergeExprItems","a","b","strConcat","c1","c2","x","stringify","getProperty","key","getEsmExportName","regexpCode","rx","code_1","scope_1","code_2","scope_2","Node","_names","_constants","Def","varKind","name","rhs","es5","_n","constants","optimizeExpr","Assign","lhs","sideEffects","addExprNames","AssignOp","op","Label","label","Break","Throw","error","AnyCode","ParentNode","nodes","opts","n","subtractNames","addNames","BlockNode","Root","Else","If","condition","cond","e","ns","not","For","ForLoop","iteration","ForRange","from","to","ForIter","loop","iterable","Func","async","Return","Try","_b","Catch","Finally","CodeGen","extScope","prefix","prefixOrName","value","keyOrRef","scopeName","nameOrPrefix","constant","_constant","keyValues","thenBody","elseBody","node","forBody","arr","obj","tryBody","catchCode","finallyCode","body","nodeCount","len","toClose","funcBody","N1","N2","replaceName","canOptimize","items","par","andCode","mappend","and","orCode","or","y","ValueError","UsedValueState","Scope","prefixes","parent","ng","ValueScopeName","nameStr","property","itemIndex","line","ValueScope","valueKey","vs","_name","values","usedValues","getCode","valueCode","nameSet","def","util_1","names_1","keyword","schemaType","reportError","cxt","errorPaths","overrideAllErrors","it","gen","compositeRule","allErrors","errObj","errorObjectCode","addError","returnErrors","reportExtraError","resetErrorsCount","errsCount","extendErrors","schemaValue","data","err","errs","validateName","schemaEnv","E","createErrors","errorObject","errorInstancePath","errorSchemaPath","extraErrorProps","errorPath","instancePath","instPath","errSchemaPath","schemaPath","parentSchema","schPath","params","message","propertyName","topSchemaRef","validation_error_1","resolve_1","SchemaEnv","env","schema","compileSchema","sch","_sch","getCompilingSchema","rootId","lines","ownProperties","_ValidationError","schemaCxt","sourceCode","validateCode","validate","props","resolveRef","root","baseId","ref","schOrFunc","resolve","schemaId","inlineOrCompile","schEnv","sameSchemaEnv","s1","s2","resolveSchema","p","refPath","getJsonPointer","id","schOrRef","schId","PREVENT_SCOPE_CHANGE","parsedRef","part","partSchema","$ref","MissingRefError","resolver","msg","equal","traverse","SIMPLE_INLINED","inlineRef","limit","hasRef","countKeys","REF_KEYWORDS","count","getFullPath","normalize","normalizeId","_getFullPath","TRAILING_SLASH_HASH","resolveUrl","ANCHOR","getSchemaRefs","uriResolver","baseIds","pathPrefix","localRefs","schemaRefs","jsonPtr","parentJsonPtr","fullPath","addRef","addAnchor","_resolve","ambiguos","checkAmbiguosRef","anchor","sch1","sch2","_jsonTypes","jsonTypes","isJSONType","getRules","groups","toHash","hash","alwaysValidSchema","checkUnknownRules","schemaHasRules","self","rules","checkStrictMode","schemaHasRulesButRef","RULES","schemaRefOrVal","$data","unescapeFragment","unescapeJsonPointer","escapeFragment","escapeJsonPointer","eachItem","xs","f","makeMergeEvaluated","mergeNames","mergeToName","mergeValues","resultToName","toName","setEvaluated","evaluatedPropsToName","ps","snippets","useFunc","Type","getErrorPath","dataProp","dataPropType","jsPropertySyntax","isNumber","mode","schemaHasRulesForType","type","group","shouldUseGroup","rule","shouldUseRule","kwd","errors_1","boolError","topBoolOrEmptySchema","falseSchemaError","boolOrEmptySchema","valid","rules_1","applicability_1","DataType","getSchemaTypes","types","getJSONTypes","ts","coerceAndCheckDataType","coerceTo","coerceToTypes","checkTypes","wrongType","checkDataTypes","coerceData","reportTypeError","COERCIBLE","coerceTypes","t","dataType","coerced","coerceSpecificType","assignParentData","parentData","parentDataProperty","checkDataType","strictNums","correct","EQ","numCond","_cond","dataTypes","notObj","typeError","getTypeErrorContext","schemaCode","assignDefaults","ty","properties","assignDefault","prop","defaultValue","childData","boolSchema_1","dataType_1","dataType_2","defaults_1","keyword_1","subschema_1","validateFunctionCode","isSchemaObj","checkKeywords","schemaCxtHasRules","topSchemaObjCode","validateFunction","funcSourceUrl","destructureValCxtES5","destructureValCxt","commentKeyword","checkNoDefault","resetEvaluated","typeAndKeywords","returnResults","subschemaCode","subSchemaObjCode","updateContext","checkAsyncSchema","checkRefsAndKeywords","schemaKeywords","checkedTypes","rootName","ValidationError","assignEvaluated","evaluated","typeErrors","keywordCode","checkStrictTypes","groupKeywords","iterateKeywords","useDefaults","checkContextTypes","checkMultipleTypes","checkKeywordTypes","includesType","strictTypesError","hasApplicableType","schTs","kwdT","KeywordCxt","getData","successAction","failAction","append","errorParams","assign","codeBlock","$dataValid","wrong$DataType","invalid$DataSchema","st","validateSchemaRef","appl","subschema","nextContext","ruleType","JSON_POINTER","RELATIVE_JSON_POINTER","dataLevel","dataNames","dataPathArr","jsonPointer","matches","up","errorMsg","segments","segment","pointerType","macroKeywordCode","macroSchema","schemaRef","useKeyword","funcKeywordCode","checkAsyncKeyword","validateRef","validateKeyword","assignValid","modifyData","reportErrs","ruleErrs","validateAsync","validateSync","addErrs","validateErrs","_await","passCxt","passSchema","errors","result","validSchemaType","allowUndefined","validateKeywordUsage","deps","getSubschema","schemaProp","extendSubschemaData","dpType","nextData","dataContextProps","_nextData","extendSubschemaMode","jtdDiscriminator","jtdMetadata","ref_error_1","compile_1","codegen_2","$dataRefSchema","uri_1","defaultRegExp","flags","META_IGNORE_OPTIONS","EXT_SCOPE_NAMES","removedOptions","deprecatedOptions","MAX_EXPRESSION","requiredOptions","o","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_optz","regExp","getLogger","formatOpt","checkOptions","getMetaSchemaOptions","addInitialFormats","addInitialKeywords","addInitialSchemas","meta","_dataRefSchema","schemaKeyRef","_meta","loadSchema","runCompileAsync","_schema","loadMetaSchema","_compileAsync","checkLoaded","loadMissingSchema","missingRef","_loadSchema","_validateSchema","throwOrLogError","$schema","keyRef","getSchEnv","cacheKey","definitions","kwdOrDef","checkKeyword","addRule","keywordMetaschema","definition","k","format","separator","dataVar","text","keywordsJsonPointers","keywords","seg","schemaOrData","schemas","regex","validateSchema","addSchema","currentOpts","checkOpts","options","log","opt","optsSchemas","defs","metaOpts","noLogs","logger","KEYWORD_NAME","post","ruleGroup","addBeforeRule","before","_rule","$dataRef","ucs2length","length","pos","uri","validateAdditionalItems","validateItems","patProps","checkAdditionalProperties","additionalPropertyCode","isAdditional","definedProp","propsSchema","deleteAdditional","applyAdditionalSchema","schCxt","min","max","minContains","maxContains","validateItemsWithCount","schValid","checkLimits","_valid","block","depsCount","property_ies","missingProperty","propDeps","schDeps","splitDependencies","validatePropertyDeps","validateSchemaDeps","propertyDeps","schemaDeps","missing","hasProperty","depProp","hasThen","hasSchema","hasElse","validateIf","ifClause","validateClause","additionalItems_1","prefixItems_1","items_1","items2020_1","contains_1","dependencies_1","propertyNames_1","additionalProperties_1","properties_1","patternProperties_1","not_1","anyOf_1","oneOf_1","allOf_1","if_1","thenElse_1","getApplicator","draft2020","applicator","validateTuple","extraItems","schArr","checkStrictTuple","l","fullTuple","prefixItems","passing","validateOneOf","util_2","patterns","alwaysValidPatterns","checkProperties","validatePatternProperties","pat","checkMatchingProperties","validateProperties","alwaysValid","allProps","hasDefault","applyPropertySchema","checkReportMissingProp","noPropertyInData","checkMissingProp","reportMissingProp","hasPropFunc","isOwnProperty","propertyInData","allSchemaProperties","schemaMap","schemaProperties","callValidateCode","func","context","dataAndSchema","valCxt","newRegExp","usePattern","pattern","u","validateArray","validArr","notValid","validateUnion","id_1","ref_1","core","callRootRef","schOrEnv","callValidate","inlineRefSchema","callRef","getValidate","schName","$async","callAsyncRef","callSyncRef","addEvaluatedFrom","addErrorsFrom","source","schEvaluated","types_1","discrError","tagName","tag","oneOf","validateMapping","mapping","getMapping","tagValue","applyTagSchema","oneOfMapping","topRequired","hasRequired","tagRequired","propSch","addMappings","required","addMapping","DiscrError","validation_1","applicator_1","format_1","metadata_1","draft7Vocabularies","validate$DataFormat","validateFormat","fmts","fDef","fType","unknownFmt","invalidFmt","callFormat","validData","formatDef","unknownFormat","fmtType","fmtRef","getFormat","validCondition","unknownMsg","fmtDef","fmt","equal_1","useLoop","eql","getEql","loopEnum","vSchema","equalCode","limitNumber_1","multipleOf_1","limitLength_1","pattern_1","limitProperties_1","required_1","limitItems_1","uniqueItems_1","const_1","enum_1","validation","comp","ucs2length_1","ops","KWDs","prec","invalid","allErrorsMode","exitOnErrorMode","definedProperties","requiredKey","loopAllRequired","loopUntilMissing","j","itemTypes","validateUniqueItems","loopN","loopN2","indices","outer"],"mappings":"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","file":"static/module-ajv.fca02de5.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nconst core_1 = require(\"./core\");\nconst draft7_1 = require(\"./vocabularies/draft7\");\nconst discriminator_1 = require(\"./vocabularies/discriminator\");\nconst draft7MetaSchema = require(\"./refs/json-schema-draft-07.json\");\nconst META_SUPPORT_DATA = [\"/properties\"];\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\";\nclass Ajv extends core_1.default {\n    _addVocabularies() {\n        super._addVocabularies();\n        draft7_1.default.forEach((v) => this.addVocabulary(v));\n        if (this.opts.discriminator)\n            this.addKeyword(discriminator_1.default);\n    }\n    _addDefaultMetaSchema() {\n        super._addDefaultMetaSchema();\n        if (!this.opts.meta)\n            return;\n        const metaSchema = this.opts.$data\n            ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n            : draft7MetaSchema;\n        this.addMetaSchema(metaSchema, META_SCHEMA_ID, false);\n        this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID;\n    }\n    defaultMeta() {\n        return (this.opts.defaultMeta =\n            super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined));\n    }\n}\nmodule.exports = exports = Ajv;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Ajv;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\n//# sourceMappingURL=ajv.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.regexpCode = exports.getEsmExportName = exports.getProperty = exports.safeStringify = exports.stringify = exports.strConcat = exports.addCodeArg = exports.str = exports._ = exports.nil = exports._Code = exports.Name = exports.IDENTIFIER = exports._CodeOrName = void 0;\nclass _CodeOrName {\n}\nexports._CodeOrName = _CodeOrName;\nexports.IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;\nclass Name extends _CodeOrName {\n    constructor(s) {\n        super();\n        if (!exports.IDENTIFIER.test(s))\n            throw new Error(\"CodeGen: name must be a valid identifier\");\n        this.str = s;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        return false;\n    }\n    get names() {\n        return { [this.str]: 1 };\n    }\n}\nexports.Name = Name;\nclass _Code extends _CodeOrName {\n    constructor(code) {\n        super();\n        this._items = typeof code === \"string\" ? [code] : code;\n    }\n    toString() {\n        return this.str;\n    }\n    emptyStr() {\n        if (this._items.length > 1)\n            return false;\n        const item = this._items[0];\n        return item === \"\" || item === '\"\"';\n    }\n    get str() {\n        var _a;\n        return ((_a = this._str) !== null && _a !== void 0 ? _a : (this._str = this._items.reduce((s, c) => `${s}${c}`, \"\")));\n    }\n    get names() {\n        var _a;\n        return ((_a = this._names) !== null && _a !== void 0 ? _a : (this._names = this._items.reduce((names, c) => {\n            if (c instanceof Name)\n                names[c.str] = (names[c.str] || 0) + 1;\n            return names;\n        }, {})));\n    }\n}\nexports._Code = _Code;\nexports.nil = new _Code(\"\");\nfunction _(strs, ...args) {\n    const code = [strs[0]];\n    let i = 0;\n    while (i < args.length) {\n        addCodeArg(code, args[i]);\n        code.push(strs[++i]);\n    }\n    return new _Code(code);\n}\nexports._ = _;\nconst plus = new _Code(\"+\");\nfunction str(strs, ...args) {\n    const expr = [safeStringify(strs[0])];\n    let i = 0;\n    while (i < args.length) {\n        expr.push(plus);\n        addCodeArg(expr, args[i]);\n        expr.push(plus, safeStringify(strs[++i]));\n    }\n    optimize(expr);\n    return new _Code(expr);\n}\nexports.str = str;\nfunction addCodeArg(code, arg) {\n    if (arg instanceof _Code)\n        code.push(...arg._items);\n    else if (arg instanceof Name)\n        code.push(arg);\n    else\n        code.push(interpolate(arg));\n}\nexports.addCodeArg = addCodeArg;\nfunction optimize(expr) {\n    let i = 1;\n    while (i < expr.length - 1) {\n        if (expr[i] === plus) {\n            const res = mergeExprItems(expr[i - 1], expr[i + 1]);\n            if (res !== undefined) {\n                expr.splice(i - 1, 3, res);\n                continue;\n            }\n            expr[i++] = \"+\";\n        }\n        i++;\n    }\n}\nfunction mergeExprItems(a, b) {\n    if (b === '\"\"')\n        return a;\n    if (a === '\"\"')\n        return b;\n    if (typeof a == \"string\") {\n        if (b instanceof Name || a[a.length - 1] !== '\"')\n            return;\n        if (typeof b != \"string\")\n            return `${a.slice(0, -1)}${b}\"`;\n        if (b[0] === '\"')\n            return a.slice(0, -1) + b.slice(1);\n        return;\n    }\n    if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name))\n        return `\"${a}${b.slice(1)}`;\n    return;\n}\nfunction strConcat(c1, c2) {\n    return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str `${c1}${c2}`;\n}\nexports.strConcat = strConcat;\n// TODO do not allow arrays here\nfunction interpolate(x) {\n    return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n        ? x\n        : safeStringify(Array.isArray(x) ? x.join(\",\") : x);\n}\nfunction stringify(x) {\n    return new _Code(safeStringify(x));\n}\nexports.stringify = stringify;\nfunction safeStringify(x) {\n    return JSON.stringify(x)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\nexports.safeStringify = safeStringify;\nfunction getProperty(key) {\n    return typeof key == \"string\" && exports.IDENTIFIER.test(key) ? new _Code(`.${key}`) : _ `[${key}]`;\n}\nexports.getProperty = getProperty;\n//Does best effort to format the name properly\nfunction getEsmExportName(key) {\n    if (typeof key == \"string\" && exports.IDENTIFIER.test(key)) {\n        return new _Code(`${key}`);\n    }\n    throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`);\n}\nexports.getEsmExportName = getEsmExportName;\nfunction regexpCode(rx) {\n    return new _Code(rx.toString());\n}\nexports.regexpCode = regexpCode;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.or = exports.and = exports.not = exports.CodeGen = exports.operators = exports.varKinds = exports.ValueScopeName = exports.ValueScope = exports.Scope = exports.Name = exports.regexpCode = exports.stringify = exports.getProperty = exports.nil = exports.strConcat = exports.str = exports._ = void 0;\nconst code_1 = require(\"./code\");\nconst scope_1 = require(\"./scope\");\nvar code_2 = require(\"./code\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return code_2._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return code_2.str; } });\nObject.defineProperty(exports, \"strConcat\", { enumerable: true, get: function () { return code_2.strConcat; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return code_2.nil; } });\nObject.defineProperty(exports, \"getProperty\", { enumerable: true, get: function () { return code_2.getProperty; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return code_2.stringify; } });\nObject.defineProperty(exports, \"regexpCode\", { enumerable: true, get: function () { return code_2.regexpCode; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return code_2.Name; } });\nvar scope_2 = require(\"./scope\");\nObject.defineProperty(exports, \"Scope\", { enumerable: true, get: function () { return scope_2.Scope; } });\nObject.defineProperty(exports, \"ValueScope\", { enumerable: true, get: function () { return scope_2.ValueScope; } });\nObject.defineProperty(exports, \"ValueScopeName\", { enumerable: true, get: function () { return scope_2.ValueScopeName; } });\nObject.defineProperty(exports, \"varKinds\", { enumerable: true, get: function () { return scope_2.varKinds; } });\nexports.operators = {\n    GT: new code_1._Code(\">\"),\n    GTE: new code_1._Code(\">=\"),\n    LT: new code_1._Code(\"<\"),\n    LTE: new code_1._Code(\"<=\"),\n    EQ: new code_1._Code(\"===\"),\n    NEQ: new code_1._Code(\"!==\"),\n    NOT: new code_1._Code(\"!\"),\n    OR: new code_1._Code(\"||\"),\n    AND: new code_1._Code(\"&&\"),\n    ADD: new code_1._Code(\"+\"),\n};\nclass Node {\n    optimizeNodes() {\n        return this;\n    }\n    optimizeNames(_names, _constants) {\n        return this;\n    }\n}\nclass Def extends Node {\n    constructor(varKind, name, rhs) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.rhs = rhs;\n    }\n    render({ es5, _n }) {\n        const varKind = es5 ? scope_1.varKinds.var : this.varKind;\n        const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`;\n        return `${varKind} ${this.name}${rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (!names[this.name.str])\n            return;\n        if (this.rhs)\n            this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        return this.rhs instanceof code_1._CodeOrName ? this.rhs.names : {};\n    }\n}\nclass Assign extends Node {\n    constructor(lhs, rhs, sideEffects) {\n        super();\n        this.lhs = lhs;\n        this.rhs = rhs;\n        this.sideEffects = sideEffects;\n    }\n    render({ _n }) {\n        return `${this.lhs} = ${this.rhs};` + _n;\n    }\n    optimizeNames(names, constants) {\n        if (this.lhs instanceof code_1.Name && !names[this.lhs.str] && !this.sideEffects)\n            return;\n        this.rhs = optimizeExpr(this.rhs, names, constants);\n        return this;\n    }\n    get names() {\n        const names = this.lhs instanceof code_1.Name ? {} : { ...this.lhs.names };\n        return addExprNames(names, this.rhs);\n    }\n}\nclass AssignOp extends Assign {\n    constructor(lhs, op, rhs, sideEffects) {\n        super(lhs, rhs, sideEffects);\n        this.op = op;\n    }\n    render({ _n }) {\n        return `${this.lhs} ${this.op}= ${this.rhs};` + _n;\n    }\n}\nclass Label extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        return `${this.label}:` + _n;\n    }\n}\nclass Break extends Node {\n    constructor(label) {\n        super();\n        this.label = label;\n        this.names = {};\n    }\n    render({ _n }) {\n        const label = this.label ? ` ${this.label}` : \"\";\n        return `break${label};` + _n;\n    }\n}\nclass Throw extends Node {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render({ _n }) {\n        return `throw ${this.error};` + _n;\n    }\n    get names() {\n        return this.error.names;\n    }\n}\nclass AnyCode extends Node {\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    render({ _n }) {\n        return `${this.code};` + _n;\n    }\n    optimizeNodes() {\n        return `${this.code}` ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        this.code = optimizeExpr(this.code, names, constants);\n        return this;\n    }\n    get names() {\n        return this.code instanceof code_1._CodeOrName ? this.code.names : {};\n    }\n}\nclass ParentNode extends Node {\n    constructor(nodes = []) {\n        super();\n        this.nodes = nodes;\n    }\n    render(opts) {\n        return this.nodes.reduce((code, n) => code + n.render(opts), \"\");\n    }\n    optimizeNodes() {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            const n = nodes[i].optimizeNodes();\n            if (Array.isArray(n))\n                nodes.splice(i, 1, ...n);\n            else if (n)\n                nodes[i] = n;\n            else\n                nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    optimizeNames(names, constants) {\n        const { nodes } = this;\n        let i = nodes.length;\n        while (i--) {\n            // iterating backwards improves 1-pass optimization\n            const n = nodes[i];\n            if (n.optimizeNames(names, constants))\n                continue;\n            subtractNames(names, n.names);\n            nodes.splice(i, 1);\n        }\n        return nodes.length > 0 ? this : undefined;\n    }\n    get names() {\n        return this.nodes.reduce((names, n) => addNames(names, n.names), {});\n    }\n}\nclass BlockNode extends ParentNode {\n    render(opts) {\n        return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n;\n    }\n}\nclass Root extends ParentNode {\n}\nclass Else extends BlockNode {\n}\nElse.kind = \"else\";\nclass If extends BlockNode {\n    constructor(condition, nodes) {\n        super(nodes);\n        this.condition = condition;\n    }\n    render(opts) {\n        let code = `if(${this.condition})` + super.render(opts);\n        if (this.else)\n            code += \"else \" + this.else.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        super.optimizeNodes();\n        const cond = this.condition;\n        if (cond === true)\n            return this.nodes; // else is ignored here\n        let e = this.else;\n        if (e) {\n            const ns = e.optimizeNodes();\n            e = this.else = Array.isArray(ns) ? new Else(ns) : ns;\n        }\n        if (e) {\n            if (cond === false)\n                return e instanceof If ? e : e.nodes;\n            if (this.nodes.length)\n                return this;\n            return new If(not(cond), e instanceof If ? [e] : e.nodes);\n        }\n        if (cond === false || !this.nodes.length)\n            return undefined;\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a;\n        this.else = (_a = this.else) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        if (!(super.optimizeNames(names, constants) || this.else))\n            return;\n        this.condition = optimizeExpr(this.condition, names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        addExprNames(names, this.condition);\n        if (this.else)\n            addNames(names, this.else.names);\n        return names;\n    }\n}\nIf.kind = \"if\";\nclass For extends BlockNode {\n}\nFor.kind = \"for\";\nclass ForLoop extends For {\n    constructor(iteration) {\n        super();\n        this.iteration = iteration;\n    }\n    render(opts) {\n        return `for(${this.iteration})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iteration = optimizeExpr(this.iteration, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iteration.names);\n    }\n}\nclass ForRange extends For {\n    constructor(varKind, name, from, to) {\n        super();\n        this.varKind = varKind;\n        this.name = name;\n        this.from = from;\n        this.to = to;\n    }\n    render(opts) {\n        const varKind = opts.es5 ? scope_1.varKinds.var : this.varKind;\n        const { name, from, to } = this;\n        return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts);\n    }\n    get names() {\n        const names = addExprNames(super.names, this.from);\n        return addExprNames(names, this.to);\n    }\n}\nclass ForIter extends For {\n    constructor(loop, varKind, name, iterable) {\n        super();\n        this.loop = loop;\n        this.varKind = varKind;\n        this.name = name;\n        this.iterable = iterable;\n    }\n    render(opts) {\n        return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts);\n    }\n    optimizeNames(names, constants) {\n        if (!super.optimizeNames(names, constants))\n            return;\n        this.iterable = optimizeExpr(this.iterable, names, constants);\n        return this;\n    }\n    get names() {\n        return addNames(super.names, this.iterable.names);\n    }\n}\nclass Func extends BlockNode {\n    constructor(name, args, async) {\n        super();\n        this.name = name;\n        this.args = args;\n        this.async = async;\n    }\n    render(opts) {\n        const _async = this.async ? \"async \" : \"\";\n        return `${_async}function ${this.name}(${this.args})` + super.render(opts);\n    }\n}\nFunc.kind = \"func\";\nclass Return extends ParentNode {\n    render(opts) {\n        return \"return \" + super.render(opts);\n    }\n}\nReturn.kind = \"return\";\nclass Try extends BlockNode {\n    render(opts) {\n        let code = \"try\" + super.render(opts);\n        if (this.catch)\n            code += this.catch.render(opts);\n        if (this.finally)\n            code += this.finally.render(opts);\n        return code;\n    }\n    optimizeNodes() {\n        var _a, _b;\n        super.optimizeNodes();\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNodes();\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNodes();\n        return this;\n    }\n    optimizeNames(names, constants) {\n        var _a, _b;\n        super.optimizeNames(names, constants);\n        (_a = this.catch) === null || _a === void 0 ? void 0 : _a.optimizeNames(names, constants);\n        (_b = this.finally) === null || _b === void 0 ? void 0 : _b.optimizeNames(names, constants);\n        return this;\n    }\n    get names() {\n        const names = super.names;\n        if (this.catch)\n            addNames(names, this.catch.names);\n        if (this.finally)\n            addNames(names, this.finally.names);\n        return names;\n    }\n}\nclass Catch extends BlockNode {\n    constructor(error) {\n        super();\n        this.error = error;\n    }\n    render(opts) {\n        return `catch(${this.error})` + super.render(opts);\n    }\n}\nCatch.kind = \"catch\";\nclass Finally extends BlockNode {\n    render(opts) {\n        return \"finally\" + super.render(opts);\n    }\n}\nFinally.kind = \"finally\";\nclass CodeGen {\n    constructor(extScope, opts = {}) {\n        this._values = {};\n        this._blockStarts = [];\n        this._constants = {};\n        this.opts = { ...opts, _n: opts.lines ? \"\\n\" : \"\" };\n        this._extScope = extScope;\n        this._scope = new scope_1.Scope({ parent: extScope });\n        this._nodes = [new Root()];\n    }\n    toString() {\n        return this._root.render(this.opts);\n    }\n    // returns unique name in the internal scope\n    name(prefix) {\n        return this._scope.name(prefix);\n    }\n    // reserves unique name in the external scope\n    scopeName(prefix) {\n        return this._extScope.name(prefix);\n    }\n    // reserves unique name in the external scope and assigns value to it\n    scopeValue(prefixOrName, value) {\n        const name = this._extScope.value(prefixOrName, value);\n        const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set());\n        vs.add(name);\n        return name;\n    }\n    getScopeValue(prefix, keyOrRef) {\n        return this._extScope.getValue(prefix, keyOrRef);\n    }\n    // return code that assigns values in the external scope to the names that are used internally\n    // (same names that were returned by gen.scopeName or gen.scopeValue)\n    scopeRefs(scopeName) {\n        return this._extScope.scopeRefs(scopeName, this._values);\n    }\n    scopeCode() {\n        return this._extScope.scopeCode(this._values);\n    }\n    _def(varKind, nameOrPrefix, rhs, constant) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (rhs !== undefined && constant)\n            this._constants[name.str] = rhs;\n        this._leafNode(new Def(varKind, name, rhs));\n        return name;\n    }\n    // `const` declaration (`var` in es5 mode)\n    const(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.const, nameOrPrefix, rhs, _constant);\n    }\n    // `let` declaration with optional assignment (`var` in es5 mode)\n    let(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.let, nameOrPrefix, rhs, _constant);\n    }\n    // `var` declaration with optional assignment\n    var(nameOrPrefix, rhs, _constant) {\n        return this._def(scope_1.varKinds.var, nameOrPrefix, rhs, _constant);\n    }\n    // assignment code\n    assign(lhs, rhs, sideEffects) {\n        return this._leafNode(new Assign(lhs, rhs, sideEffects));\n    }\n    // `+=` code\n    add(lhs, rhs) {\n        return this._leafNode(new AssignOp(lhs, exports.operators.ADD, rhs));\n    }\n    // appends passed SafeExpr to code or executes Block\n    code(c) {\n        if (typeof c == \"function\")\n            c();\n        else if (c !== code_1.nil)\n            this._leafNode(new AnyCode(c));\n        return this;\n    }\n    // returns code for object literal for the passed argument list of key-value pairs\n    object(...keyValues) {\n        const code = [\"{\"];\n        for (const [key, value] of keyValues) {\n            if (code.length > 1)\n                code.push(\",\");\n            code.push(key);\n            if (key !== value || this.opts.es5) {\n                code.push(\":\");\n                (0, code_1.addCodeArg)(code, value);\n            }\n        }\n        code.push(\"}\");\n        return new code_1._Code(code);\n    }\n    // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n    if(condition, thenBody, elseBody) {\n        this._blockNode(new If(condition));\n        if (thenBody && elseBody) {\n            this.code(thenBody).else().code(elseBody).endIf();\n        }\n        else if (thenBody) {\n            this.code(thenBody).endIf();\n        }\n        else if (elseBody) {\n            throw new Error('CodeGen: \"else\" body without \"then\" body');\n        }\n        return this;\n    }\n    // `else if` clause - invalid without `if` or after `else` clauses\n    elseIf(condition) {\n        return this._elseNode(new If(condition));\n    }\n    // `else` clause - only valid after `if` or `else if` clauses\n    else() {\n        return this._elseNode(new Else());\n    }\n    // end `if` statement (needed if gen.if was used only with condition)\n    endIf() {\n        return this._endBlockNode(If, Else);\n    }\n    _for(node, forBody) {\n        this._blockNode(node);\n        if (forBody)\n            this.code(forBody).endFor();\n        return this;\n    }\n    // a generic `for` clause (or statement if `forBody` is passed)\n    for(iteration, forBody) {\n        return this._for(new ForLoop(iteration), forBody);\n    }\n    // `for` statement for a range of values\n    forRange(nameOrPrefix, from, to, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.let) {\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForRange(varKind, name, from, to), () => forBody(name));\n    }\n    // `for-of` statement (in es5 mode replace with a normal for loop)\n    forOf(nameOrPrefix, iterable, forBody, varKind = scope_1.varKinds.const) {\n        const name = this._scope.toName(nameOrPrefix);\n        if (this.opts.es5) {\n            const arr = iterable instanceof code_1.Name ? iterable : this.var(\"_arr\", iterable);\n            return this.forRange(\"_i\", 0, (0, code_1._) `${arr}.length`, (i) => {\n                this.var(name, (0, code_1._) `${arr}[${i}]`);\n                forBody(name);\n            });\n        }\n        return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name));\n    }\n    // `for-in` statement.\n    // With option `ownProperties` replaced with a `for-of` loop for object keys\n    forIn(nameOrPrefix, obj, forBody, varKind = this.opts.es5 ? scope_1.varKinds.var : scope_1.varKinds.const) {\n        if (this.opts.ownProperties) {\n            return this.forOf(nameOrPrefix, (0, code_1._) `Object.keys(${obj})`, forBody);\n        }\n        const name = this._scope.toName(nameOrPrefix);\n        return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name));\n    }\n    // end `for` loop\n    endFor() {\n        return this._endBlockNode(For);\n    }\n    // `label` statement\n    label(label) {\n        return this._leafNode(new Label(label));\n    }\n    // `break` statement\n    break(label) {\n        return this._leafNode(new Break(label));\n    }\n    // `return` statement\n    return(value) {\n        const node = new Return();\n        this._blockNode(node);\n        this.code(value);\n        if (node.nodes.length !== 1)\n            throw new Error('CodeGen: \"return\" should have one node');\n        return this._endBlockNode(Return);\n    }\n    // `try` statement\n    try(tryBody, catchCode, finallyCode) {\n        if (!catchCode && !finallyCode)\n            throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"');\n        const node = new Try();\n        this._blockNode(node);\n        this.code(tryBody);\n        if (catchCode) {\n            const error = this.name(\"e\");\n            this._currNode = node.catch = new Catch(error);\n            catchCode(error);\n        }\n        if (finallyCode) {\n            this._currNode = node.finally = new Finally();\n            this.code(finallyCode);\n        }\n        return this._endBlockNode(Catch, Finally);\n    }\n    // `throw` statement\n    throw(error) {\n        return this._leafNode(new Throw(error));\n    }\n    // start self-balancing block\n    block(body, nodeCount) {\n        this._blockStarts.push(this._nodes.length);\n        if (body)\n            this.code(body).endBlock(nodeCount);\n        return this;\n    }\n    // end the current self-balancing block\n    endBlock(nodeCount) {\n        const len = this._blockStarts.pop();\n        if (len === undefined)\n            throw new Error(\"CodeGen: not in self-balancing block\");\n        const toClose = this._nodes.length - len;\n        if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n            throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`);\n        }\n        this._nodes.length = len;\n        return this;\n    }\n    // `function` heading (or definition if funcBody is passed)\n    func(name, args = code_1.nil, async, funcBody) {\n        this._blockNode(new Func(name, args, async));\n        if (funcBody)\n            this.code(funcBody).endFunc();\n        return this;\n    }\n    // end function definition\n    endFunc() {\n        return this._endBlockNode(Func);\n    }\n    optimize(n = 1) {\n        while (n-- > 0) {\n            this._root.optimizeNodes();\n            this._root.optimizeNames(this._root.names, this._constants);\n        }\n    }\n    _leafNode(node) {\n        this._currNode.nodes.push(node);\n        return this;\n    }\n    _blockNode(node) {\n        this._currNode.nodes.push(node);\n        this._nodes.push(node);\n    }\n    _endBlockNode(N1, N2) {\n        const n = this._currNode;\n        if (n instanceof N1 || (N2 && n instanceof N2)) {\n            this._nodes.pop();\n            return this;\n        }\n        throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`);\n    }\n    _elseNode(node) {\n        const n = this._currNode;\n        if (!(n instanceof If)) {\n            throw new Error('CodeGen: \"else\" without \"if\"');\n        }\n        this._currNode = n.else = node;\n        return this;\n    }\n    get _root() {\n        return this._nodes[0];\n    }\n    get _currNode() {\n        const ns = this._nodes;\n        return ns[ns.length - 1];\n    }\n    set _currNode(node) {\n        const ns = this._nodes;\n        ns[ns.length - 1] = node;\n    }\n}\nexports.CodeGen = CodeGen;\nfunction addNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) + (from[n] || 0);\n    return names;\n}\nfunction addExprNames(names, from) {\n    return from instanceof code_1._CodeOrName ? addNames(names, from.names) : names;\n}\nfunction optimizeExpr(expr, names, constants) {\n    if (expr instanceof code_1.Name)\n        return replaceName(expr);\n    if (!canOptimize(expr))\n        return expr;\n    return new code_1._Code(expr._items.reduce((items, c) => {\n        if (c instanceof code_1.Name)\n            c = replaceName(c);\n        if (c instanceof code_1._Code)\n            items.push(...c._items);\n        else\n            items.push(c);\n        return items;\n    }, []));\n    function replaceName(n) {\n        const c = constants[n.str];\n        if (c === undefined || names[n.str] !== 1)\n            return n;\n        delete names[n.str];\n        return c;\n    }\n    function canOptimize(e) {\n        return (e instanceof code_1._Code &&\n            e._items.some((c) => c instanceof code_1.Name && names[c.str] === 1 && constants[c.str] !== undefined));\n    }\n}\nfunction subtractNames(names, from) {\n    for (const n in from)\n        names[n] = (names[n] || 0) - (from[n] || 0);\n}\nfunction not(x) {\n    return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : (0, code_1._) `!${par(x)}`;\n}\nexports.not = not;\nconst andCode = mappend(exports.operators.AND);\n// boolean AND (&&) expression with the passed arguments\nfunction and(...args) {\n    return args.reduce(andCode);\n}\nexports.and = and;\nconst orCode = mappend(exports.operators.OR);\n// boolean OR (||) expression with the passed arguments\nfunction or(...args) {\n    return args.reduce(orCode);\n}\nexports.or = or;\nfunction mappend(op) {\n    return (x, y) => (x === code_1.nil ? y : y === code_1.nil ? x : (0, code_1._) `${par(x)} ${op} ${par(y)}`);\n}\nfunction par(x) {\n    return x instanceof code_1.Name ? x : (0, code_1._) `(${x})`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValueScope = exports.ValueScopeName = exports.Scope = exports.varKinds = exports.UsedValueState = void 0;\nconst code_1 = require(\"./code\");\nclass ValueError extends Error {\n    constructor(name) {\n        super(`CodeGen: \"code\" for ${name} not defined`);\n        this.value = name.value;\n    }\n}\nvar UsedValueState;\n(function (UsedValueState) {\n    UsedValueState[UsedValueState[\"Started\"] = 0] = \"Started\";\n    UsedValueState[UsedValueState[\"Completed\"] = 1] = \"Completed\";\n})(UsedValueState = exports.UsedValueState || (exports.UsedValueState = {}));\nexports.varKinds = {\n    const: new code_1.Name(\"const\"),\n    let: new code_1.Name(\"let\"),\n    var: new code_1.Name(\"var\"),\n};\nclass Scope {\n    constructor({ prefixes, parent } = {}) {\n        this._names = {};\n        this._prefixes = prefixes;\n        this._parent = parent;\n    }\n    toName(nameOrPrefix) {\n        return nameOrPrefix instanceof code_1.Name ? nameOrPrefix : this.name(nameOrPrefix);\n    }\n    name(prefix) {\n        return new code_1.Name(this._newName(prefix));\n    }\n    _newName(prefix) {\n        const ng = this._names[prefix] || this._nameGroup(prefix);\n        return `${prefix}${ng.index++}`;\n    }\n    _nameGroup(prefix) {\n        var _a, _b;\n        if (((_b = (_a = this._parent) === null || _a === void 0 ? void 0 : _a._prefixes) === null || _b === void 0 ? void 0 : _b.has(prefix)) || (this._prefixes && !this._prefixes.has(prefix))) {\n            throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`);\n        }\n        return (this._names[prefix] = { prefix, index: 0 });\n    }\n}\nexports.Scope = Scope;\nclass ValueScopeName extends code_1.Name {\n    constructor(prefix, nameStr) {\n        super(nameStr);\n        this.prefix = prefix;\n    }\n    setValue(value, { property, itemIndex }) {\n        this.value = value;\n        this.scopePath = (0, code_1._) `.${new code_1.Name(property)}[${itemIndex}]`;\n    }\n}\nexports.ValueScopeName = ValueScopeName;\nconst line = (0, code_1._) `\\n`;\nclass ValueScope extends Scope {\n    constructor(opts) {\n        super(opts);\n        this._values = {};\n        this._scope = opts.scope;\n        this.opts = { ...opts, _n: opts.lines ? line : code_1.nil };\n    }\n    get() {\n        return this._scope;\n    }\n    name(prefix) {\n        return new ValueScopeName(prefix, this._newName(prefix));\n    }\n    value(nameOrPrefix, value) {\n        var _a;\n        if (value.ref === undefined)\n            throw new Error(\"CodeGen: ref must be passed in value\");\n        const name = this.toName(nameOrPrefix);\n        const { prefix } = name;\n        const valueKey = (_a = value.key) !== null && _a !== void 0 ? _a : value.ref;\n        let vs = this._values[prefix];\n        if (vs) {\n            const _name = vs.get(valueKey);\n            if (_name)\n                return _name;\n        }\n        else {\n            vs = this._values[prefix] = new Map();\n        }\n        vs.set(valueKey, name);\n        const s = this._scope[prefix] || (this._scope[prefix] = []);\n        const itemIndex = s.length;\n        s[itemIndex] = value.ref;\n        name.setValue(value, { property: prefix, itemIndex });\n        return name;\n    }\n    getValue(prefix, keyOrRef) {\n        const vs = this._values[prefix];\n        if (!vs)\n            return;\n        return vs.get(keyOrRef);\n    }\n    scopeRefs(scopeName, values = this._values) {\n        return this._reduceValues(values, (name) => {\n            if (name.scopePath === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return (0, code_1._) `${scopeName}${name.scopePath}`;\n        });\n    }\n    scopeCode(values = this._values, usedValues, getCode) {\n        return this._reduceValues(values, (name) => {\n            if (name.value === undefined)\n                throw new Error(`CodeGen: name \"${name}\" has no value`);\n            return name.value.code;\n        }, usedValues, getCode);\n    }\n    _reduceValues(values, valueCode, usedValues = {}, getCode) {\n        let code = code_1.nil;\n        for (const prefix in values) {\n            const vs = values[prefix];\n            if (!vs)\n                continue;\n            const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map());\n            vs.forEach((name) => {\n                if (nameSet.has(name))\n                    return;\n                nameSet.set(name, UsedValueState.Started);\n                let c = valueCode(name);\n                if (c) {\n                    const def = this.opts.es5 ? exports.varKinds.var : exports.varKinds.const;\n                    code = (0, code_1._) `${code}${def} ${name} = ${c};${this.opts._n}`;\n                }\n                else if ((c = getCode === null || getCode === void 0 ? void 0 : getCode(name))) {\n                    code = (0, code_1._) `${code}${c}${this.opts._n}`;\n                }\n                else {\n                    throw new ValueError(name);\n                }\n                nameSet.set(name, UsedValueState.Completed);\n            });\n        }\n        return code;\n    }\n}\nexports.ValueScope = ValueScope;\n//# sourceMappingURL=scope.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendErrors = exports.resetErrorsCount = exports.reportExtraError = exports.reportError = exports.keyword$DataError = exports.keywordError = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst util_1 = require(\"./util\");\nconst names_1 = require(\"./names\");\nexports.keywordError = {\n    message: ({ keyword }) => (0, codegen_1.str) `must pass \"${keyword}\" keyword validation`,\n};\nexports.keyword$DataError = {\n    message: ({ keyword, schemaType }) => schemaType\n        ? (0, codegen_1.str) `\"${keyword}\" keyword must be ${schemaType} ($data)`\n        : (0, codegen_1.str) `\"${keyword}\" keyword is invalid ($data)`,\n};\nfunction reportError(cxt, error = exports.keywordError, errorPaths, overrideAllErrors) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    if (overrideAllErrors !== null && overrideAllErrors !== void 0 ? overrideAllErrors : (compositeRule || allErrors)) {\n        addError(gen, errObj);\n    }\n    else {\n        returnErrors(it, (0, codegen_1._) `[${errObj}]`);\n    }\n}\nexports.reportError = reportError;\nfunction reportExtraError(cxt, error = exports.keywordError, errorPaths) {\n    const { it } = cxt;\n    const { gen, compositeRule, allErrors } = it;\n    const errObj = errorObjectCode(cxt, error, errorPaths);\n    addError(gen, errObj);\n    if (!(compositeRule || allErrors)) {\n        returnErrors(it, names_1.default.vErrors);\n    }\n}\nexports.reportExtraError = reportExtraError;\nfunction resetErrorsCount(gen, errsCount) {\n    gen.assign(names_1.default.errors, errsCount);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} !== null`, () => gen.if(errsCount, () => gen.assign((0, codegen_1._) `${names_1.default.vErrors}.length`, errsCount), () => gen.assign(names_1.default.vErrors, null)));\n}\nexports.resetErrorsCount = resetErrorsCount;\nfunction extendErrors({ gen, keyword, schemaValue, data, errsCount, it, }) {\n    /* istanbul ignore if */\n    if (errsCount === undefined)\n        throw new Error(\"ajv implementation error\");\n    const err = gen.name(\"err\");\n    gen.forRange(\"i\", errsCount, names_1.default.errors, (i) => {\n        gen.const(err, (0, codegen_1._) `${names_1.default.vErrors}[${i}]`);\n        gen.if((0, codegen_1._) `${err}.instancePath === undefined`, () => gen.assign((0, codegen_1._) `${err}.instancePath`, (0, codegen_1.strConcat)(names_1.default.instancePath, it.errorPath)));\n        gen.assign((0, codegen_1._) `${err}.schemaPath`, (0, codegen_1.str) `${it.errSchemaPath}/${keyword}`);\n        if (it.opts.verbose) {\n            gen.assign((0, codegen_1._) `${err}.schema`, schemaValue);\n            gen.assign((0, codegen_1._) `${err}.data`, data);\n        }\n    });\n}\nexports.extendErrors = extendErrors;\nfunction addError(gen, errObj) {\n    const err = gen.const(\"err\", errObj);\n    gen.if((0, codegen_1._) `${names_1.default.vErrors} === null`, () => gen.assign(names_1.default.vErrors, (0, codegen_1._) `[${err}]`), (0, codegen_1._) `${names_1.default.vErrors}.push(${err})`);\n    gen.code((0, codegen_1._) `${names_1.default.errors}++`);\n}\nfunction returnErrors(it, errs) {\n    const { gen, validateName, schemaEnv } = it;\n    if (schemaEnv.$async) {\n        gen.throw((0, codegen_1._) `new ${it.ValidationError}(${errs})`);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, errs);\n        gen.return(false);\n    }\n}\nconst E = {\n    keyword: new codegen_1.Name(\"keyword\"),\n    schemaPath: new codegen_1.Name(\"schemaPath\"),\n    params: new codegen_1.Name(\"params\"),\n    propertyName: new codegen_1.Name(\"propertyName\"),\n    message: new codegen_1.Name(\"message\"),\n    schema: new codegen_1.Name(\"schema\"),\n    parentSchema: new codegen_1.Name(\"parentSchema\"),\n};\nfunction errorObjectCode(cxt, error, errorPaths) {\n    const { createErrors } = cxt.it;\n    if (createErrors === false)\n        return (0, codegen_1._) `{}`;\n    return errorObject(cxt, error, errorPaths);\n}\nfunction errorObject(cxt, error, errorPaths = {}) {\n    const { gen, it } = cxt;\n    const keyValues = [\n        errorInstancePath(it, errorPaths),\n        errorSchemaPath(cxt, errorPaths),\n    ];\n    extraErrorProps(cxt, error, keyValues);\n    return gen.object(...keyValues);\n}\nfunction errorInstancePath({ errorPath }, { instancePath }) {\n    const instPath = instancePath\n        ? (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(instancePath, util_1.Type.Str)}`\n        : errorPath;\n    return [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, instPath)];\n}\nfunction errorSchemaPath({ keyword, it: { errSchemaPath } }, { schemaPath, parentSchema }) {\n    let schPath = parentSchema ? errSchemaPath : (0, codegen_1.str) `${errSchemaPath}/${keyword}`;\n    if (schemaPath) {\n        schPath = (0, codegen_1.str) `${schPath}${(0, util_1.getErrorPath)(schemaPath, util_1.Type.Str)}`;\n    }\n    return [E.schemaPath, schPath];\n}\nfunction extraErrorProps(cxt, { params, message }, keyValues) {\n    const { keyword, data, schemaValue, it } = cxt;\n    const { opts, propertyName, topSchemaRef, schemaPath } = it;\n    keyValues.push([E.keyword, keyword], [E.params, typeof params == \"function\" ? params(cxt) : params || (0, codegen_1._) `{}`]);\n    if (opts.messages) {\n        keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message]);\n    }\n    if (opts.verbose) {\n        keyValues.push([E.schema, schemaValue], [E.parentSchema, (0, codegen_1._) `${topSchemaRef}${schemaPath}`], [names_1.default.data, data]);\n    }\n    if (propertyName)\n        keyValues.push([E.propertyName, propertyName]);\n}\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSchema = exports.getCompilingSchema = exports.resolveRef = exports.compileSchema = exports.SchemaEnv = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst validation_error_1 = require(\"../runtime/validation_error\");\nconst names_1 = require(\"./names\");\nconst resolve_1 = require(\"./resolve\");\nconst util_1 = require(\"./util\");\nconst validate_1 = require(\"./validate\");\nclass SchemaEnv {\n    constructor(env) {\n        var _a;\n        this.refs = {};\n        this.dynamicAnchors = {};\n        let schema;\n        if (typeof env.schema == \"object\")\n            schema = env.schema;\n        this.schema = env.schema;\n        this.schemaId = env.schemaId;\n        this.root = env.root || this;\n        this.baseId = (_a = env.baseId) !== null && _a !== void 0 ? _a : (0, resolve_1.normalizeId)(schema === null || schema === void 0 ? void 0 : schema[env.schemaId || \"$id\"]);\n        this.schemaPath = env.schemaPath;\n        this.localRefs = env.localRefs;\n        this.meta = env.meta;\n        this.$async = schema === null || schema === void 0 ? void 0 : schema.$async;\n        this.refs = {};\n    }\n}\nexports.SchemaEnv = SchemaEnv;\n// let codeSize = 0\n// let nodeCount = 0\n// Compiles schema in SchemaEnv\nfunction compileSchema(sch) {\n    // TODO refactor - remove compilations\n    const _sch = getCompilingSchema.call(this, sch);\n    if (_sch)\n        return _sch;\n    const rootId = (0, resolve_1.getFullPath)(this.opts.uriResolver, sch.root.baseId); // TODO if getFullPath removed 1 tests fails\n    const { es5, lines } = this.opts.code;\n    const { ownProperties } = this.opts;\n    const gen = new codegen_1.CodeGen(this.scope, { es5, lines, ownProperties });\n    let _ValidationError;\n    if (sch.$async) {\n        _ValidationError = gen.scopeValue(\"Error\", {\n            ref: validation_error_1.default,\n            code: (0, codegen_1._) `require(\"ajv/dist/runtime/validation_error\").default`,\n        });\n    }\n    const validateName = gen.scopeName(\"validate\");\n    sch.validateName = validateName;\n    const schemaCxt = {\n        gen,\n        allErrors: this.opts.allErrors,\n        data: names_1.default.data,\n        parentData: names_1.default.parentData,\n        parentDataProperty: names_1.default.parentDataProperty,\n        dataNames: [names_1.default.data],\n        dataPathArr: [codegen_1.nil],\n        dataLevel: 0,\n        dataTypes: [],\n        definedProperties: new Set(),\n        topSchemaRef: gen.scopeValue(\"schema\", this.opts.code.source === true\n            ? { ref: sch.schema, code: (0, codegen_1.stringify)(sch.schema) }\n            : { ref: sch.schema }),\n        validateName,\n        ValidationError: _ValidationError,\n        schema: sch.schema,\n        schemaEnv: sch,\n        rootId,\n        baseId: sch.baseId || rootId,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n        errorPath: (0, codegen_1._) `\"\"`,\n        opts: this.opts,\n        self: this,\n    };\n    let sourceCode;\n    try {\n        this._compilations.add(sch);\n        (0, validate_1.validateFunctionCode)(schemaCxt);\n        gen.optimize(this.opts.code.optimize);\n        // gen.optimize(1)\n        const validateCode = gen.toString();\n        sourceCode = `${gen.scopeRefs(names_1.default.scope)}return ${validateCode}`;\n        // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n        if (this.opts.code.process)\n            sourceCode = this.opts.code.process(sourceCode, sch);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n        const makeValidate = new Function(`${names_1.default.self}`, `${names_1.default.scope}`, sourceCode);\n        const validate = makeValidate(this, this.scope.get());\n        this.scope.value(validateName, { ref: validate });\n        validate.errors = null;\n        validate.schema = sch.schema;\n        validate.schemaEnv = sch;\n        if (sch.$async)\n            validate.$async = true;\n        if (this.opts.code.source === true) {\n            validate.source = { validateName, validateCode, scopeValues: gen._values };\n        }\n        if (this.opts.unevaluated) {\n            const { props, items } = schemaCxt;\n            validate.evaluated = {\n                props: props instanceof codegen_1.Name ? undefined : props,\n                items: items instanceof codegen_1.Name ? undefined : items,\n                dynamicProps: props instanceof codegen_1.Name,\n                dynamicItems: items instanceof codegen_1.Name,\n            };\n            if (validate.source)\n                validate.source.evaluated = (0, codegen_1.stringify)(validate.evaluated);\n        }\n        sch.validate = validate;\n        return sch;\n    }\n    catch (e) {\n        delete sch.validate;\n        delete sch.validateName;\n        if (sourceCode)\n            this.logger.error(\"Error compiling schema, function code:\", sourceCode);\n        // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n        throw e;\n    }\n    finally {\n        this._compilations.delete(sch);\n    }\n}\nexports.compileSchema = compileSchema;\nfunction resolveRef(root, baseId, ref) {\n    var _a;\n    ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, ref);\n    const schOrFunc = root.refs[ref];\n    if (schOrFunc)\n        return schOrFunc;\n    let _sch = resolve.call(this, root, ref);\n    if (_sch === undefined) {\n        const schema = (_a = root.localRefs) === null || _a === void 0 ? void 0 : _a[ref]; // TODO maybe localRefs should hold SchemaEnv\n        const { schemaId } = this.opts;\n        if (schema)\n            _sch = new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    if (_sch === undefined)\n        return;\n    return (root.refs[ref] = inlineOrCompile.call(this, _sch));\n}\nexports.resolveRef = resolveRef;\nfunction inlineOrCompile(sch) {\n    if ((0, resolve_1.inlineRef)(sch.schema, this.opts.inlineRefs))\n        return sch.schema;\n    return sch.validate ? sch : compileSchema.call(this, sch);\n}\n// Index of schema compilation in the currently compiled list\nfunction getCompilingSchema(schEnv) {\n    for (const sch of this._compilations) {\n        if (sameSchemaEnv(sch, schEnv))\n            return sch;\n    }\n}\nexports.getCompilingSchema = getCompilingSchema;\nfunction sameSchemaEnv(s1, s2) {\n    return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId;\n}\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(root, // information about the root schema for the current schema\nref // reference to resolve\n) {\n    let sch;\n    while (typeof (sch = this.refs[ref]) == \"string\")\n        ref = sch;\n    return sch || this.schemas[ref] || resolveSchema.call(this, root, ref);\n}\n// Resolve schema, its root and baseId\nfunction resolveSchema(root, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\nref // reference to resolve\n) {\n    const p = this.opts.uriResolver.parse(ref);\n    const refPath = (0, resolve_1._getFullPath)(this.opts.uriResolver, p);\n    let baseId = (0, resolve_1.getFullPath)(this.opts.uriResolver, root.baseId, undefined);\n    // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n    if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n        return getJsonPointer.call(this, p, root);\n    }\n    const id = (0, resolve_1.normalizeId)(refPath);\n    const schOrRef = this.refs[id] || this.schemas[id];\n    if (typeof schOrRef == \"string\") {\n        const sch = resolveSchema.call(this, root, schOrRef);\n        if (typeof (sch === null || sch === void 0 ? void 0 : sch.schema) !== \"object\")\n            return;\n        return getJsonPointer.call(this, p, sch);\n    }\n    if (typeof (schOrRef === null || schOrRef === void 0 ? void 0 : schOrRef.schema) !== \"object\")\n        return;\n    if (!schOrRef.validate)\n        compileSchema.call(this, schOrRef);\n    if (id === (0, resolve_1.normalizeId)(ref)) {\n        const { schema } = schOrRef;\n        const { schemaId } = this.opts;\n        const schId = schema[schemaId];\n        if (schId)\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        return new SchemaEnv({ schema, schemaId, root, baseId });\n    }\n    return getJsonPointer.call(this, p, schOrRef);\n}\nexports.resolveSchema = resolveSchema;\nconst PREVENT_SCOPE_CHANGE = new Set([\n    \"properties\",\n    \"patternProperties\",\n    \"enum\",\n    \"dependencies\",\n    \"definitions\",\n]);\nfunction getJsonPointer(parsedRef, { baseId, schema, root }) {\n    var _a;\n    if (((_a = parsedRef.fragment) === null || _a === void 0 ? void 0 : _a[0]) !== \"/\")\n        return;\n    for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n        if (typeof schema === \"boolean\")\n            return;\n        const partSchema = schema[(0, util_1.unescapeFragment)(part)];\n        if (partSchema === undefined)\n            return;\n        schema = partSchema;\n        // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n        const schId = typeof schema === \"object\" && schema[this.opts.schemaId];\n        if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n            baseId = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schId);\n        }\n    }\n    let env;\n    if (typeof schema != \"boolean\" && schema.$ref && !(0, util_1.schemaHasRulesButRef)(schema, this.RULES)) {\n        const $ref = (0, resolve_1.resolveUrl)(this.opts.uriResolver, baseId, schema.$ref);\n        env = resolveSchema.call(this, root, $ref);\n    }\n    // even though resolution failed we need to return SchemaEnv to throw exception\n    // so that compileAsync loads missing schema.\n    const { schemaId } = this.opts;\n    env = env || new SchemaEnv({ schema, schemaId, root, baseId });\n    if (env.schema !== env.root.schema)\n        return env;\n    return undefined;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"./codegen\");\nconst names = {\n    // validation function arguments\n    data: new codegen_1.Name(\"data\"),\n    // args passed from referencing schema\n    valCxt: new codegen_1.Name(\"valCxt\"),\n    instancePath: new codegen_1.Name(\"instancePath\"),\n    parentData: new codegen_1.Name(\"parentData\"),\n    parentDataProperty: new codegen_1.Name(\"parentDataProperty\"),\n    rootData: new codegen_1.Name(\"rootData\"),\n    dynamicAnchors: new codegen_1.Name(\"dynamicAnchors\"),\n    // function scoped variables\n    vErrors: new codegen_1.Name(\"vErrors\"),\n    errors: new codegen_1.Name(\"errors\"),\n    this: new codegen_1.Name(\"this\"),\n    // \"globals\"\n    self: new codegen_1.Name(\"self\"),\n    scope: new codegen_1.Name(\"scope\"),\n    // JTD serialize/parse name for JSON string and position\n    json: new codegen_1.Name(\"json\"),\n    jsonPos: new codegen_1.Name(\"jsonPos\"),\n    jsonLen: new codegen_1.Name(\"jsonLen\"),\n    jsonPart: new codegen_1.Name(\"jsonPart\"),\n};\nexports.default = names;\n//# sourceMappingURL=names.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst resolve_1 = require(\"./resolve\");\nclass MissingRefError extends Error {\n    constructor(resolver, baseId, ref, msg) {\n        super(msg || `can't resolve reference ${ref} from id ${baseId}`);\n        this.missingRef = (0, resolve_1.resolveUrl)(resolver, baseId, ref);\n        this.missingSchema = (0, resolve_1.normalizeId)((0, resolve_1.getFullPath)(resolver, this.missingRef));\n    }\n}\nexports.default = MissingRefError;\n//# sourceMappingURL=ref_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemaRefs = exports.resolveUrl = exports.normalizeId = exports._getFullPath = exports.getFullPath = exports.inlineRef = void 0;\nconst util_1 = require(\"./util\");\nconst equal = require(\"fast-deep-equal\");\nconst traverse = require(\"json-schema-traverse\");\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n    \"type\",\n    \"format\",\n    \"pattern\",\n    \"maxLength\",\n    \"minLength\",\n    \"maxProperties\",\n    \"minProperties\",\n    \"maxItems\",\n    \"minItems\",\n    \"maximum\",\n    \"minimum\",\n    \"uniqueItems\",\n    \"multipleOf\",\n    \"required\",\n    \"enum\",\n    \"const\",\n]);\nfunction inlineRef(schema, limit = true) {\n    if (typeof schema == \"boolean\")\n        return true;\n    if (limit === true)\n        return !hasRef(schema);\n    if (!limit)\n        return false;\n    return countKeys(schema) <= limit;\n}\nexports.inlineRef = inlineRef;\nconst REF_KEYWORDS = new Set([\n    \"$ref\",\n    \"$recursiveRef\",\n    \"$recursiveAnchor\",\n    \"$dynamicRef\",\n    \"$dynamicAnchor\",\n]);\nfunction hasRef(schema) {\n    for (const key in schema) {\n        if (REF_KEYWORDS.has(key))\n            return true;\n        const sch = schema[key];\n        if (Array.isArray(sch) && sch.some(hasRef))\n            return true;\n        if (typeof sch == \"object\" && hasRef(sch))\n            return true;\n    }\n    return false;\n}\nfunction countKeys(schema) {\n    let count = 0;\n    for (const key in schema) {\n        if (key === \"$ref\")\n            return Infinity;\n        count++;\n        if (SIMPLE_INLINED.has(key))\n            continue;\n        if (typeof schema[key] == \"object\") {\n            (0, util_1.eachItem)(schema[key], (sch) => (count += countKeys(sch)));\n        }\n        if (count === Infinity)\n            return Infinity;\n    }\n    return count;\n}\nfunction getFullPath(resolver, id = \"\", normalize) {\n    if (normalize !== false)\n        id = normalizeId(id);\n    const p = resolver.parse(id);\n    return _getFullPath(resolver, p);\n}\nexports.getFullPath = getFullPath;\nfunction _getFullPath(resolver, p) {\n    const serialized = resolver.serialize(p);\n    return serialized.split(\"#\")[0] + \"#\";\n}\nexports._getFullPath = _getFullPath;\nconst TRAILING_SLASH_HASH = /#\\/?$/;\nfunction normalizeId(id) {\n    return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\";\n}\nexports.normalizeId = normalizeId;\nfunction resolveUrl(resolver, baseId, id) {\n    id = normalizeId(id);\n    return resolver.resolve(baseId, id);\n}\nexports.resolveUrl = resolveUrl;\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i;\nfunction getSchemaRefs(schema, baseId) {\n    if (typeof schema == \"boolean\")\n        return {};\n    const { schemaId, uriResolver } = this.opts;\n    const schId = normalizeId(schema[schemaId] || baseId);\n    const baseIds = { \"\": schId };\n    const pathPrefix = getFullPath(uriResolver, schId, false);\n    const localRefs = {};\n    const schemaRefs = new Set();\n    traverse(schema, { allKeys: true }, (sch, jsonPtr, _, parentJsonPtr) => {\n        if (parentJsonPtr === undefined)\n            return;\n        const fullPath = pathPrefix + jsonPtr;\n        let baseId = baseIds[parentJsonPtr];\n        if (typeof sch[schemaId] == \"string\")\n            baseId = addRef.call(this, sch[schemaId]);\n        addAnchor.call(this, sch.$anchor);\n        addAnchor.call(this, sch.$dynamicAnchor);\n        baseIds[jsonPtr] = baseId;\n        function addRef(ref) {\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            const _resolve = this.opts.uriResolver.resolve;\n            ref = normalizeId(baseId ? _resolve(baseId, ref) : ref);\n            if (schemaRefs.has(ref))\n                throw ambiguos(ref);\n            schemaRefs.add(ref);\n            let schOrRef = this.refs[ref];\n            if (typeof schOrRef == \"string\")\n                schOrRef = this.refs[schOrRef];\n            if (typeof schOrRef == \"object\") {\n                checkAmbiguosRef(sch, schOrRef.schema, ref);\n            }\n            else if (ref !== normalizeId(fullPath)) {\n                if (ref[0] === \"#\") {\n                    checkAmbiguosRef(sch, localRefs[ref], ref);\n                    localRefs[ref] = sch;\n                }\n                else {\n                    this.refs[ref] = fullPath;\n                }\n            }\n            return ref;\n        }\n        function addAnchor(anchor) {\n            if (typeof anchor == \"string\") {\n                if (!ANCHOR.test(anchor))\n                    throw new Error(`invalid anchor \"${anchor}\"`);\n                addRef.call(this, `#${anchor}`);\n            }\n        }\n    });\n    return localRefs;\n    function checkAmbiguosRef(sch1, sch2, ref) {\n        if (sch2 !== undefined && !equal(sch1, sch2))\n            throw ambiguos(ref);\n    }\n    function ambiguos(ref) {\n        return new Error(`reference \"${ref}\" resolves to more than one schema`);\n    }\n}\nexports.getSchemaRefs = getSchemaRefs;\n//# sourceMappingURL=resolve.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRules = exports.isJSONType = void 0;\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"];\nconst jsonTypes = new Set(_jsonTypes);\nfunction isJSONType(x) {\n    return typeof x == \"string\" && jsonTypes.has(x);\n}\nexports.isJSONType = isJSONType;\nfunction getRules() {\n    const groups = {\n        number: { type: \"number\", rules: [] },\n        string: { type: \"string\", rules: [] },\n        array: { type: \"array\", rules: [] },\n        object: { type: \"object\", rules: [] },\n    };\n    return {\n        types: { ...groups, integer: true, boolean: true, null: true },\n        rules: [{ rules: [] }, groups.number, groups.string, groups.array, groups.object],\n        post: { rules: [] },\n        all: {},\n        keywords: {},\n    };\n}\nexports.getRules = getRules;\n//# sourceMappingURL=rules.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkStrictMode = exports.getErrorPath = exports.Type = exports.useFunc = exports.setEvaluated = exports.evaluatedPropsToName = exports.mergeEvaluated = exports.eachItem = exports.unescapeJsonPointer = exports.escapeJsonPointer = exports.escapeFragment = exports.unescapeFragment = exports.schemaRefOrVal = exports.schemaHasRulesButRef = exports.schemaHasRules = exports.checkUnknownRules = exports.alwaysValidSchema = exports.toHash = void 0;\nconst codegen_1 = require(\"./codegen\");\nconst code_1 = require(\"./codegen/code\");\n// TODO refactor to use Set\nfunction toHash(arr) {\n    const hash = {};\n    for (const item of arr)\n        hash[item] = true;\n    return hash;\n}\nexports.toHash = toHash;\nfunction alwaysValidSchema(it, schema) {\n    if (typeof schema == \"boolean\")\n        return schema;\n    if (Object.keys(schema).length === 0)\n        return true;\n    checkUnknownRules(it, schema);\n    return !schemaHasRules(schema, it.self.RULES.all);\n}\nexports.alwaysValidSchema = alwaysValidSchema;\nfunction checkUnknownRules(it, schema = it.schema) {\n    const { opts, self } = it;\n    if (!opts.strictSchema)\n        return;\n    if (typeof schema === \"boolean\")\n        return;\n    const rules = self.RULES.keywords;\n    for (const key in schema) {\n        if (!rules[key])\n            checkStrictMode(it, `unknown keyword: \"${key}\"`);\n    }\n}\nexports.checkUnknownRules = checkUnknownRules;\nfunction schemaHasRules(schema, rules) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (rules[key])\n            return true;\n    return false;\n}\nexports.schemaHasRules = schemaHasRules;\nfunction schemaHasRulesButRef(schema, RULES) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (key !== \"$ref\" && RULES.all[key])\n            return true;\n    return false;\n}\nexports.schemaHasRulesButRef = schemaHasRulesButRef;\nfunction schemaRefOrVal({ topSchemaRef, schemaPath }, schema, keyword, $data) {\n    if (!$data) {\n        if (typeof schema == \"number\" || typeof schema == \"boolean\")\n            return schema;\n        if (typeof schema == \"string\")\n            return (0, codegen_1._) `${schema}`;\n    }\n    return (0, codegen_1._) `${topSchemaRef}${schemaPath}${(0, codegen_1.getProperty)(keyword)}`;\n}\nexports.schemaRefOrVal = schemaRefOrVal;\nfunction unescapeFragment(str) {\n    return unescapeJsonPointer(decodeURIComponent(str));\n}\nexports.unescapeFragment = unescapeFragment;\nfunction escapeFragment(str) {\n    return encodeURIComponent(escapeJsonPointer(str));\n}\nexports.escapeFragment = escapeFragment;\nfunction escapeJsonPointer(str) {\n    if (typeof str == \"number\")\n        return `${str}`;\n    return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\");\n}\nexports.escapeJsonPointer = escapeJsonPointer;\nfunction unescapeJsonPointer(str) {\n    return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\");\n}\nexports.unescapeJsonPointer = unescapeJsonPointer;\nfunction eachItem(xs, f) {\n    if (Array.isArray(xs)) {\n        for (const x of xs)\n            f(x);\n    }\n    else {\n        f(xs);\n    }\n}\nexports.eachItem = eachItem;\nfunction makeMergeEvaluated({ mergeNames, mergeToName, mergeValues, resultToName, }) {\n    return (gen, from, to, toName) => {\n        const res = to === undefined\n            ? from\n            : to instanceof codegen_1.Name\n                ? (from instanceof codegen_1.Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n                : from instanceof codegen_1.Name\n                    ? (mergeToName(gen, to, from), from)\n                    : mergeValues(from, to);\n        return toName === codegen_1.Name && !(res instanceof codegen_1.Name) ? resultToName(gen, res) : res;\n    };\n}\nexports.mergeEvaluated = {\n    props: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => {\n            gen.if((0, codegen_1._) `${from} === true`, () => gen.assign(to, true), () => gen.assign(to, (0, codegen_1._) `${to} || {}`).code((0, codegen_1._) `Object.assign(${to}, ${from})`));\n        }),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => {\n            if (from === true) {\n                gen.assign(to, true);\n            }\n            else {\n                gen.assign(to, (0, codegen_1._) `${to} || {}`);\n                setEvaluated(gen, to, from);\n            }\n        }),\n        mergeValues: (from, to) => (from === true ? true : { ...from, ...to }),\n        resultToName: evaluatedPropsToName,\n    }),\n    items: makeMergeEvaluated({\n        mergeNames: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true && ${from} !== undefined`, () => gen.assign(to, (0, codegen_1._) `${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)),\n        mergeToName: (gen, from, to) => gen.if((0, codegen_1._) `${to} !== true`, () => gen.assign(to, from === true ? true : (0, codegen_1._) `${to} > ${from} ? ${to} : ${from}`)),\n        mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n        resultToName: (gen, items) => gen.var(\"items\", items),\n    }),\n};\nfunction evaluatedPropsToName(gen, ps) {\n    if (ps === true)\n        return gen.var(\"props\", true);\n    const props = gen.var(\"props\", (0, codegen_1._) `{}`);\n    if (ps !== undefined)\n        setEvaluated(gen, props, ps);\n    return props;\n}\nexports.evaluatedPropsToName = evaluatedPropsToName;\nfunction setEvaluated(gen, props, ps) {\n    Object.keys(ps).forEach((p) => gen.assign((0, codegen_1._) `${props}${(0, codegen_1.getProperty)(p)}`, true));\n}\nexports.setEvaluated = setEvaluated;\nconst snippets = {};\nfunction useFunc(gen, f) {\n    return gen.scopeValue(\"func\", {\n        ref: f,\n        code: snippets[f.code] || (snippets[f.code] = new code_1._Code(f.code)),\n    });\n}\nexports.useFunc = useFunc;\nvar Type;\n(function (Type) {\n    Type[Type[\"Num\"] = 0] = \"Num\";\n    Type[Type[\"Str\"] = 1] = \"Str\";\n})(Type = exports.Type || (exports.Type = {}));\nfunction getErrorPath(dataProp, dataPropType, jsPropertySyntax) {\n    // let path\n    if (dataProp instanceof codegen_1.Name) {\n        const isNumber = dataPropType === Type.Num;\n        return jsPropertySyntax\n            ? isNumber\n                ? (0, codegen_1._) `\"[\" + ${dataProp} + \"]\"`\n                : (0, codegen_1._) `\"['\" + ${dataProp} + \"']\"`\n            : isNumber\n                ? (0, codegen_1._) `\"/\" + ${dataProp}`\n                : (0, codegen_1._) `\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")`; // TODO maybe use global escapePointer\n    }\n    return jsPropertySyntax ? (0, codegen_1.getProperty)(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp);\n}\nexports.getErrorPath = getErrorPath;\nfunction checkStrictMode(it, msg, mode = it.opts.strictSchema) {\n    if (!mode)\n        return;\n    msg = `strict mode: ${msg}`;\n    if (mode === true)\n        throw new Error(msg);\n    it.self.logger.warn(msg);\n}\nexports.checkStrictMode = checkStrictMode;\n//# sourceMappingURL=util.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldUseRule = exports.shouldUseGroup = exports.schemaHasRulesForType = void 0;\nfunction schemaHasRulesForType({ schema, self }, type) {\n    const group = self.RULES.types[type];\n    return group && group !== true && shouldUseGroup(schema, group);\n}\nexports.schemaHasRulesForType = schemaHasRulesForType;\nfunction shouldUseGroup(schema, group) {\n    return group.rules.some((rule) => shouldUseRule(schema, rule));\n}\nexports.shouldUseGroup = shouldUseGroup;\nfunction shouldUseRule(schema, rule) {\n    var _a;\n    return (schema[rule.keyword] !== undefined ||\n        ((_a = rule.definition.implements) === null || _a === void 0 ? void 0 : _a.some((kwd) => schema[kwd] !== undefined)));\n}\nexports.shouldUseRule = shouldUseRule;\n//# sourceMappingURL=applicability.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.boolOrEmptySchema = exports.topBoolOrEmptySchema = void 0;\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst boolError = {\n    message: \"boolean schema is false\",\n};\nfunction topBoolOrEmptySchema(it) {\n    const { gen, schema, validateName } = it;\n    if (schema === false) {\n        falseSchemaError(it, false);\n    }\n    else if (typeof schema == \"object\" && schema.$async === true) {\n        gen.return(names_1.default.data);\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, null);\n        gen.return(true);\n    }\n}\nexports.topBoolOrEmptySchema = topBoolOrEmptySchema;\nfunction boolOrEmptySchema(it, valid) {\n    const { gen, schema } = it;\n    if (schema === false) {\n        gen.var(valid, false); // TODO var\n        falseSchemaError(it);\n    }\n    else {\n        gen.var(valid, true); // TODO var\n    }\n}\nexports.boolOrEmptySchema = boolOrEmptySchema;\nfunction falseSchemaError(it, overrideAllErrors) {\n    const { gen, data } = it;\n    // TODO maybe some other interface should be used for non-keyword validation errors...\n    const cxt = {\n        gen,\n        keyword: \"false schema\",\n        data,\n        schema: false,\n        schemaCode: false,\n        schemaValue: false,\n        params: {},\n        it,\n    };\n    (0, errors_1.reportError)(cxt, boolError, undefined, overrideAllErrors);\n}\n//# sourceMappingURL=boolSchema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reportTypeError = exports.checkDataTypes = exports.checkDataType = exports.coerceAndCheckDataType = exports.getJSONTypes = exports.getSchemaTypes = exports.DataType = void 0;\nconst rules_1 = require(\"../rules\");\nconst applicability_1 = require(\"./applicability\");\nconst errors_1 = require(\"../errors\");\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nvar DataType;\n(function (DataType) {\n    DataType[DataType[\"Correct\"] = 0] = \"Correct\";\n    DataType[DataType[\"Wrong\"] = 1] = \"Wrong\";\n})(DataType = exports.DataType || (exports.DataType = {}));\nfunction getSchemaTypes(schema) {\n    const types = getJSONTypes(schema.type);\n    const hasNull = types.includes(\"null\");\n    if (hasNull) {\n        if (schema.nullable === false)\n            throw new Error(\"type: null contradicts nullable: false\");\n    }\n    else {\n        if (!types.length && schema.nullable !== undefined) {\n            throw new Error('\"nullable\" cannot be used without \"type\"');\n        }\n        if (schema.nullable === true)\n            types.push(\"null\");\n    }\n    return types;\n}\nexports.getSchemaTypes = getSchemaTypes;\nfunction getJSONTypes(ts) {\n    const types = Array.isArray(ts) ? ts : ts ? [ts] : [];\n    if (types.every(rules_1.isJSONType))\n        return types;\n    throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"));\n}\nexports.getJSONTypes = getJSONTypes;\nfunction coerceAndCheckDataType(it, types) {\n    const { gen, data, opts } = it;\n    const coerceTo = coerceToTypes(types, opts.coerceTypes);\n    const checkTypes = types.length > 0 &&\n        !(coerceTo.length === 0 && types.length === 1 && (0, applicability_1.schemaHasRulesForType)(it, types[0]));\n    if (checkTypes) {\n        const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong);\n        gen.if(wrongType, () => {\n            if (coerceTo.length)\n                coerceData(it, types, coerceTo);\n            else\n                reportTypeError(it);\n        });\n    }\n    return checkTypes;\n}\nexports.coerceAndCheckDataType = coerceAndCheckDataType;\nconst COERCIBLE = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"]);\nfunction coerceToTypes(types, coerceTypes) {\n    return coerceTypes\n        ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n        : [];\n}\nfunction coerceData(it, types, coerceTo) {\n    const { gen, data, opts } = it;\n    const dataType = gen.let(\"dataType\", (0, codegen_1._) `typeof ${data}`);\n    const coerced = gen.let(\"coerced\", (0, codegen_1._) `undefined`);\n    if (opts.coerceTypes === \"array\") {\n        gen.if((0, codegen_1._) `${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () => gen\n            .assign(data, (0, codegen_1._) `${data}[0]`)\n            .assign(dataType, (0, codegen_1._) `typeof ${data}`)\n            .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data)));\n    }\n    gen.if((0, codegen_1._) `${coerced} !== undefined`);\n    for (const t of coerceTo) {\n        if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n            coerceSpecificType(t);\n        }\n    }\n    gen.else();\n    reportTypeError(it);\n    gen.endIf();\n    gen.if((0, codegen_1._) `${coerced} !== undefined`, () => {\n        gen.assign(data, coerced);\n        assignParentData(it, coerced);\n    });\n    function coerceSpecificType(t) {\n        switch (t) {\n            case \"string\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n                    .assign(coerced, (0, codegen_1._) `\"\" + ${data}`)\n                    .elseIf((0, codegen_1._) `${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `\"\"`);\n                return;\n            case \"number\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"integer\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`)\n                    .assign(coerced, (0, codegen_1._) `+${data}`);\n                return;\n            case \"boolean\":\n                gen\n                    .elseIf((0, codegen_1._) `${data} === \"false\" || ${data} === 0 || ${data} === null`)\n                    .assign(coerced, false)\n                    .elseIf((0, codegen_1._) `${data} === \"true\" || ${data} === 1`)\n                    .assign(coerced, true);\n                return;\n            case \"null\":\n                gen.elseIf((0, codegen_1._) `${data} === \"\" || ${data} === 0 || ${data} === false`);\n                gen.assign(coerced, null);\n                return;\n            case \"array\":\n                gen\n                    .elseIf((0, codegen_1._) `${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`)\n                    .assign(coerced, (0, codegen_1._) `[${data}]`);\n        }\n    }\n}\nfunction assignParentData({ gen, parentData, parentDataProperty }, expr) {\n    // TODO use gen.property\n    gen.if((0, codegen_1._) `${parentData} !== undefined`, () => gen.assign((0, codegen_1._) `${parentData}[${parentDataProperty}]`, expr));\n}\nfunction checkDataType(dataType, data, strictNums, correct = DataType.Correct) {\n    const EQ = correct === DataType.Correct ? codegen_1.operators.EQ : codegen_1.operators.NEQ;\n    let cond;\n    switch (dataType) {\n        case \"null\":\n            return (0, codegen_1._) `${data} ${EQ} null`;\n        case \"array\":\n            cond = (0, codegen_1._) `Array.isArray(${data})`;\n            break;\n        case \"object\":\n            cond = (0, codegen_1._) `${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`;\n            break;\n        case \"integer\":\n            cond = numCond((0, codegen_1._) `!(${data} % 1) && !isNaN(${data})`);\n            break;\n        case \"number\":\n            cond = numCond();\n            break;\n        default:\n            return (0, codegen_1._) `typeof ${data} ${EQ} ${dataType}`;\n    }\n    return correct === DataType.Correct ? cond : (0, codegen_1.not)(cond);\n    function numCond(_cond = codegen_1.nil) {\n        return (0, codegen_1.and)((0, codegen_1._) `typeof ${data} == \"number\"`, _cond, strictNums ? (0, codegen_1._) `isFinite(${data})` : codegen_1.nil);\n    }\n}\nexports.checkDataType = checkDataType;\nfunction checkDataTypes(dataTypes, data, strictNums, correct) {\n    if (dataTypes.length === 1) {\n        return checkDataType(dataTypes[0], data, strictNums, correct);\n    }\n    let cond;\n    const types = (0, util_1.toHash)(dataTypes);\n    if (types.array && types.object) {\n        const notObj = (0, codegen_1._) `typeof ${data} != \"object\"`;\n        cond = types.null ? notObj : (0, codegen_1._) `!${data} || ${notObj}`;\n        delete types.null;\n        delete types.array;\n        delete types.object;\n    }\n    else {\n        cond = codegen_1.nil;\n    }\n    if (types.number)\n        delete types.integer;\n    for (const t in types)\n        cond = (0, codegen_1.and)(cond, checkDataType(t, data, strictNums, correct));\n    return cond;\n}\nexports.checkDataTypes = checkDataTypes;\nconst typeError = {\n    message: ({ schema }) => `must be ${schema}`,\n    params: ({ schema, schemaValue }) => typeof schema == \"string\" ? (0, codegen_1._) `{type: ${schema}}` : (0, codegen_1._) `{type: ${schemaValue}}`,\n};\nfunction reportTypeError(it) {\n    const cxt = getTypeErrorContext(it);\n    (0, errors_1.reportError)(cxt, typeError);\n}\nexports.reportTypeError = reportTypeError;\nfunction getTypeErrorContext(it) {\n    const { gen, data, schema } = it;\n    const schemaCode = (0, util_1.schemaRefOrVal)(it, schema, \"type\");\n    return {\n        gen,\n        keyword: \"type\",\n        data,\n        schema: schema.type,\n        schemaCode,\n        schemaValue: schemaCode,\n        parentSchema: schema,\n        params: {},\n        it,\n    };\n}\n//# sourceMappingURL=dataType.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n    const { properties, items } = it.schema;\n    if (ty === \"object\" && properties) {\n        for (const key in properties) {\n            assignDefault(it, key, properties[key].default);\n        }\n    }\n    else if (ty === \"array\" && Array.isArray(items)) {\n        items.forEach((sch, i) => assignDefault(it, i, sch.default));\n    }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n    const { gen, compositeRule, data, opts } = it;\n    if (defaultValue === undefined)\n        return;\n    const childData = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(prop)}`;\n    if (compositeRule) {\n        (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n        return;\n    }\n    let condition = (0, codegen_1._) `${childData} === undefined`;\n    if (opts.useDefaults === \"empty\") {\n        condition = (0, codegen_1._) `${condition} || ${childData} === null || ${childData} === \"\"`;\n    }\n    // `${childData} === undefined` +\n    // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n    gen.if(condition, (0, codegen_1._) `${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}\n//# sourceMappingURL=defaults.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getData = exports.KeywordCxt = exports.validateFunctionCode = void 0;\nconst boolSchema_1 = require(\"./boolSchema\");\nconst dataType_1 = require(\"./dataType\");\nconst applicability_1 = require(\"./applicability\");\nconst dataType_2 = require(\"./dataType\");\nconst defaults_1 = require(\"./defaults\");\nconst keyword_1 = require(\"./keyword\");\nconst subschema_1 = require(\"./subschema\");\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst resolve_1 = require(\"../resolve\");\nconst util_1 = require(\"../util\");\nconst errors_1 = require(\"../errors\");\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nfunction validateFunctionCode(it) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            topSchemaObjCode(it);\n            return;\n        }\n    }\n    validateFunction(it, () => (0, boolSchema_1.topBoolOrEmptySchema)(it));\n}\nexports.validateFunctionCode = validateFunctionCode;\nfunction validateFunction({ gen, validateName, schema, schemaEnv, opts }, body) {\n    if (opts.code.es5) {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${names_1.default.valCxt}`, schemaEnv.$async, () => {\n            gen.code((0, codegen_1._) `\"use strict\"; ${funcSourceUrl(schema, opts)}`);\n            destructureValCxtES5(gen, opts);\n            gen.code(body);\n        });\n    }\n    else {\n        gen.func(validateName, (0, codegen_1._) `${names_1.default.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () => gen.code(funcSourceUrl(schema, opts)).code(body));\n    }\n}\nfunction destructureValCxt(opts) {\n    return (0, codegen_1._) `{${names_1.default.instancePath}=\"\", ${names_1.default.parentData}, ${names_1.default.parentDataProperty}, ${names_1.default.rootData}=${names_1.default.data}${opts.dynamicRef ? (0, codegen_1._) `, ${names_1.default.dynamicAnchors}={}` : codegen_1.nil}}={}`;\n}\nfunction destructureValCxtES5(gen, opts) {\n    gen.if(names_1.default.valCxt, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.instancePath}`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentData}`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.parentDataProperty}`);\n        gen.var(names_1.default.rootData, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.rootData}`);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `${names_1.default.valCxt}.${names_1.default.dynamicAnchors}`);\n    }, () => {\n        gen.var(names_1.default.instancePath, (0, codegen_1._) `\"\"`);\n        gen.var(names_1.default.parentData, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.parentDataProperty, (0, codegen_1._) `undefined`);\n        gen.var(names_1.default.rootData, names_1.default.data);\n        if (opts.dynamicRef)\n            gen.var(names_1.default.dynamicAnchors, (0, codegen_1._) `{}`);\n    });\n}\nfunction topSchemaObjCode(it) {\n    const { schema, opts, gen } = it;\n    validateFunction(it, () => {\n        if (opts.$comment && schema.$comment)\n            commentKeyword(it);\n        checkNoDefault(it);\n        gen.let(names_1.default.vErrors, null);\n        gen.let(names_1.default.errors, 0);\n        if (opts.unevaluated)\n            resetEvaluated(it);\n        typeAndKeywords(it);\n        returnResults(it);\n    });\n    return;\n}\nfunction resetEvaluated(it) {\n    // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n    const { gen, validateName } = it;\n    it.evaluated = gen.const(\"evaluated\", (0, codegen_1._) `${validateName}.evaluated`);\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicProps`, () => gen.assign((0, codegen_1._) `${it.evaluated}.props`, (0, codegen_1._) `undefined`));\n    gen.if((0, codegen_1._) `${it.evaluated}.dynamicItems`, () => gen.assign((0, codegen_1._) `${it.evaluated}.items`, (0, codegen_1._) `undefined`));\n}\nfunction funcSourceUrl(schema, opts) {\n    const schId = typeof schema == \"object\" && schema[opts.schemaId];\n    return schId && (opts.code.source || opts.code.process) ? (0, codegen_1._) `/*# sourceURL=${schId} */` : codegen_1.nil;\n}\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it, valid) {\n    if (isSchemaObj(it)) {\n        checkKeywords(it);\n        if (schemaCxtHasRules(it)) {\n            subSchemaObjCode(it, valid);\n            return;\n        }\n    }\n    (0, boolSchema_1.boolOrEmptySchema)(it, valid);\n}\nfunction schemaCxtHasRules({ schema, self }) {\n    if (typeof schema == \"boolean\")\n        return !schema;\n    for (const key in schema)\n        if (self.RULES.all[key])\n            return true;\n    return false;\n}\nfunction isSchemaObj(it) {\n    return typeof it.schema != \"boolean\";\n}\nfunction subSchemaObjCode(it, valid) {\n    const { schema, gen, opts } = it;\n    if (opts.$comment && schema.$comment)\n        commentKeyword(it);\n    updateContext(it);\n    checkAsyncSchema(it);\n    const errsCount = gen.const(\"_errs\", names_1.default.errors);\n    typeAndKeywords(it, errsCount);\n    // TODO var\n    gen.var(valid, (0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n}\nfunction checkKeywords(it) {\n    (0, util_1.checkUnknownRules)(it);\n    checkRefsAndKeywords(it);\n}\nfunction typeAndKeywords(it, errsCount) {\n    if (it.opts.jtd)\n        return schemaKeywords(it, [], false, errsCount);\n    const types = (0, dataType_1.getSchemaTypes)(it.schema);\n    const checkedTypes = (0, dataType_1.coerceAndCheckDataType)(it, types);\n    schemaKeywords(it, types, !checkedTypes, errsCount);\n}\nfunction checkRefsAndKeywords(it) {\n    const { schema, errSchemaPath, opts, self } = it;\n    if (schema.$ref && opts.ignoreKeywordsWithRef && (0, util_1.schemaHasRulesButRef)(schema, self.RULES)) {\n        self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`);\n    }\n}\nfunction checkNoDefault(it) {\n    const { schema, opts } = it;\n    if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n        (0, util_1.checkStrictMode)(it, \"default is ignored in the schema root\");\n    }\n}\nfunction updateContext(it) {\n    const schId = it.schema[it.opts.schemaId];\n    if (schId)\n        it.baseId = (0, resolve_1.resolveUrl)(it.opts.uriResolver, it.baseId, schId);\n}\nfunction checkAsyncSchema(it) {\n    if (it.schema.$async && !it.schemaEnv.$async)\n        throw new Error(\"async schema in sync schema\");\n}\nfunction commentKeyword({ gen, schemaEnv, schema, errSchemaPath, opts }) {\n    const msg = schema.$comment;\n    if (opts.$comment === true) {\n        gen.code((0, codegen_1._) `${names_1.default.self}.logger.log(${msg})`);\n    }\n    else if (typeof opts.$comment == \"function\") {\n        const schemaPath = (0, codegen_1.str) `${errSchemaPath}/$comment`;\n        const rootName = gen.scopeValue(\"root\", { ref: schemaEnv.root });\n        gen.code((0, codegen_1._) `${names_1.default.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`);\n    }\n}\nfunction returnResults(it) {\n    const { gen, schemaEnv, validateName, ValidationError, opts } = it;\n    if (schemaEnv.$async) {\n        // TODO assign unevaluated\n        gen.if((0, codegen_1._) `${names_1.default.errors} === 0`, () => gen.return(names_1.default.data), () => gen.throw((0, codegen_1._) `new ${ValidationError}(${names_1.default.vErrors})`));\n    }\n    else {\n        gen.assign((0, codegen_1._) `${validateName}.errors`, names_1.default.vErrors);\n        if (opts.unevaluated)\n            assignEvaluated(it);\n        gen.return((0, codegen_1._) `${names_1.default.errors} === 0`);\n    }\n}\nfunction assignEvaluated({ gen, evaluated, props, items }) {\n    if (props instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.props`, props);\n    if (items instanceof codegen_1.Name)\n        gen.assign((0, codegen_1._) `${evaluated}.items`, items);\n}\nfunction schemaKeywords(it, types, typeErrors, errsCount) {\n    const { gen, schema, data, allErrors, opts, self } = it;\n    const { RULES } = self;\n    if (schema.$ref && (opts.ignoreKeywordsWithRef || !(0, util_1.schemaHasRulesButRef)(schema, RULES))) {\n        gen.block(() => keywordCode(it, \"$ref\", RULES.all.$ref.definition)); // TODO typecast\n        return;\n    }\n    if (!opts.jtd)\n        checkStrictTypes(it, types);\n    gen.block(() => {\n        for (const group of RULES.rules)\n            groupKeywords(group);\n        groupKeywords(RULES.post);\n    });\n    function groupKeywords(group) {\n        if (!(0, applicability_1.shouldUseGroup)(schema, group))\n            return;\n        if (group.type) {\n            gen.if((0, dataType_2.checkDataType)(group.type, data, opts.strictNumbers));\n            iterateKeywords(it, group);\n            if (types.length === 1 && types[0] === group.type && typeErrors) {\n                gen.else();\n                (0, dataType_2.reportTypeError)(it);\n            }\n            gen.endIf();\n        }\n        else {\n            iterateKeywords(it, group);\n        }\n        // TODO make it \"ok\" call?\n        if (!allErrors)\n            gen.if((0, codegen_1._) `${names_1.default.errors} === ${errsCount || 0}`);\n    }\n}\nfunction iterateKeywords(it, group) {\n    const { gen, schema, opts: { useDefaults }, } = it;\n    if (useDefaults)\n        (0, defaults_1.assignDefaults)(it, group.type);\n    gen.block(() => {\n        for (const rule of group.rules) {\n            if ((0, applicability_1.shouldUseRule)(schema, rule)) {\n                keywordCode(it, rule.keyword, rule.definition, group.type);\n            }\n        }\n    });\n}\nfunction checkStrictTypes(it, types) {\n    if (it.schemaEnv.meta || !it.opts.strictTypes)\n        return;\n    checkContextTypes(it, types);\n    if (!it.opts.allowUnionTypes)\n        checkMultipleTypes(it, types);\n    checkKeywordTypes(it, it.dataTypes);\n}\nfunction checkContextTypes(it, types) {\n    if (!types.length)\n        return;\n    if (!it.dataTypes.length) {\n        it.dataTypes = types;\n        return;\n    }\n    types.forEach((t) => {\n        if (!includesType(it.dataTypes, t)) {\n            strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`);\n        }\n    });\n    it.dataTypes = it.dataTypes.filter((t) => includesType(types, t));\n}\nfunction checkMultipleTypes(it, ts) {\n    if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n        strictTypesError(it, \"use allowUnionTypes to allow union type keyword\");\n    }\n}\nfunction checkKeywordTypes(it, ts) {\n    const rules = it.self.RULES.all;\n    for (const keyword in rules) {\n        const rule = rules[keyword];\n        if (typeof rule == \"object\" && (0, applicability_1.shouldUseRule)(it.schema, rule)) {\n            const { type } = rule.definition;\n            if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n                strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`);\n            }\n        }\n    }\n}\nfunction hasApplicableType(schTs, kwdT) {\n    return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"));\n}\nfunction includesType(ts, t) {\n    return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"));\n}\nfunction strictTypesError(it, msg) {\n    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n    msg += ` at \"${schemaPath}\" (strictTypes)`;\n    (0, util_1.checkStrictMode)(it, msg, it.opts.strictTypes);\n}\nclass KeywordCxt {\n    constructor(it, def, keyword) {\n        (0, keyword_1.validateKeywordUsage)(it, def, keyword);\n        this.gen = it.gen;\n        this.allErrors = it.allErrors;\n        this.keyword = keyword;\n        this.data = it.data;\n        this.schema = it.schema[keyword];\n        this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data;\n        this.schemaValue = (0, util_1.schemaRefOrVal)(it, this.schema, keyword, this.$data);\n        this.schemaType = def.schemaType;\n        this.parentSchema = it.schema;\n        this.params = {};\n        this.it = it;\n        this.def = def;\n        if (this.$data) {\n            this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it));\n        }\n        else {\n            this.schemaCode = this.schemaValue;\n            if (!(0, keyword_1.validSchemaType)(this.schema, def.schemaType, def.allowUndefined)) {\n                throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`);\n            }\n        }\n        if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n            this.errsCount = it.gen.const(\"_errs\", names_1.default.errors);\n        }\n    }\n    result(condition, successAction, failAction) {\n        this.failResult((0, codegen_1.not)(condition), successAction, failAction);\n    }\n    failResult(condition, successAction, failAction) {\n        this.gen.if(condition);\n        if (failAction)\n            failAction();\n        else\n            this.error();\n        if (successAction) {\n            this.gen.else();\n            successAction();\n            if (this.allErrors)\n                this.gen.endIf();\n        }\n        else {\n            if (this.allErrors)\n                this.gen.endIf();\n            else\n                this.gen.else();\n        }\n    }\n    pass(condition, failAction) {\n        this.failResult((0, codegen_1.not)(condition), undefined, failAction);\n    }\n    fail(condition) {\n        if (condition === undefined) {\n            this.error();\n            if (!this.allErrors)\n                this.gen.if(false); // this branch will be removed by gen.optimize\n            return;\n        }\n        this.gen.if(condition);\n        this.error();\n        if (this.allErrors)\n            this.gen.endIf();\n        else\n            this.gen.else();\n    }\n    fail$data(condition) {\n        if (!this.$data)\n            return this.fail(condition);\n        const { schemaCode } = this;\n        this.fail((0, codegen_1._) `${schemaCode} !== undefined && (${(0, codegen_1.or)(this.invalid$data(), condition)})`);\n    }\n    error(append, errorParams, errorPaths) {\n        if (errorParams) {\n            this.setParams(errorParams);\n            this._error(append, errorPaths);\n            this.setParams({});\n            return;\n        }\n        this._error(append, errorPaths);\n    }\n    _error(append, errorPaths) {\n        ;\n        (append ? errors_1.reportExtraError : errors_1.reportError)(this, this.def.error, errorPaths);\n    }\n    $dataError() {\n        (0, errors_1.reportError)(this, this.def.$dataError || errors_1.keyword$DataError);\n    }\n    reset() {\n        if (this.errsCount === undefined)\n            throw new Error('add \"trackErrors\" to keyword definition');\n        (0, errors_1.resetErrorsCount)(this.gen, this.errsCount);\n    }\n    ok(cond) {\n        if (!this.allErrors)\n            this.gen.if(cond);\n    }\n    setParams(obj, assign) {\n        if (assign)\n            Object.assign(this.params, obj);\n        else\n            this.params = obj;\n    }\n    block$data(valid, codeBlock, $dataValid = codegen_1.nil) {\n        this.gen.block(() => {\n            this.check$data(valid, $dataValid);\n            codeBlock();\n        });\n    }\n    check$data(valid = codegen_1.nil, $dataValid = codegen_1.nil) {\n        if (!this.$data)\n            return;\n        const { gen, schemaCode, schemaType, def } = this;\n        gen.if((0, codegen_1.or)((0, codegen_1._) `${schemaCode} === undefined`, $dataValid));\n        if (valid !== codegen_1.nil)\n            gen.assign(valid, true);\n        if (schemaType.length || def.validateSchema) {\n            gen.elseIf(this.invalid$data());\n            this.$dataError();\n            if (valid !== codegen_1.nil)\n                gen.assign(valid, false);\n        }\n        gen.else();\n    }\n    invalid$data() {\n        const { gen, schemaCode, schemaType, def, it } = this;\n        return (0, codegen_1.or)(wrong$DataType(), invalid$DataSchema());\n        function wrong$DataType() {\n            if (schemaType.length) {\n                /* istanbul ignore if */\n                if (!(schemaCode instanceof codegen_1.Name))\n                    throw new Error(\"ajv implementation error\");\n                const st = Array.isArray(schemaType) ? schemaType : [schemaType];\n                return (0, codegen_1._) `${(0, dataType_2.checkDataTypes)(st, schemaCode, it.opts.strictNumbers, dataType_2.DataType.Wrong)}`;\n            }\n            return codegen_1.nil;\n        }\n        function invalid$DataSchema() {\n            if (def.validateSchema) {\n                const validateSchemaRef = gen.scopeValue(\"validate$data\", { ref: def.validateSchema }); // TODO value.code for standalone\n                return (0, codegen_1._) `!${validateSchemaRef}(${schemaCode})`;\n            }\n            return codegen_1.nil;\n        }\n    }\n    subschema(appl, valid) {\n        const subschema = (0, subschema_1.getSubschema)(this.it, appl);\n        (0, subschema_1.extendSubschemaData)(subschema, this.it, appl);\n        (0, subschema_1.extendSubschemaMode)(subschema, appl);\n        const nextContext = { ...this.it, ...subschema, items: undefined, props: undefined };\n        subschemaCode(nextContext, valid);\n        return nextContext;\n    }\n    mergeEvaluated(schemaCxt, toName) {\n        const { it, gen } = this;\n        if (!it.opts.unevaluated)\n            return;\n        if (it.props !== true && schemaCxt.props !== undefined) {\n            it.props = util_1.mergeEvaluated.props(gen, schemaCxt.props, it.props, toName);\n        }\n        if (it.items !== true && schemaCxt.items !== undefined) {\n            it.items = util_1.mergeEvaluated.items(gen, schemaCxt.items, it.items, toName);\n        }\n    }\n    mergeValidEvaluated(schemaCxt, valid) {\n        const { it, gen } = this;\n        if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n            gen.if(valid, () => this.mergeEvaluated(schemaCxt, codegen_1.Name));\n            return true;\n        }\n    }\n}\nexports.KeywordCxt = KeywordCxt;\nfunction keywordCode(it, keyword, def, ruleType) {\n    const cxt = new KeywordCxt(it, def, keyword);\n    if (\"code\" in def) {\n        def.code(cxt, ruleType);\n    }\n    else if (cxt.$data && def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n    else if (\"macro\" in def) {\n        (0, keyword_1.macroKeywordCode)(cxt, def);\n    }\n    else if (def.compile || def.validate) {\n        (0, keyword_1.funcKeywordCode)(cxt, def);\n    }\n}\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/;\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/;\nfunction getData($data, { dataLevel, dataNames, dataPathArr }) {\n    let jsonPointer;\n    let data;\n    if ($data === \"\")\n        return names_1.default.rootData;\n    if ($data[0] === \"/\") {\n        if (!JSON_POINTER.test($data))\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        jsonPointer = $data;\n        data = names_1.default.rootData;\n    }\n    else {\n        const matches = RELATIVE_JSON_POINTER.exec($data);\n        if (!matches)\n            throw new Error(`Invalid JSON-pointer: ${$data}`);\n        const up = +matches[1];\n        jsonPointer = matches[2];\n        if (jsonPointer === \"#\") {\n            if (up >= dataLevel)\n                throw new Error(errorMsg(\"property/index\", up));\n            return dataPathArr[dataLevel - up];\n        }\n        if (up > dataLevel)\n            throw new Error(errorMsg(\"data\", up));\n        data = dataNames[dataLevel - up];\n        if (!jsonPointer)\n            return data;\n    }\n    let expr = data;\n    const segments = jsonPointer.split(\"/\");\n    for (const segment of segments) {\n        if (segment) {\n            data = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)((0, util_1.unescapeJsonPointer)(segment))}`;\n            expr = (0, codegen_1._) `${expr} && ${data}`;\n        }\n    }\n    return expr;\n    function errorMsg(pointerType, up) {\n        return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`;\n    }\n}\nexports.getData = getData;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateKeywordUsage = exports.validSchemaType = exports.funcKeywordCode = exports.macroKeywordCode = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst names_1 = require(\"../names\");\nconst code_1 = require(\"../../vocabularies/code\");\nconst errors_1 = require(\"../errors\");\nfunction macroKeywordCode(cxt, def) {\n    const { gen, keyword, schema, parentSchema, it } = cxt;\n    const macroSchema = def.macro.call(it.self, schema, parentSchema, it);\n    const schemaRef = useKeyword(gen, keyword, macroSchema);\n    if (it.opts.validateSchema !== false)\n        it.self.validateSchema(macroSchema, true);\n    const valid = gen.name(\"valid\");\n    cxt.subschema({\n        schema: macroSchema,\n        schemaPath: codegen_1.nil,\n        errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        topSchemaRef: schemaRef,\n        compositeRule: true,\n    }, valid);\n    cxt.pass(valid, () => cxt.error(true));\n}\nexports.macroKeywordCode = macroKeywordCode;\nfunction funcKeywordCode(cxt, def) {\n    var _a;\n    const { gen, keyword, schema, parentSchema, $data, it } = cxt;\n    checkAsyncKeyword(it, def);\n    const validate = !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate;\n    const validateRef = useKeyword(gen, keyword, validate);\n    const valid = gen.let(\"valid\");\n    cxt.block$data(valid, validateKeyword);\n    cxt.ok((_a = def.valid) !== null && _a !== void 0 ? _a : valid);\n    function validateKeyword() {\n        if (def.errors === false) {\n            assignValid();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => cxt.error());\n        }\n        else {\n            const ruleErrs = def.async ? validateAsync() : validateSync();\n            if (def.modifying)\n                modifyData(cxt);\n            reportErrs(() => addErrs(cxt, ruleErrs));\n        }\n    }\n    function validateAsync() {\n        const ruleErrs = gen.let(\"ruleErrs\", null);\n        gen.try(() => assignValid((0, codegen_1._) `await `), (e) => gen.assign(valid, false).if((0, codegen_1._) `${e} instanceof ${it.ValidationError}`, () => gen.assign(ruleErrs, (0, codegen_1._) `${e}.errors`), () => gen.throw(e)));\n        return ruleErrs;\n    }\n    function validateSync() {\n        const validateErrs = (0, codegen_1._) `${validateRef}.errors`;\n        gen.assign(validateErrs, null);\n        assignValid(codegen_1.nil);\n        return validateErrs;\n    }\n    function assignValid(_await = def.async ? (0, codegen_1._) `await ` : codegen_1.nil) {\n        const passCxt = it.opts.passContext ? names_1.default.this : names_1.default.self;\n        const passSchema = !((\"compile\" in def && !$data) || def.schema === false);\n        gen.assign(valid, (0, codegen_1._) `${_await}${(0, code_1.callValidateCode)(cxt, validateRef, passCxt, passSchema)}`, def.modifying);\n    }\n    function reportErrs(errors) {\n        var _a;\n        gen.if((0, codegen_1.not)((_a = def.valid) !== null && _a !== void 0 ? _a : valid), errors);\n    }\n}\nexports.funcKeywordCode = funcKeywordCode;\nfunction modifyData(cxt) {\n    const { gen, data, it } = cxt;\n    gen.if(it.parentData, () => gen.assign(data, (0, codegen_1._) `${it.parentData}[${it.parentDataProperty}]`));\n}\nfunction addErrs(cxt, errs) {\n    const { gen } = cxt;\n    gen.if((0, codegen_1._) `Array.isArray(${errs})`, () => {\n        gen\n            .assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`)\n            .assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n        (0, errors_1.extendErrors)(cxt);\n    }, () => cxt.error());\n}\nfunction checkAsyncKeyword({ schemaEnv }, def) {\n    if (def.async && !schemaEnv.$async)\n        throw new Error(\"async keyword in sync schema\");\n}\nfunction useKeyword(gen, keyword, result) {\n    if (result === undefined)\n        throw new Error(`keyword \"${keyword}\" failed to compile`);\n    return gen.scopeValue(\"keyword\", typeof result == \"function\" ? { ref: result } : { ref: result, code: (0, codegen_1.stringify)(result) });\n}\nfunction validSchemaType(schema, schemaType, allowUndefined = false) {\n    // TODO add tests\n    return (!schemaType.length ||\n        schemaType.some((st) => st === \"array\"\n            ? Array.isArray(schema)\n            : st === \"object\"\n                ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n                : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")));\n}\nexports.validSchemaType = validSchemaType;\nfunction validateKeywordUsage({ schema, opts, self, errSchemaPath }, def, keyword) {\n    /* istanbul ignore if */\n    if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n        throw new Error(\"ajv implementation error\");\n    }\n    const deps = def.dependencies;\n    if (deps === null || deps === void 0 ? void 0 : deps.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n        throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`);\n    }\n    if (def.validateSchema) {\n        const valid = def.validateSchema(schema[keyword]);\n        if (!valid) {\n            const msg = `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n                self.errorsText(def.validateSchema.errors);\n            if (opts.validateSchema === \"log\")\n                self.logger.error(msg);\n            else\n                throw new Error(msg);\n        }\n    }\n}\nexports.validateKeywordUsage = validateKeywordUsage;\n//# sourceMappingURL=keyword.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendSubschemaMode = exports.extendSubschemaData = exports.getSubschema = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction getSubschema(it, { keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef }) {\n    if (keyword !== undefined && schema !== undefined) {\n        throw new Error('both \"keyword\" and \"schema\" passed, only one allowed');\n    }\n    if (keyword !== undefined) {\n        const sch = it.schema[keyword];\n        return schemaProp === undefined\n            ? {\n                schema: sch,\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n            }\n            : {\n                schema: sch[schemaProp],\n                schemaPath: (0, codegen_1._) `${it.schemaPath}${(0, codegen_1.getProperty)(keyword)}${(0, codegen_1.getProperty)(schemaProp)}`,\n                errSchemaPath: `${it.errSchemaPath}/${keyword}/${(0, util_1.escapeFragment)(schemaProp)}`,\n            };\n    }\n    if (schema !== undefined) {\n        if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n            throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"');\n        }\n        return {\n            schema,\n            schemaPath,\n            topSchemaRef,\n            errSchemaPath,\n        };\n    }\n    throw new Error('either \"keyword\" or \"schema\" must be passed');\n}\nexports.getSubschema = getSubschema;\nfunction extendSubschemaData(subschema, it, { dataProp, dataPropType: dpType, data, dataTypes, propertyName }) {\n    if (data !== undefined && dataProp !== undefined) {\n        throw new Error('both \"data\" and \"dataProp\" passed, only one allowed');\n    }\n    const { gen } = it;\n    if (dataProp !== undefined) {\n        const { errorPath, dataPathArr, opts } = it;\n        const nextData = gen.let(\"data\", (0, codegen_1._) `${it.data}${(0, codegen_1.getProperty)(dataProp)}`, true);\n        dataContextProps(nextData);\n        subschema.errorPath = (0, codegen_1.str) `${errorPath}${(0, util_1.getErrorPath)(dataProp, dpType, opts.jsPropertySyntax)}`;\n        subschema.parentDataProperty = (0, codegen_1._) `${dataProp}`;\n        subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty];\n    }\n    if (data !== undefined) {\n        const nextData = data instanceof codegen_1.Name ? data : gen.let(\"data\", data, true); // replaceable if used once?\n        dataContextProps(nextData);\n        if (propertyName !== undefined)\n            subschema.propertyName = propertyName;\n        // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n    }\n    if (dataTypes)\n        subschema.dataTypes = dataTypes;\n    function dataContextProps(_nextData) {\n        subschema.data = _nextData;\n        subschema.dataLevel = it.dataLevel + 1;\n        subschema.dataTypes = [];\n        it.definedProperties = new Set();\n        subschema.parentData = it.data;\n        subschema.dataNames = [...it.dataNames, _nextData];\n    }\n}\nexports.extendSubschemaData = extendSubschemaData;\nfunction extendSubschemaMode(subschema, { jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors }) {\n    if (compositeRule !== undefined)\n        subschema.compositeRule = compositeRule;\n    if (createErrors !== undefined)\n        subschema.createErrors = createErrors;\n    if (allErrors !== undefined)\n        subschema.allErrors = allErrors;\n    subschema.jtdDiscriminator = jtdDiscriminator; // not inherited\n    subschema.jtdMetadata = jtdMetadata; // not inherited\n}\nexports.extendSubschemaMode = extendSubschemaMode;\n//# sourceMappingURL=subschema.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodeGen = exports.Name = exports.nil = exports.stringify = exports.str = exports._ = exports.KeywordCxt = void 0;\nvar validate_1 = require(\"./compile/validate\");\nObject.defineProperty(exports, \"KeywordCxt\", { enumerable: true, get: function () { return validate_1.KeywordCxt; } });\nvar codegen_1 = require(\"./compile/codegen\");\nObject.defineProperty(exports, \"_\", { enumerable: true, get: function () { return codegen_1._; } });\nObject.defineProperty(exports, \"str\", { enumerable: true, get: function () { return codegen_1.str; } });\nObject.defineProperty(exports, \"stringify\", { enumerable: true, get: function () { return codegen_1.stringify; } });\nObject.defineProperty(exports, \"nil\", { enumerable: true, get: function () { return codegen_1.nil; } });\nObject.defineProperty(exports, \"Name\", { enumerable: true, get: function () { return codegen_1.Name; } });\nObject.defineProperty(exports, \"CodeGen\", { enumerable: true, get: function () { return codegen_1.CodeGen; } });\nconst validation_error_1 = require(\"./runtime/validation_error\");\nconst ref_error_1 = require(\"./compile/ref_error\");\nconst rules_1 = require(\"./compile/rules\");\nconst compile_1 = require(\"./compile\");\nconst codegen_2 = require(\"./compile/codegen\");\nconst resolve_1 = require(\"./compile/resolve\");\nconst dataType_1 = require(\"./compile/validate/dataType\");\nconst util_1 = require(\"./compile/util\");\nconst $dataRefSchema = require(\"./refs/data.json\");\nconst uri_1 = require(\"./runtime/uri\");\nconst defaultRegExp = (str, flags) => new RegExp(str, flags);\ndefaultRegExp.code = \"new RegExp\";\nconst META_IGNORE_OPTIONS = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"];\nconst EXT_SCOPE_NAMES = new Set([\n    \"validate\",\n    \"serialize\",\n    \"parse\",\n    \"wrapper\",\n    \"root\",\n    \"schema\",\n    \"keyword\",\n    \"pattern\",\n    \"formats\",\n    \"validate$data\",\n    \"func\",\n    \"obj\",\n    \"Error\",\n]);\nconst removedOptions = {\n    errorDataPath: \"\",\n    format: \"`validateFormats: false` can be used instead.\",\n    nullable: '\"nullable\" keyword is supported by default.',\n    jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n    extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n    missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n    processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n    sourceCode: \"Use option `code: {source: true}`\",\n    strictDefaults: \"It is default now, see option `strict`.\",\n    strictKeywords: \"It is default now, see option `strict`.\",\n    uniqueItems: '\"uniqueItems\" keyword is always validated.',\n    unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n    cache: \"Map is used as cache, schema object as key.\",\n    serialize: \"Map is used as cache, schema object as key.\",\n    ajvErrors: \"It is default now.\",\n};\nconst deprecatedOptions = {\n    ignoreKeywordsWithRef: \"\",\n    jsPropertySyntax: \"\",\n    unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n};\nconst MAX_EXPRESSION = 200;\n// eslint-disable-next-line complexity\nfunction requiredOptions(o) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0;\n    const s = o.strict;\n    const _optz = (_a = o.code) === null || _a === void 0 ? void 0 : _a.optimize;\n    const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0;\n    const regExp = (_c = (_b = o.code) === null || _b === void 0 ? void 0 : _b.regExp) !== null && _c !== void 0 ? _c : defaultRegExp;\n    const uriResolver = (_d = o.uriResolver) !== null && _d !== void 0 ? _d : uri_1.default;\n    return {\n        strictSchema: (_f = (_e = o.strictSchema) !== null && _e !== void 0 ? _e : s) !== null && _f !== void 0 ? _f : true,\n        strictNumbers: (_h = (_g = o.strictNumbers) !== null && _g !== void 0 ? _g : s) !== null && _h !== void 0 ? _h : true,\n        strictTypes: (_k = (_j = o.strictTypes) !== null && _j !== void 0 ? _j : s) !== null && _k !== void 0 ? _k : \"log\",\n        strictTuples: (_m = (_l = o.strictTuples) !== null && _l !== void 0 ? _l : s) !== null && _m !== void 0 ? _m : \"log\",\n        strictRequired: (_p = (_o = o.strictRequired) !== null && _o !== void 0 ? _o : s) !== null && _p !== void 0 ? _p : false,\n        code: o.code ? { ...o.code, optimize, regExp } : { optimize, regExp },\n        loopRequired: (_q = o.loopRequired) !== null && _q !== void 0 ? _q : MAX_EXPRESSION,\n        loopEnum: (_r = o.loopEnum) !== null && _r !== void 0 ? _r : MAX_EXPRESSION,\n        meta: (_s = o.meta) !== null && _s !== void 0 ? _s : true,\n        messages: (_t = o.messages) !== null && _t !== void 0 ? _t : true,\n        inlineRefs: (_u = o.inlineRefs) !== null && _u !== void 0 ? _u : true,\n        schemaId: (_v = o.schemaId) !== null && _v !== void 0 ? _v : \"$id\",\n        addUsedSchema: (_w = o.addUsedSchema) !== null && _w !== void 0 ? _w : true,\n        validateSchema: (_x = o.validateSchema) !== null && _x !== void 0 ? _x : true,\n        validateFormats: (_y = o.validateFormats) !== null && _y !== void 0 ? _y : true,\n        unicodeRegExp: (_z = o.unicodeRegExp) !== null && _z !== void 0 ? _z : true,\n        int32range: (_0 = o.int32range) !== null && _0 !== void 0 ? _0 : true,\n        uriResolver: uriResolver,\n    };\n}\nclass Ajv {\n    constructor(opts = {}) {\n        this.schemas = {};\n        this.refs = {};\n        this.formats = {};\n        this._compilations = new Set();\n        this._loading = {};\n        this._cache = new Map();\n        opts = this.opts = { ...opts, ...requiredOptions(opts) };\n        const { es5, lines } = this.opts.code;\n        this.scope = new codegen_2.ValueScope({ scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines });\n        this.logger = getLogger(opts.logger);\n        const formatOpt = opts.validateFormats;\n        opts.validateFormats = false;\n        this.RULES = (0, rules_1.getRules)();\n        checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\");\n        checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\");\n        this._metaOpts = getMetaSchemaOptions.call(this);\n        if (opts.formats)\n            addInitialFormats.call(this);\n        this._addVocabularies();\n        this._addDefaultMetaSchema();\n        if (opts.keywords)\n            addInitialKeywords.call(this, opts.keywords);\n        if (typeof opts.meta == \"object\")\n            this.addMetaSchema(opts.meta);\n        addInitialSchemas.call(this);\n        opts.validateFormats = formatOpt;\n    }\n    _addVocabularies() {\n        this.addKeyword(\"$async\");\n    }\n    _addDefaultMetaSchema() {\n        const { $data, meta, schemaId } = this.opts;\n        let _dataRefSchema = $dataRefSchema;\n        if (schemaId === \"id\") {\n            _dataRefSchema = { ...$dataRefSchema };\n            _dataRefSchema.id = _dataRefSchema.$id;\n            delete _dataRefSchema.$id;\n        }\n        if (meta && $data)\n            this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false);\n    }\n    defaultMeta() {\n        const { meta, schemaId } = this.opts;\n        return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined);\n    }\n    validate(schemaKeyRef, // key, ref or schema object\n    data // to be validated\n    ) {\n        let v;\n        if (typeof schemaKeyRef == \"string\") {\n            v = this.getSchema(schemaKeyRef);\n            if (!v)\n                throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`);\n        }\n        else {\n            v = this.compile(schemaKeyRef);\n        }\n        const valid = v(data);\n        if (!(\"$async\" in v))\n            this.errors = v.errors;\n        return valid;\n    }\n    compile(schema, _meta) {\n        const sch = this._addSchema(schema, _meta);\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    compileAsync(schema, meta) {\n        if (typeof this.opts.loadSchema != \"function\") {\n            throw new Error(\"options.loadSchema should be a function\");\n        }\n        const { loadSchema } = this.opts;\n        return runCompileAsync.call(this, schema, meta);\n        async function runCompileAsync(_schema, _meta) {\n            await loadMetaSchema.call(this, _schema.$schema);\n            const sch = this._addSchema(_schema, _meta);\n            return sch.validate || _compileAsync.call(this, sch);\n        }\n        async function loadMetaSchema($ref) {\n            if ($ref && !this.getSchema($ref)) {\n                await runCompileAsync.call(this, { $ref }, true);\n            }\n        }\n        async function _compileAsync(sch) {\n            try {\n                return this._compileSchemaEnv(sch);\n            }\n            catch (e) {\n                if (!(e instanceof ref_error_1.default))\n                    throw e;\n                checkLoaded.call(this, e);\n                await loadMissingSchema.call(this, e.missingSchema);\n                return _compileAsync.call(this, sch);\n            }\n        }\n        function checkLoaded({ missingSchema: ref, missingRef }) {\n            if (this.refs[ref]) {\n                throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`);\n            }\n        }\n        async function loadMissingSchema(ref) {\n            const _schema = await _loadSchema.call(this, ref);\n            if (!this.refs[ref])\n                await loadMetaSchema.call(this, _schema.$schema);\n            if (!this.refs[ref])\n                this.addSchema(_schema, ref, meta);\n        }\n        async function _loadSchema(ref) {\n            const p = this._loading[ref];\n            if (p)\n                return p;\n            try {\n                return await (this._loading[ref] = loadSchema(ref));\n            }\n            finally {\n                delete this._loading[ref];\n            }\n        }\n    }\n    // Adds schema to the instance\n    addSchema(schema, // If array is passed, `key` will be ignored\n    key, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n    ) {\n        if (Array.isArray(schema)) {\n            for (const sch of schema)\n                this.addSchema(sch, undefined, _meta, _validateSchema);\n            return this;\n        }\n        let id;\n        if (typeof schema === \"object\") {\n            const { schemaId } = this.opts;\n            id = schema[schemaId];\n            if (id !== undefined && typeof id != \"string\") {\n                throw new Error(`schema ${schemaId} must be string`);\n            }\n        }\n        key = (0, resolve_1.normalizeId)(key || id);\n        this._checkUnique(key);\n        this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true);\n        return this;\n    }\n    // Add schema that will be used to validate other schemas\n    // options in META_IGNORE_OPTIONS are alway set to false\n    addMetaSchema(schema, key, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n    ) {\n        this.addSchema(schema, key, true, _validateSchema);\n        return this;\n    }\n    //  Validate schema against its meta-schema\n    validateSchema(schema, throwOrLogError) {\n        if (typeof schema == \"boolean\")\n            return true;\n        let $schema;\n        $schema = schema.$schema;\n        if ($schema !== undefined && typeof $schema != \"string\") {\n            throw new Error(\"$schema must be a string\");\n        }\n        $schema = $schema || this.opts.defaultMeta || this.defaultMeta();\n        if (!$schema) {\n            this.logger.warn(\"meta-schema not available\");\n            this.errors = null;\n            return true;\n        }\n        const valid = this.validate($schema, schema);\n        if (!valid && throwOrLogError) {\n            const message = \"schema is invalid: \" + this.errorsText();\n            if (this.opts.validateSchema === \"log\")\n                this.logger.error(message);\n            else\n                throw new Error(message);\n        }\n        return valid;\n    }\n    // Get compiled schema by `key` or `ref`.\n    // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n    getSchema(keyRef) {\n        let sch;\n        while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\")\n            keyRef = sch;\n        if (sch === undefined) {\n            const { schemaId } = this.opts;\n            const root = new compile_1.SchemaEnv({ schema: {}, schemaId });\n            sch = compile_1.resolveSchema.call(this, root, keyRef);\n            if (!sch)\n                return;\n            this.refs[keyRef] = sch;\n        }\n        return (sch.validate || this._compileSchemaEnv(sch));\n    }\n    // Remove cached schema(s).\n    // If no parameter is passed all schemas but meta-schemas are removed.\n    // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n    // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n    removeSchema(schemaKeyRef) {\n        if (schemaKeyRef instanceof RegExp) {\n            this._removeAllSchemas(this.schemas, schemaKeyRef);\n            this._removeAllSchemas(this.refs, schemaKeyRef);\n            return this;\n        }\n        switch (typeof schemaKeyRef) {\n            case \"undefined\":\n                this._removeAllSchemas(this.schemas);\n                this._removeAllSchemas(this.refs);\n                this._cache.clear();\n                return this;\n            case \"string\": {\n                const sch = getSchEnv.call(this, schemaKeyRef);\n                if (typeof sch == \"object\")\n                    this._cache.delete(sch.schema);\n                delete this.schemas[schemaKeyRef];\n                delete this.refs[schemaKeyRef];\n                return this;\n            }\n            case \"object\": {\n                const cacheKey = schemaKeyRef;\n                this._cache.delete(cacheKey);\n                let id = schemaKeyRef[this.opts.schemaId];\n                if (id) {\n                    id = (0, resolve_1.normalizeId)(id);\n                    delete this.schemas[id];\n                    delete this.refs[id];\n                }\n                return this;\n            }\n            default:\n                throw new Error(\"ajv.removeSchema: invalid parameter\");\n        }\n    }\n    // add \"vocabulary\" - a collection of keywords\n    addVocabulary(definitions) {\n        for (const def of definitions)\n            this.addKeyword(def);\n        return this;\n    }\n    addKeyword(kwdOrDef, def // deprecated\n    ) {\n        let keyword;\n        if (typeof kwdOrDef == \"string\") {\n            keyword = kwdOrDef;\n            if (typeof def == \"object\") {\n                this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\");\n                def.keyword = keyword;\n            }\n        }\n        else if (typeof kwdOrDef == \"object\" && def === undefined) {\n            def = kwdOrDef;\n            keyword = def.keyword;\n            if (Array.isArray(keyword) && !keyword.length) {\n                throw new Error(\"addKeywords: keyword must be string or non-empty array\");\n            }\n        }\n        else {\n            throw new Error(\"invalid addKeywords parameters\");\n        }\n        checkKeyword.call(this, keyword, def);\n        if (!def) {\n            (0, util_1.eachItem)(keyword, (kwd) => addRule.call(this, kwd));\n            return this;\n        }\n        keywordMetaschema.call(this, def);\n        const definition = {\n            ...def,\n            type: (0, dataType_1.getJSONTypes)(def.type),\n            schemaType: (0, dataType_1.getJSONTypes)(def.schemaType),\n        };\n        (0, util_1.eachItem)(keyword, definition.type.length === 0\n            ? (k) => addRule.call(this, k, definition)\n            : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t)));\n        return this;\n    }\n    getKeyword(keyword) {\n        const rule = this.RULES.all[keyword];\n        return typeof rule == \"object\" ? rule.definition : !!rule;\n    }\n    // Remove keyword\n    removeKeyword(keyword) {\n        // TODO return type should be Ajv\n        const { RULES } = this;\n        delete RULES.keywords[keyword];\n        delete RULES.all[keyword];\n        for (const group of RULES.rules) {\n            const i = group.rules.findIndex((rule) => rule.keyword === keyword);\n            if (i >= 0)\n                group.rules.splice(i, 1);\n        }\n        return this;\n    }\n    // Add format\n    addFormat(name, format) {\n        if (typeof format == \"string\")\n            format = new RegExp(format);\n        this.formats[name] = format;\n        return this;\n    }\n    errorsText(errors = this.errors, // optional array of validation errors\n    { separator = \", \", dataVar = \"data\" } = {} // optional options with properties `separator` and `dataVar`\n    ) {\n        if (!errors || errors.length === 0)\n            return \"No errors\";\n        return errors\n            .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n            .reduce((text, msg) => text + separator + msg);\n    }\n    $dataMetaSchema(metaSchema, keywordsJsonPointers) {\n        const rules = this.RULES.all;\n        metaSchema = JSON.parse(JSON.stringify(metaSchema));\n        for (const jsonPointer of keywordsJsonPointers) {\n            const segments = jsonPointer.split(\"/\").slice(1); // first segment is an empty string\n            let keywords = metaSchema;\n            for (const seg of segments)\n                keywords = keywords[seg];\n            for (const key in rules) {\n                const rule = rules[key];\n                if (typeof rule != \"object\")\n                    continue;\n                const { $data } = rule.definition;\n                const schema = keywords[key];\n                if ($data && schema)\n                    keywords[key] = schemaOrData(schema);\n            }\n        }\n        return metaSchema;\n    }\n    _removeAllSchemas(schemas, regex) {\n        for (const keyRef in schemas) {\n            const sch = schemas[keyRef];\n            if (!regex || regex.test(keyRef)) {\n                if (typeof sch == \"string\") {\n                    delete schemas[keyRef];\n                }\n                else if (sch && !sch.meta) {\n                    this._cache.delete(sch.schema);\n                    delete schemas[keyRef];\n                }\n            }\n        }\n    }\n    _addSchema(schema, meta, baseId, validateSchema = this.opts.validateSchema, addSchema = this.opts.addUsedSchema) {\n        let id;\n        const { schemaId } = this.opts;\n        if (typeof schema == \"object\") {\n            id = schema[schemaId];\n        }\n        else {\n            if (this.opts.jtd)\n                throw new Error(\"schema must be object\");\n            else if (typeof schema != \"boolean\")\n                throw new Error(\"schema must be object or boolean\");\n        }\n        let sch = this._cache.get(schema);\n        if (sch !== undefined)\n            return sch;\n        baseId = (0, resolve_1.normalizeId)(id || baseId);\n        const localRefs = resolve_1.getSchemaRefs.call(this, schema, baseId);\n        sch = new compile_1.SchemaEnv({ schema, schemaId, meta, baseId, localRefs });\n        this._cache.set(sch.schema, sch);\n        if (addSchema && !baseId.startsWith(\"#\")) {\n            // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n            if (baseId)\n                this._checkUnique(baseId);\n            this.refs[baseId] = sch;\n        }\n        if (validateSchema)\n            this.validateSchema(schema, true);\n        return sch;\n    }\n    _checkUnique(id) {\n        if (this.schemas[id] || this.refs[id]) {\n            throw new Error(`schema with key or id \"${id}\" already exists`);\n        }\n    }\n    _compileSchemaEnv(sch) {\n        if (sch.meta)\n            this._compileMetaSchema(sch);\n        else\n            compile_1.compileSchema.call(this, sch);\n        /* istanbul ignore if */\n        if (!sch.validate)\n            throw new Error(\"ajv implementation error\");\n        return sch.validate;\n    }\n    _compileMetaSchema(sch) {\n        const currentOpts = this.opts;\n        this.opts = this._metaOpts;\n        try {\n            compile_1.compileSchema.call(this, sch);\n        }\n        finally {\n            this.opts = currentOpts;\n        }\n    }\n}\nexports.default = Ajv;\nAjv.ValidationError = validation_error_1.default;\nAjv.MissingRefError = ref_error_1.default;\nfunction checkOptions(checkOpts, options, msg, log = \"error\") {\n    for (const key in checkOpts) {\n        const opt = key;\n        if (opt in options)\n            this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`);\n    }\n}\nfunction getSchEnv(keyRef) {\n    keyRef = (0, resolve_1.normalizeId)(keyRef); // TODO tests fail without this line\n    return this.schemas[keyRef] || this.refs[keyRef];\n}\nfunction addInitialSchemas() {\n    const optsSchemas = this.opts.schemas;\n    if (!optsSchemas)\n        return;\n    if (Array.isArray(optsSchemas))\n        this.addSchema(optsSchemas);\n    else\n        for (const key in optsSchemas)\n            this.addSchema(optsSchemas[key], key);\n}\nfunction addInitialFormats() {\n    for (const name in this.opts.formats) {\n        const format = this.opts.formats[name];\n        if (format)\n            this.addFormat(name, format);\n    }\n}\nfunction addInitialKeywords(defs) {\n    if (Array.isArray(defs)) {\n        this.addVocabulary(defs);\n        return;\n    }\n    this.logger.warn(\"keywords option as map is deprecated, pass array\");\n    for (const keyword in defs) {\n        const def = defs[keyword];\n        if (!def.keyword)\n            def.keyword = keyword;\n        this.addKeyword(def);\n    }\n}\nfunction getMetaSchemaOptions() {\n    const metaOpts = { ...this.opts };\n    for (const opt of META_IGNORE_OPTIONS)\n        delete metaOpts[opt];\n    return metaOpts;\n}\nconst noLogs = { log() { }, warn() { }, error() { } };\nfunction getLogger(logger) {\n    if (logger === false)\n        return noLogs;\n    if (logger === undefined)\n        return console;\n    if (logger.log && logger.warn && logger.error)\n        return logger;\n    throw new Error(\"logger must implement log, warn and error methods\");\n}\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i;\nfunction checkKeyword(keyword, def) {\n    const { RULES } = this;\n    (0, util_1.eachItem)(keyword, (kwd) => {\n        if (RULES.keywords[kwd])\n            throw new Error(`Keyword ${kwd} is already defined`);\n        if (!KEYWORD_NAME.test(kwd))\n            throw new Error(`Keyword ${kwd} has invalid name`);\n    });\n    if (!def)\n        return;\n    if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n        throw new Error('$data keyword must have \"code\" or \"validate\" function');\n    }\n}\nfunction addRule(keyword, definition, dataType) {\n    var _a;\n    const post = definition === null || definition === void 0 ? void 0 : definition.post;\n    if (dataType && post)\n        throw new Error('keyword with \"post\" flag cannot have \"type\"');\n    const { RULES } = this;\n    let ruleGroup = post ? RULES.post : RULES.rules.find(({ type: t }) => t === dataType);\n    if (!ruleGroup) {\n        ruleGroup = { type: dataType, rules: [] };\n        RULES.rules.push(ruleGroup);\n    }\n    RULES.keywords[keyword] = true;\n    if (!definition)\n        return;\n    const rule = {\n        keyword,\n        definition: {\n            ...definition,\n            type: (0, dataType_1.getJSONTypes)(definition.type),\n            schemaType: (0, dataType_1.getJSONTypes)(definition.schemaType),\n        },\n    };\n    if (definition.before)\n        addBeforeRule.call(this, ruleGroup, rule, definition.before);\n    else\n        ruleGroup.rules.push(rule);\n    RULES.all[keyword] = rule;\n    (_a = definition.implements) === null || _a === void 0 ? void 0 : _a.forEach((kwd) => this.addKeyword(kwd));\n}\nfunction addBeforeRule(ruleGroup, rule, before) {\n    const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before);\n    if (i >= 0) {\n        ruleGroup.rules.splice(i, 0, rule);\n    }\n    else {\n        ruleGroup.rules.push(rule);\n        this.logger.warn(`rule ${before} is not defined`);\n    }\n}\nfunction keywordMetaschema(def) {\n    let { metaSchema } = def;\n    if (metaSchema === undefined)\n        return;\n    if (def.$data && this.opts.$data)\n        metaSchema = schemaOrData(metaSchema);\n    def.validateSchema = this.compile(metaSchema, true);\n}\nconst $dataRef = {\n    $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n};\nfunction schemaOrData(schema) {\n    return { anyOf: [schema, $dataRef] };\n}\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://github.com/ajv-validator/ajv/issues/889\nconst equal = require(\"fast-deep-equal\");\nequal.code = 'require(\"ajv/dist/runtime/equal\").default';\nexports.default = equal;\n//# sourceMappingURL=equal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nfunction ucs2length(str) {\n    const len = str.length;\n    let length = 0;\n    let pos = 0;\n    let value;\n    while (pos < len) {\n        length++;\n        value = str.charCodeAt(pos++);\n        if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n            // high surrogate, and there is a next character\n            value = str.charCodeAt(pos);\n            if ((value & 0xfc00) === 0xdc00)\n                pos++; // low surrogate\n        }\n    }\n    return length;\n}\nexports.default = ucs2length;\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default';\n//# sourceMappingURL=ucs2length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst uri = require(\"uri-js\");\nuri.code = 'require(\"ajv/dist/runtime/uri\").default';\nexports.default = uri;\n//# sourceMappingURL=uri.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidationError extends Error {\n    constructor(errors) {\n        super(\"validation failed\");\n        this.errors = errors;\n        this.ajv = this.validation = true;\n    }\n}\nexports.default = ValidationError;\n//# sourceMappingURL=validation_error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateAdditionalItems = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"additionalItems\",\n    type: \"array\",\n    schemaType: [\"boolean\", \"object\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { parentSchema, it } = cxt;\n        const { items } = parentSchema;\n        if (!Array.isArray(items)) {\n            (0, util_1.checkStrictMode)(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas');\n            return;\n        }\n        validateAdditionalItems(cxt, items);\n    },\n};\nfunction validateAdditionalItems(cxt, items) {\n    const { gen, schema, data, keyword, it } = cxt;\n    it.items = true;\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    if (schema === false) {\n        cxt.setParams({ len: items.length });\n        cxt.pass((0, codegen_1._) `${len} <= ${items.length}`);\n    }\n    else if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n        const valid = gen.var(\"valid\", (0, codegen_1._) `${len} <= ${items.length}`); // TODO var\n        gen.if((0, codegen_1.not)(valid), () => validateItems(valid));\n        cxt.ok(valid);\n    }\n    function validateItems(valid) {\n        gen.forRange(\"i\", items.length, len, (i) => {\n            cxt.subschema({ keyword, dataProp: i, dataPropType: util_1.Type.Num }, valid);\n            if (!it.allErrors)\n                gen.if((0, codegen_1.not)(valid), () => gen.break());\n        });\n    }\n}\nexports.validateAdditionalItems = validateAdditionalItems;\nexports.default = def;\n//# sourceMappingURL=additionalItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must NOT have additional properties\",\n    params: ({ params }) => (0, codegen_1._) `{additionalProperty: ${params.additionalProperty}}`,\n};\nconst def = {\n    keyword: \"additionalProperties\",\n    type: [\"object\"],\n    schemaType: [\"boolean\", \"object\"],\n    allowUndefined: true,\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, errsCount, it } = cxt;\n        /* istanbul ignore if */\n        if (!errsCount)\n            throw new Error(\"ajv implementation error\");\n        const { allErrors, opts } = it;\n        it.props = true;\n        if (opts.removeAdditional !== \"all\" && (0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const props = (0, code_1.allSchemaProperties)(parentSchema.properties);\n        const patProps = (0, code_1.allSchemaProperties)(parentSchema.patternProperties);\n        checkAdditionalProperties();\n        cxt.ok((0, codegen_1._) `${errsCount} === ${names_1.default.errors}`);\n        function checkAdditionalProperties() {\n            gen.forIn(\"key\", data, (key) => {\n                if (!props.length && !patProps.length)\n                    additionalPropertyCode(key);\n                else\n                    gen.if(isAdditional(key), () => additionalPropertyCode(key));\n            });\n        }\n        function isAdditional(key) {\n            let definedProp;\n            if (props.length > 8) {\n                // TODO maybe an option instead of hard-coded 8?\n                const propsSchema = (0, util_1.schemaRefOrVal)(it, parentSchema.properties, \"properties\");\n                definedProp = (0, code_1.isOwnProperty)(gen, propsSchema, key);\n            }\n            else if (props.length) {\n                definedProp = (0, codegen_1.or)(...props.map((p) => (0, codegen_1._) `${key} === ${p}`));\n            }\n            else {\n                definedProp = codegen_1.nil;\n            }\n            if (patProps.length) {\n                definedProp = (0, codegen_1.or)(definedProp, ...patProps.map((p) => (0, codegen_1._) `${(0, code_1.usePattern)(cxt, p)}.test(${key})`));\n            }\n            return (0, codegen_1.not)(definedProp);\n        }\n        function deleteAdditional(key) {\n            gen.code((0, codegen_1._) `delete ${data}[${key}]`);\n        }\n        function additionalPropertyCode(key) {\n            if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n                deleteAdditional(key);\n                return;\n            }\n            if (schema === false) {\n                cxt.setParams({ additionalProperty: key });\n                cxt.error();\n                if (!allErrors)\n                    gen.break();\n                return;\n            }\n            if (typeof schema == \"object\" && !(0, util_1.alwaysValidSchema)(it, schema)) {\n                const valid = gen.name(\"valid\");\n                if (opts.removeAdditional === \"failing\") {\n                    applyAdditionalSchema(key, valid, false);\n                    gen.if((0, codegen_1.not)(valid), () => {\n                        cxt.reset();\n                        deleteAdditional(key);\n                    });\n                }\n                else {\n                    applyAdditionalSchema(key, valid);\n                    if (!allErrors)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                }\n            }\n        }\n        function applyAdditionalSchema(key, valid, errors) {\n            const subschema = {\n                keyword: \"additionalProperties\",\n                dataProp: key,\n                dataPropType: util_1.Type.Str,\n            };\n            if (errors === false) {\n                Object.assign(subschema, {\n                    compositeRule: true,\n                    createErrors: false,\n                    allErrors: false,\n                });\n            }\n            cxt.subschema(subschema, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=additionalProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"allOf\",\n    schemaType: \"array\",\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        const valid = gen.name(\"valid\");\n        schema.forEach((sch, i) => {\n            if ((0, util_1.alwaysValidSchema)(it, sch))\n                return;\n            const schCxt = cxt.subschema({ keyword: \"allOf\", schemaProp: i }, valid);\n            cxt.ok(valid);\n            cxt.mergeEvaluated(schCxt);\n        });\n    },\n};\nexports.default = def;\n//# sourceMappingURL=allOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"anyOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    code: code_1.validateUnion,\n    error: { message: \"must match a schema in anyOf\" },\n};\nexports.default = def;\n//# sourceMappingURL=anyOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { min, max } }) => max === undefined\n        ? (0, codegen_1.str) `must contain at least ${min} valid item(s)`\n        : (0, codegen_1.str) `must contain at least ${min} and no more than ${max} valid item(s)`,\n    params: ({ params: { min, max } }) => max === undefined ? (0, codegen_1._) `{minContains: ${min}}` : (0, codegen_1._) `{minContains: ${min}, maxContains: ${max}}`,\n};\nconst def = {\n    keyword: \"contains\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        let min;\n        let max;\n        const { minContains, maxContains } = parentSchema;\n        if (it.opts.next) {\n            min = minContains === undefined ? 1 : minContains;\n            max = maxContains;\n        }\n        else {\n            min = 1;\n        }\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        cxt.setParams({ min, max });\n        if (max === undefined && min === 0) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`);\n            return;\n        }\n        if (max !== undefined && min > max) {\n            (0, util_1.checkStrictMode)(it, `\"minContains\" > \"maxContains\" is always invalid`);\n            cxt.fail();\n            return;\n        }\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            let cond = (0, codegen_1._) `${len} >= ${min}`;\n            if (max !== undefined)\n                cond = (0, codegen_1._) `${cond} && ${len} <= ${max}`;\n            cxt.pass(cond);\n            return;\n        }\n        it.items = true;\n        const valid = gen.name(\"valid\");\n        if (max === undefined && min === 1) {\n            validateItems(valid, () => gen.if(valid, () => gen.break()));\n        }\n        else if (min === 0) {\n            gen.let(valid, true);\n            if (max !== undefined)\n                gen.if((0, codegen_1._) `${data}.length > 0`, validateItemsWithCount);\n        }\n        else {\n            gen.let(valid, false);\n            validateItemsWithCount();\n        }\n        cxt.result(valid, () => cxt.reset());\n        function validateItemsWithCount() {\n            const schValid = gen.name(\"_valid\");\n            const count = gen.let(\"count\", 0);\n            validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)));\n        }\n        function validateItems(_valid, block) {\n            gen.forRange(\"i\", 0, len, (i) => {\n                cxt.subschema({\n                    keyword: \"contains\",\n                    dataProp: i,\n                    dataPropType: util_1.Type.Num,\n                    compositeRule: true,\n                }, _valid);\n                block();\n            });\n        }\n        function checkLimits(count) {\n            gen.code((0, codegen_1._) `${count}++`);\n            if (max === undefined) {\n                gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true).break());\n            }\n            else {\n                gen.if((0, codegen_1._) `${count} > ${max}`, () => gen.assign(valid, false).break());\n                if (min === 1)\n                    gen.assign(valid, true);\n                else\n                    gen.if((0, codegen_1._) `${count} >= ${min}`, () => gen.assign(valid, true));\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=contains.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSchemaDeps = exports.validatePropertyDeps = exports.error = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nexports.error = {\n    message: ({ params: { property, depsCount, deps } }) => {\n        const property_ies = depsCount === 1 ? \"property\" : \"properties\";\n        return (0, codegen_1.str) `must have ${property_ies} ${deps} when property ${property} is present`;\n    },\n    params: ({ params: { property, depsCount, deps, missingProperty } }) => (0, codegen_1._) `{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n};\nconst def = {\n    keyword: \"dependencies\",\n    type: \"object\",\n    schemaType: \"object\",\n    error: exports.error,\n    code(cxt) {\n        const [propDeps, schDeps] = splitDependencies(cxt);\n        validatePropertyDeps(cxt, propDeps);\n        validateSchemaDeps(cxt, schDeps);\n    },\n};\nfunction splitDependencies({ schema }) {\n    const propertyDeps = {};\n    const schemaDeps = {};\n    for (const key in schema) {\n        if (key === \"__proto__\")\n            continue;\n        const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps;\n        deps[key] = schema[key];\n    }\n    return [propertyDeps, schemaDeps];\n}\nfunction validatePropertyDeps(cxt, propertyDeps = cxt.schema) {\n    const { gen, data, it } = cxt;\n    if (Object.keys(propertyDeps).length === 0)\n        return;\n    const missing = gen.let(\"missing\");\n    for (const prop in propertyDeps) {\n        const deps = propertyDeps[prop];\n        if (deps.length === 0)\n            continue;\n        const hasProperty = (0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties);\n        cxt.setParams({\n            property: prop,\n            depsCount: deps.length,\n            deps: deps.join(\", \"),\n        });\n        if (it.allErrors) {\n            gen.if(hasProperty, () => {\n                for (const depProp of deps) {\n                    (0, code_1.checkReportMissingProp)(cxt, depProp);\n                }\n            });\n        }\n        else {\n            gen.if((0, codegen_1._) `${hasProperty} && (${(0, code_1.checkMissingProp)(cxt, deps, missing)})`);\n            (0, code_1.reportMissingProp)(cxt, missing);\n            gen.else();\n        }\n    }\n}\nexports.validatePropertyDeps = validatePropertyDeps;\nfunction validateSchemaDeps(cxt, schemaDeps = cxt.schema) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    for (const prop in schemaDeps) {\n        if ((0, util_1.alwaysValidSchema)(it, schemaDeps[prop]))\n            continue;\n        gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties), () => {\n            const schCxt = cxt.subschema({ keyword, schemaProp: prop }, valid);\n            cxt.mergeValidEvaluated(schCxt, valid);\n        }, () => gen.var(valid, true) // TODO var\n        );\n        cxt.ok(valid);\n    }\n}\nexports.validateSchemaDeps = validateSchemaDeps;\nexports.default = def;\n//# sourceMappingURL=dependencies.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params }) => (0, codegen_1.str) `must match \"${params.ifClause}\" schema`,\n    params: ({ params }) => (0, codegen_1._) `{failingKeyword: ${params.ifClause}}`,\n};\nconst def = {\n    keyword: \"if\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, parentSchema, it } = cxt;\n        if (parentSchema.then === undefined && parentSchema.else === undefined) {\n            (0, util_1.checkStrictMode)(it, '\"if\" without \"then\" and \"else\" is ignored');\n        }\n        const hasThen = hasSchema(it, \"then\");\n        const hasElse = hasSchema(it, \"else\");\n        if (!hasThen && !hasElse)\n            return;\n        const valid = gen.let(\"valid\", true);\n        const schValid = gen.name(\"_valid\");\n        validateIf();\n        cxt.reset();\n        if (hasThen && hasElse) {\n            const ifClause = gen.let(\"ifClause\");\n            cxt.setParams({ ifClause });\n            gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause));\n        }\n        else if (hasThen) {\n            gen.if(schValid, validateClause(\"then\"));\n        }\n        else {\n            gen.if((0, codegen_1.not)(schValid), validateClause(\"else\"));\n        }\n        cxt.pass(valid, () => cxt.error(true));\n        function validateIf() {\n            const schCxt = cxt.subschema({\n                keyword: \"if\",\n                compositeRule: true,\n                createErrors: false,\n                allErrors: false,\n            }, schValid);\n            cxt.mergeEvaluated(schCxt);\n        }\n        function validateClause(keyword, ifClause) {\n            return () => {\n                const schCxt = cxt.subschema({ keyword }, schValid);\n                gen.assign(valid, schValid);\n                cxt.mergeValidEvaluated(schCxt, valid);\n                if (ifClause)\n                    gen.assign(ifClause, (0, codegen_1._) `${keyword}`);\n                else\n                    cxt.setParams({ ifClause: keyword });\n            };\n        }\n    },\n};\nfunction hasSchema(it, keyword) {\n    const schema = it.schema[keyword];\n    return schema !== undefined && !(0, util_1.alwaysValidSchema)(it, schema);\n}\nexports.default = def;\n//# sourceMappingURL=if.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst additionalItems_1 = require(\"./additionalItems\");\nconst prefixItems_1 = require(\"./prefixItems\");\nconst items_1 = require(\"./items\");\nconst items2020_1 = require(\"./items2020\");\nconst contains_1 = require(\"./contains\");\nconst dependencies_1 = require(\"./dependencies\");\nconst propertyNames_1 = require(\"./propertyNames\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst properties_1 = require(\"./properties\");\nconst patternProperties_1 = require(\"./patternProperties\");\nconst not_1 = require(\"./not\");\nconst anyOf_1 = require(\"./anyOf\");\nconst oneOf_1 = require(\"./oneOf\");\nconst allOf_1 = require(\"./allOf\");\nconst if_1 = require(\"./if\");\nconst thenElse_1 = require(\"./thenElse\");\nfunction getApplicator(draft2020 = false) {\n    const applicator = [\n        // any\n        not_1.default,\n        anyOf_1.default,\n        oneOf_1.default,\n        allOf_1.default,\n        if_1.default,\n        thenElse_1.default,\n        // object\n        propertyNames_1.default,\n        additionalProperties_1.default,\n        dependencies_1.default,\n        properties_1.default,\n        patternProperties_1.default,\n    ];\n    // array\n    if (draft2020)\n        applicator.push(prefixItems_1.default, items2020_1.default);\n    else\n        applicator.push(additionalItems_1.default, items_1.default);\n    applicator.push(contains_1.default);\n    return applicator;\n}\nexports.default = getApplicator;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateTuple = void 0;\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"array\", \"boolean\"],\n    before: \"uniqueItems\",\n    code(cxt) {\n        const { schema, it } = cxt;\n        if (Array.isArray(schema))\n            return validateTuple(cxt, \"additionalItems\", schema);\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nfunction validateTuple(cxt, extraItems, schArr = cxt.schema) {\n    const { gen, parentSchema, data, keyword, it } = cxt;\n    checkStrictTuple(parentSchema);\n    if (it.opts.unevaluated && schArr.length && it.items !== true) {\n        it.items = util_1.mergeEvaluated.items(gen, schArr.length, it.items);\n    }\n    const valid = gen.name(\"valid\");\n    const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n    schArr.forEach((sch, i) => {\n        if ((0, util_1.alwaysValidSchema)(it, sch))\n            return;\n        gen.if((0, codegen_1._) `${len} > ${i}`, () => cxt.subschema({\n            keyword,\n            schemaProp: i,\n            dataProp: i,\n        }, valid));\n        cxt.ok(valid);\n    });\n    function checkStrictTuple(sch) {\n        const { opts, errSchemaPath } = it;\n        const l = schArr.length;\n        const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false);\n        if (opts.strictTuples && !fullTuple) {\n            const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`;\n            (0, util_1.checkStrictMode)(it, msg, opts.strictTuples);\n        }\n    }\n}\nexports.validateTuple = validateTuple;\nexports.default = def;\n//# sourceMappingURL=items.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst code_1 = require(\"../code\");\nconst additionalItems_1 = require(\"./additionalItems\");\nconst error = {\n    message: ({ params: { len } }) => (0, codegen_1.str) `must NOT have more than ${len} items`,\n    params: ({ params: { len } }) => (0, codegen_1._) `{limit: ${len}}`,\n};\nconst def = {\n    keyword: \"items\",\n    type: \"array\",\n    schemaType: [\"object\", \"boolean\"],\n    before: \"uniqueItems\",\n    error,\n    code(cxt) {\n        const { schema, parentSchema, it } = cxt;\n        const { prefixItems } = parentSchema;\n        it.items = true;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        if (prefixItems)\n            (0, additionalItems_1.validateAdditionalItems)(cxt, prefixItems);\n        else\n            cxt.ok((0, code_1.validateArray)(cxt));\n    },\n};\nexports.default = def;\n//# sourceMappingURL=items2020.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"not\",\n    schemaType: [\"object\", \"boolean\"],\n    trackErrors: true,\n    code(cxt) {\n        const { gen, schema, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema)) {\n            cxt.fail();\n            return;\n        }\n        const valid = gen.name(\"valid\");\n        cxt.subschema({\n            keyword: \"not\",\n            compositeRule: true,\n            createErrors: false,\n            allErrors: false,\n        }, valid);\n        cxt.failResult(valid, () => cxt.reset(), () => cxt.error());\n    },\n    error: { message: \"must NOT be valid\" },\n};\nexports.default = def;\n//# sourceMappingURL=not.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"must match exactly one schema in oneOf\",\n    params: ({ params }) => (0, codegen_1._) `{passingSchemas: ${params.passing}}`,\n};\nconst def = {\n    keyword: \"oneOf\",\n    schemaType: \"array\",\n    trackErrors: true,\n    error,\n    code(cxt) {\n        const { gen, schema, parentSchema, it } = cxt;\n        /* istanbul ignore if */\n        if (!Array.isArray(schema))\n            throw new Error(\"ajv implementation error\");\n        if (it.opts.discriminator && parentSchema.discriminator)\n            return;\n        const schArr = schema;\n        const valid = gen.let(\"valid\", false);\n        const passing = gen.let(\"passing\", null);\n        const schValid = gen.name(\"_valid\");\n        cxt.setParams({ passing });\n        // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n        gen.block(validateOneOf);\n        cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n        function validateOneOf() {\n            schArr.forEach((sch, i) => {\n                let schCxt;\n                if ((0, util_1.alwaysValidSchema)(it, sch)) {\n                    gen.var(schValid, true);\n                }\n                else {\n                    schCxt = cxt.subschema({\n                        keyword: \"oneOf\",\n                        schemaProp: i,\n                        compositeRule: true,\n                    }, schValid);\n                }\n                if (i > 0) {\n                    gen\n                        .if((0, codegen_1._) `${schValid} && ${valid}`)\n                        .assign(valid, false)\n                        .assign(passing, (0, codegen_1._) `[${passing}, ${i}]`)\n                        .else();\n                }\n                gen.if(schValid, () => {\n                    gen.assign(valid, true);\n                    gen.assign(passing, i);\n                    if (schCxt)\n                        cxt.mergeEvaluated(schCxt, codegen_1.Name);\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=oneOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst util_2 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"patternProperties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, data, parentSchema, it } = cxt;\n        const { opts } = it;\n        const patterns = (0, code_1.allSchemaProperties)(schema);\n        const alwaysValidPatterns = patterns.filter((p) => (0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (patterns.length === 0 ||\n            (alwaysValidPatterns.length === patterns.length &&\n                (!it.opts.unevaluated || it.props === true))) {\n            return;\n        }\n        const checkProperties = opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties;\n        const valid = gen.name(\"valid\");\n        if (it.props !== true && !(it.props instanceof codegen_1.Name)) {\n            it.props = (0, util_2.evaluatedPropsToName)(gen, it.props);\n        }\n        const { props } = it;\n        validatePatternProperties();\n        function validatePatternProperties() {\n            for (const pat of patterns) {\n                if (checkProperties)\n                    checkMatchingProperties(pat);\n                if (it.allErrors) {\n                    validateProperties(pat);\n                }\n                else {\n                    gen.var(valid, true); // TODO var\n                    validateProperties(pat);\n                    gen.if(valid);\n                }\n            }\n        }\n        function checkMatchingProperties(pat) {\n            for (const prop in checkProperties) {\n                if (new RegExp(pat).test(prop)) {\n                    (0, util_1.checkStrictMode)(it, `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`);\n                }\n            }\n        }\n        function validateProperties(pat) {\n            gen.forIn(\"key\", data, (key) => {\n                gen.if((0, codegen_1._) `${(0, code_1.usePattern)(cxt, pat)}.test(${key})`, () => {\n                    const alwaysValid = alwaysValidPatterns.includes(pat);\n                    if (!alwaysValid) {\n                        cxt.subschema({\n                            keyword: \"patternProperties\",\n                            schemaProp: pat,\n                            dataProp: key,\n                            dataPropType: util_2.Type.Str,\n                        }, valid);\n                    }\n                    if (it.opts.unevaluated && props !== true) {\n                        gen.assign((0, codegen_1._) `${props}[${key}]`, true);\n                    }\n                    else if (!alwaysValid && !it.allErrors) {\n                        // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n                        // or if all properties were evaluated (props === true)\n                        gen.if((0, codegen_1.not)(valid), () => gen.break());\n                    }\n                });\n            });\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=patternProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst items_1 = require(\"./items\");\nconst def = {\n    keyword: \"prefixItems\",\n    type: \"array\",\n    schemaType: [\"array\"],\n    before: \"uniqueItems\",\n    code: (cxt) => (0, items_1.validateTuple)(cxt, \"items\"),\n};\nexports.default = def;\n//# sourceMappingURL=prefixItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validate_1 = require(\"../../compile/validate\");\nconst code_1 = require(\"../code\");\nconst util_1 = require(\"../../compile/util\");\nconst additionalProperties_1 = require(\"./additionalProperties\");\nconst def = {\n    keyword: \"properties\",\n    type: \"object\",\n    schemaType: \"object\",\n    code(cxt) {\n        const { gen, schema, parentSchema, data, it } = cxt;\n        if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n            additionalProperties_1.default.code(new validate_1.KeywordCxt(it, additionalProperties_1.default, \"additionalProperties\"));\n        }\n        const allProps = (0, code_1.allSchemaProperties)(schema);\n        for (const prop of allProps) {\n            it.definedProperties.add(prop);\n        }\n        if (it.opts.unevaluated && allProps.length && it.props !== true) {\n            it.props = util_1.mergeEvaluated.props(gen, (0, util_1.toHash)(allProps), it.props);\n        }\n        const properties = allProps.filter((p) => !(0, util_1.alwaysValidSchema)(it, schema[p]));\n        if (properties.length === 0)\n            return;\n        const valid = gen.name(\"valid\");\n        for (const prop of properties) {\n            if (hasDefault(prop)) {\n                applyPropertySchema(prop);\n            }\n            else {\n                gen.if((0, code_1.propertyInData)(gen, data, prop, it.opts.ownProperties));\n                applyPropertySchema(prop);\n                if (!it.allErrors)\n                    gen.else().var(valid, true);\n                gen.endIf();\n            }\n            cxt.it.definedProperties.add(prop);\n            cxt.ok(valid);\n        }\n        function hasDefault(prop) {\n            return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined;\n        }\n        function applyPropertySchema(prop) {\n            cxt.subschema({\n                keyword: \"properties\",\n                schemaProp: prop,\n                dataProp: prop,\n            }, valid);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=properties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: \"property name must be valid\",\n    params: ({ params }) => (0, codegen_1._) `{propertyName: ${params.propertyName}}`,\n};\nconst def = {\n    keyword: \"propertyNames\",\n    type: \"object\",\n    schemaType: [\"object\", \"boolean\"],\n    error,\n    code(cxt) {\n        const { gen, schema, data, it } = cxt;\n        if ((0, util_1.alwaysValidSchema)(it, schema))\n            return;\n        const valid = gen.name(\"valid\");\n        gen.forIn(\"key\", data, (key) => {\n            cxt.setParams({ propertyName: key });\n            cxt.subschema({\n                keyword: \"propertyNames\",\n                data: key,\n                dataTypes: [\"string\"],\n                propertyName: key,\n                compositeRule: true,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), () => {\n                cxt.error(true);\n                if (!it.allErrors)\n                    gen.break();\n            });\n        });\n        cxt.ok(valid);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=propertyNames.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: [\"then\", \"else\"],\n    schemaType: [\"object\", \"boolean\"],\n    code({ keyword, parentSchema, it }) {\n        if (parentSchema.if === undefined)\n            (0, util_1.checkStrictMode)(it, `\"${keyword}\" without \"if\" is ignored`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=thenElse.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateUnion = exports.validateArray = exports.usePattern = exports.callValidateCode = exports.schemaProperties = exports.allSchemaProperties = exports.noPropertyInData = exports.propertyInData = exports.isOwnProperty = exports.hasPropFunc = exports.reportMissingProp = exports.checkMissingProp = exports.checkReportMissingProp = void 0;\nconst codegen_1 = require(\"../compile/codegen\");\nconst util_1 = require(\"../compile/util\");\nconst names_1 = require(\"../compile/names\");\nconst util_2 = require(\"../compile/util\");\nfunction checkReportMissingProp(cxt, prop) {\n    const { gen, data, it } = cxt;\n    gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n        cxt.setParams({ missingProperty: (0, codegen_1._) `${prop}` }, true);\n        cxt.error();\n    });\n}\nexports.checkReportMissingProp = checkReportMissingProp;\nfunction checkMissingProp({ gen, data, it: { opts } }, properties, missing) {\n    return (0, codegen_1.or)(...properties.map((prop) => (0, codegen_1.and)(noPropertyInData(gen, data, prop, opts.ownProperties), (0, codegen_1._) `${missing} = ${prop}`)));\n}\nexports.checkMissingProp = checkMissingProp;\nfunction reportMissingProp(cxt, missing) {\n    cxt.setParams({ missingProperty: missing }, true);\n    cxt.error();\n}\nexports.reportMissingProp = reportMissingProp;\nfunction hasPropFunc(gen) {\n    return gen.scopeValue(\"func\", {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        ref: Object.prototype.hasOwnProperty,\n        code: (0, codegen_1._) `Object.prototype.hasOwnProperty`,\n    });\n}\nexports.hasPropFunc = hasPropFunc;\nfunction isOwnProperty(gen, data, property) {\n    return (0, codegen_1._) `${hasPropFunc(gen)}.call(${data}, ${property})`;\n}\nexports.isOwnProperty = isOwnProperty;\nfunction propertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} !== undefined`;\n    return ownProperties ? (0, codegen_1._) `${cond} && ${isOwnProperty(gen, data, property)}` : cond;\n}\nexports.propertyInData = propertyInData;\nfunction noPropertyInData(gen, data, property, ownProperties) {\n    const cond = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(property)} === undefined`;\n    return ownProperties ? (0, codegen_1.or)(cond, (0, codegen_1.not)(isOwnProperty(gen, data, property))) : cond;\n}\nexports.noPropertyInData = noPropertyInData;\nfunction allSchemaProperties(schemaMap) {\n    return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : [];\n}\nexports.allSchemaProperties = allSchemaProperties;\nfunction schemaProperties(it, schemaMap) {\n    return allSchemaProperties(schemaMap).filter((p) => !(0, util_1.alwaysValidSchema)(it, schemaMap[p]));\n}\nexports.schemaProperties = schemaProperties;\nfunction callValidateCode({ schemaCode, data, it: { gen, topSchemaRef, schemaPath, errorPath }, it }, func, context, passSchema) {\n    const dataAndSchema = passSchema ? (0, codegen_1._) `${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data;\n    const valCxt = [\n        [names_1.default.instancePath, (0, codegen_1.strConcat)(names_1.default.instancePath, errorPath)],\n        [names_1.default.parentData, it.parentData],\n        [names_1.default.parentDataProperty, it.parentDataProperty],\n        [names_1.default.rootData, names_1.default.rootData],\n    ];\n    if (it.opts.dynamicRef)\n        valCxt.push([names_1.default.dynamicAnchors, names_1.default.dynamicAnchors]);\n    const args = (0, codegen_1._) `${dataAndSchema}, ${gen.object(...valCxt)}`;\n    return context !== codegen_1.nil ? (0, codegen_1._) `${func}.call(${context}, ${args})` : (0, codegen_1._) `${func}(${args})`;\n}\nexports.callValidateCode = callValidateCode;\nconst newRegExp = (0, codegen_1._) `new RegExp`;\nfunction usePattern({ gen, it: { opts } }, pattern) {\n    const u = opts.unicodeRegExp ? \"u\" : \"\";\n    const { regExp } = opts.code;\n    const rx = regExp(pattern, u);\n    return gen.scopeValue(\"pattern\", {\n        key: rx.toString(),\n        ref: rx,\n        code: (0, codegen_1._) `${regExp.code === \"new RegExp\" ? newRegExp : (0, util_2.useFunc)(gen, regExp)}(${pattern}, ${u})`,\n    });\n}\nexports.usePattern = usePattern;\nfunction validateArray(cxt) {\n    const { gen, data, keyword, it } = cxt;\n    const valid = gen.name(\"valid\");\n    if (it.allErrors) {\n        const validArr = gen.let(\"valid\", true);\n        validateItems(() => gen.assign(validArr, false));\n        return validArr;\n    }\n    gen.var(valid, true);\n    validateItems(() => gen.break());\n    return valid;\n    function validateItems(notValid) {\n        const len = gen.const(\"len\", (0, codegen_1._) `${data}.length`);\n        gen.forRange(\"i\", 0, len, (i) => {\n            cxt.subschema({\n                keyword,\n                dataProp: i,\n                dataPropType: util_1.Type.Num,\n            }, valid);\n            gen.if((0, codegen_1.not)(valid), notValid);\n        });\n    }\n}\nexports.validateArray = validateArray;\nfunction validateUnion(cxt) {\n    const { gen, schema, keyword, it } = cxt;\n    /* istanbul ignore if */\n    if (!Array.isArray(schema))\n        throw new Error(\"ajv implementation error\");\n    const alwaysValid = schema.some((sch) => (0, util_1.alwaysValidSchema)(it, sch));\n    if (alwaysValid && !it.opts.unevaluated)\n        return;\n    const valid = gen.let(\"valid\", false);\n    const schValid = gen.name(\"_valid\");\n    gen.block(() => schema.forEach((_sch, i) => {\n        const schCxt = cxt.subschema({\n            keyword,\n            schemaProp: i,\n            compositeRule: true,\n        }, schValid);\n        gen.assign(valid, (0, codegen_1._) `${valid} || ${schValid}`);\n        const merged = cxt.mergeValidEvaluated(schCxt, schValid);\n        // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n        // or if all properties and items were evaluated (it.props === true && it.items === true)\n        if (!merged)\n            gen.if((0, codegen_1.not)(valid));\n    }));\n    cxt.result(valid, () => cxt.reset(), () => cxt.error(true));\n}\nexports.validateUnion = validateUnion;\n//# sourceMappingURL=code.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst def = {\n    keyword: \"id\",\n    code() {\n        throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID');\n    },\n};\nexports.default = def;\n//# sourceMappingURL=id.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst id_1 = require(\"./id\");\nconst ref_1 = require(\"./ref\");\nconst core = [\n    \"$schema\",\n    \"$id\",\n    \"$defs\",\n    \"$vocabulary\",\n    { keyword: \"$comment\" },\n    \"definitions\",\n    id_1.default,\n    ref_1.default,\n];\nexports.default = core;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callRef = exports.getValidate = void 0;\nconst ref_error_1 = require(\"../../compile/ref_error\");\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst names_1 = require(\"../../compile/names\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst def = {\n    keyword: \"$ref\",\n    schemaType: \"string\",\n    code(cxt) {\n        const { gen, schema: $ref, it } = cxt;\n        const { baseId, schemaEnv: env, validateName, opts, self } = it;\n        const { root } = env;\n        if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId)\n            return callRootRef();\n        const schOrEnv = compile_1.resolveRef.call(self, root, baseId, $ref);\n        if (schOrEnv === undefined)\n            throw new ref_error_1.default(it.opts.uriResolver, baseId, $ref);\n        if (schOrEnv instanceof compile_1.SchemaEnv)\n            return callValidate(schOrEnv);\n        return inlineRefSchema(schOrEnv);\n        function callRootRef() {\n            if (env === root)\n                return callRef(cxt, validateName, env, env.$async);\n            const rootName = gen.scopeValue(\"root\", { ref: root });\n            return callRef(cxt, (0, codegen_1._) `${rootName}.validate`, root, root.$async);\n        }\n        function callValidate(sch) {\n            const v = getValidate(cxt, sch);\n            callRef(cxt, v, sch, sch.$async);\n        }\n        function inlineRefSchema(sch) {\n            const schName = gen.scopeValue(\"schema\", opts.code.source === true ? { ref: sch, code: (0, codegen_1.stringify)(sch) } : { ref: sch });\n            const valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({\n                schema: sch,\n                dataTypes: [],\n                schemaPath: codegen_1.nil,\n                topSchemaRef: schName,\n                errSchemaPath: $ref,\n            }, valid);\n            cxt.mergeEvaluated(schCxt);\n            cxt.ok(valid);\n        }\n    },\n};\nfunction getValidate(cxt, sch) {\n    const { gen } = cxt;\n    return sch.validate\n        ? gen.scopeValue(\"validate\", { ref: sch.validate })\n        : (0, codegen_1._) `${gen.scopeValue(\"wrapper\", { ref: sch })}.validate`;\n}\nexports.getValidate = getValidate;\nfunction callRef(cxt, v, sch, $async) {\n    const { gen, it } = cxt;\n    const { allErrors, schemaEnv: env, opts } = it;\n    const passCxt = opts.passContext ? names_1.default.this : codegen_1.nil;\n    if ($async)\n        callAsyncRef();\n    else\n        callSyncRef();\n    function callAsyncRef() {\n        if (!env.$async)\n            throw new Error(\"async schema referenced by sync schema\");\n        const valid = gen.let(\"valid\");\n        gen.try(() => {\n            gen.code((0, codegen_1._) `await ${(0, code_1.callValidateCode)(cxt, v, passCxt)}`);\n            addEvaluatedFrom(v); // TODO will not work with async, it has to be returned with the result\n            if (!allErrors)\n                gen.assign(valid, true);\n        }, (e) => {\n            gen.if((0, codegen_1._) `!(${e} instanceof ${it.ValidationError})`, () => gen.throw(e));\n            addErrorsFrom(e);\n            if (!allErrors)\n                gen.assign(valid, false);\n        });\n        cxt.ok(valid);\n    }\n    function callSyncRef() {\n        cxt.result((0, code_1.callValidateCode)(cxt, v, passCxt), () => addEvaluatedFrom(v), () => addErrorsFrom(v));\n    }\n    function addErrorsFrom(source) {\n        const errs = (0, codegen_1._) `${source}.errors`;\n        gen.assign(names_1.default.vErrors, (0, codegen_1._) `${names_1.default.vErrors} === null ? ${errs} : ${names_1.default.vErrors}.concat(${errs})`); // TODO tagged\n        gen.assign(names_1.default.errors, (0, codegen_1._) `${names_1.default.vErrors}.length`);\n    }\n    function addEvaluatedFrom(source) {\n        var _a;\n        if (!it.opts.unevaluated)\n            return;\n        const schEvaluated = (_a = sch === null || sch === void 0 ? void 0 : sch.validate) === null || _a === void 0 ? void 0 : _a.evaluated;\n        // TODO refactor\n        if (it.props !== true) {\n            if (schEvaluated && !schEvaluated.dynamicProps) {\n                if (schEvaluated.props !== undefined) {\n                    it.props = util_1.mergeEvaluated.props(gen, schEvaluated.props, it.props);\n                }\n            }\n            else {\n                const props = gen.var(\"props\", (0, codegen_1._) `${source}.evaluated.props`);\n                it.props = util_1.mergeEvaluated.props(gen, props, it.props, codegen_1.Name);\n            }\n        }\n        if (it.items !== true) {\n            if (schEvaluated && !schEvaluated.dynamicItems) {\n                if (schEvaluated.items !== undefined) {\n                    it.items = util_1.mergeEvaluated.items(gen, schEvaluated.items, it.items);\n                }\n            }\n            else {\n                const items = gen.var(\"items\", (0, codegen_1._) `${source}.evaluated.items`);\n                it.items = util_1.mergeEvaluated.items(gen, items, it.items, codegen_1.Name);\n            }\n        }\n    }\n}\nexports.callRef = callRef;\nexports.default = def;\n//# sourceMappingURL=ref.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst types_1 = require(\"../discriminator/types\");\nconst compile_1 = require(\"../../compile\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { discrError, tagName } }) => discrError === types_1.DiscrError.Tag\n        ? `tag \"${tagName}\" must be string`\n        : `value of tag \"${tagName}\" must be in oneOf`,\n    params: ({ params: { discrError, tag, tagName } }) => (0, codegen_1._) `{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n};\nconst def = {\n    keyword: \"discriminator\",\n    type: \"object\",\n    schemaType: \"object\",\n    error,\n    code(cxt) {\n        const { gen, data, schema, parentSchema, it } = cxt;\n        const { oneOf } = parentSchema;\n        if (!it.opts.discriminator) {\n            throw new Error(\"discriminator: requires discriminator option\");\n        }\n        const tagName = schema.propertyName;\n        if (typeof tagName != \"string\")\n            throw new Error(\"discriminator: requires propertyName\");\n        if (schema.mapping)\n            throw new Error(\"discriminator: mapping is not supported\");\n        if (!oneOf)\n            throw new Error(\"discriminator: requires oneOf keyword\");\n        const valid = gen.let(\"valid\", false);\n        const tag = gen.const(\"tag\", (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(tagName)}`);\n        gen.if((0, codegen_1._) `typeof ${tag} == \"string\"`, () => validateMapping(), () => cxt.error(false, { discrError: types_1.DiscrError.Tag, tag, tagName }));\n        cxt.ok(valid);\n        function validateMapping() {\n            const mapping = getMapping();\n            gen.if(false);\n            for (const tagValue in mapping) {\n                gen.elseIf((0, codegen_1._) `${tag} === ${tagValue}`);\n                gen.assign(valid, applyTagSchema(mapping[tagValue]));\n            }\n            gen.else();\n            cxt.error(false, { discrError: types_1.DiscrError.Mapping, tag, tagName });\n            gen.endIf();\n        }\n        function applyTagSchema(schemaProp) {\n            const _valid = gen.name(\"valid\");\n            const schCxt = cxt.subschema({ keyword: \"oneOf\", schemaProp }, _valid);\n            cxt.mergeEvaluated(schCxt, codegen_1.Name);\n            return _valid;\n        }\n        function getMapping() {\n            var _a;\n            const oneOfMapping = {};\n            const topRequired = hasRequired(parentSchema);\n            let tagRequired = true;\n            for (let i = 0; i < oneOf.length; i++) {\n                let sch = oneOf[i];\n                if ((sch === null || sch === void 0 ? void 0 : sch.$ref) && !(0, util_1.schemaHasRulesButRef)(sch, it.self.RULES)) {\n                    sch = compile_1.resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch === null || sch === void 0 ? void 0 : sch.$ref);\n                    if (sch instanceof compile_1.SchemaEnv)\n                        sch = sch.schema;\n                }\n                const propSch = (_a = sch === null || sch === void 0 ? void 0 : sch.properties) === null || _a === void 0 ? void 0 : _a[tagName];\n                if (typeof propSch != \"object\") {\n                    throw new Error(`discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`);\n                }\n                tagRequired = tagRequired && (topRequired || hasRequired(sch));\n                addMappings(propSch, i);\n            }\n            if (!tagRequired)\n                throw new Error(`discriminator: \"${tagName}\" must be required`);\n            return oneOfMapping;\n            function hasRequired({ required }) {\n                return Array.isArray(required) && required.includes(tagName);\n            }\n            function addMappings(sch, i) {\n                if (sch.const) {\n                    addMapping(sch.const, i);\n                }\n                else if (sch.enum) {\n                    for (const tagValue of sch.enum) {\n                        addMapping(tagValue, i);\n                    }\n                }\n                else {\n                    throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`);\n                }\n            }\n            function addMapping(tagValue, i) {\n                if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n                    throw new Error(`discriminator: \"${tagName}\" values must be unique strings`);\n                }\n                oneOfMapping[tagValue] = i;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiscrError = void 0;\nvar DiscrError;\n(function (DiscrError) {\n    DiscrError[\"Tag\"] = \"tag\";\n    DiscrError[\"Mapping\"] = \"mapping\";\n})(DiscrError = exports.DiscrError || (exports.DiscrError = {}));\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = require(\"./core\");\nconst validation_1 = require(\"./validation\");\nconst applicator_1 = require(\"./applicator\");\nconst format_1 = require(\"./format\");\nconst metadata_1 = require(\"./metadata\");\nconst draft7Vocabularies = [\n    core_1.default,\n    validation_1.default,\n    (0, applicator_1.default)(),\n    format_1.default,\n    metadata_1.metadataVocabulary,\n    metadata_1.contentVocabulary,\n];\nexports.default = draft7Vocabularies;\n//# sourceMappingURL=draft7.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match format \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{format: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"format\",\n    type: [\"number\", \"string\"],\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt, ruleType) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        const { opts, errSchemaPath, schemaEnv, self } = it;\n        if (!opts.validateFormats)\n            return;\n        if ($data)\n            validate$DataFormat();\n        else\n            validateFormat();\n        function validate$DataFormat() {\n            const fmts = gen.scopeValue(\"formats\", {\n                ref: self.formats,\n                code: opts.code.formats,\n            });\n            const fDef = gen.const(\"fDef\", (0, codegen_1._) `${fmts}[${schemaCode}]`);\n            const fType = gen.let(\"fType\");\n            const format = gen.let(\"format\");\n            // TODO simplify\n            gen.if((0, codegen_1._) `typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`, () => gen.assign(fType, (0, codegen_1._) `${fDef}.type || \"string\"`).assign(format, (0, codegen_1._) `${fDef}.validate`), () => gen.assign(fType, (0, codegen_1._) `\"string\"`).assign(format, fDef));\n            cxt.fail$data((0, codegen_1.or)(unknownFmt(), invalidFmt()));\n            function unknownFmt() {\n                if (opts.strictSchema === false)\n                    return codegen_1.nil;\n                return (0, codegen_1._) `${schemaCode} && !${format}`;\n            }\n            function invalidFmt() {\n                const callFormat = schemaEnv.$async\n                    ? (0, codegen_1._) `(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n                    : (0, codegen_1._) `${format}(${data})`;\n                const validData = (0, codegen_1._) `(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`;\n                return (0, codegen_1._) `${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`;\n            }\n        }\n        function validateFormat() {\n            const formatDef = self.formats[schema];\n            if (!formatDef) {\n                unknownFormat();\n                return;\n            }\n            if (formatDef === true)\n                return;\n            const [fmtType, format, fmtRef] = getFormat(formatDef);\n            if (fmtType === ruleType)\n                cxt.pass(validCondition());\n            function unknownFormat() {\n                if (opts.strictSchema === false) {\n                    self.logger.warn(unknownMsg());\n                    return;\n                }\n                throw new Error(unknownMsg());\n                function unknownMsg() {\n                    return `unknown format \"${schema}\" ignored in schema at path \"${errSchemaPath}\"`;\n                }\n            }\n            function getFormat(fmtDef) {\n                const code = fmtDef instanceof RegExp\n                    ? (0, codegen_1.regexpCode)(fmtDef)\n                    : opts.code.formats\n                        ? (0, codegen_1._) `${opts.code.formats}${(0, codegen_1.getProperty)(schema)}`\n                        : undefined;\n                const fmt = gen.scopeValue(\"formats\", { key: schema, ref: fmtDef, code });\n                if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n                    return [fmtDef.type || \"string\", fmtDef.validate, (0, codegen_1._) `${fmt}.validate`];\n                }\n                return [\"string\", fmtDef, fmt];\n            }\n            function validCondition() {\n                if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n                    if (!schemaEnv.$async)\n                        throw new Error(\"async format in sync schema\");\n                    return (0, codegen_1._) `await ${fmtRef}(${data})`;\n                }\n                return typeof format == \"function\" ? (0, codegen_1._) `${fmtRef}(${data})` : (0, codegen_1._) `${fmtRef}.test(${data})`;\n            }\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=format.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst format_1 = require(\"./format\");\nconst format = [format_1.default];\nexports.default = format;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contentVocabulary = exports.metadataVocabulary = void 0;\nexports.metadataVocabulary = [\n    \"title\",\n    \"description\",\n    \"default\",\n    \"deprecated\",\n    \"readOnly\",\n    \"writeOnly\",\n    \"examples\",\n];\nexports.contentVocabulary = [\n    \"contentMediaType\",\n    \"contentEncoding\",\n    \"contentSchema\",\n];\n//# sourceMappingURL=metadata.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to constant\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValue: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"const\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schemaCode, schema } = cxt;\n        if ($data || (schema && typeof schema == \"object\")) {\n            cxt.fail$data((0, codegen_1._) `!${(0, util_1.useFunc)(gen, equal_1.default)}(${data}, ${schemaCode})`);\n        }\n        else {\n            cxt.fail((0, codegen_1._) `${schema} !== ${data}`);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=const.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: \"must be equal to one of the allowed values\",\n    params: ({ schemaCode }) => (0, codegen_1._) `{allowedValues: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"enum\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, schemaCode, it } = cxt;\n        if (!$data && schema.length === 0)\n            throw new Error(\"enum must have non-empty array\");\n        const useLoop = schema.length >= it.opts.loopEnum;\n        let eql;\n        const getEql = () => (eql !== null && eql !== void 0 ? eql : (eql = (0, util_1.useFunc)(gen, equal_1.default)));\n        let valid;\n        if (useLoop || $data) {\n            valid = gen.let(\"valid\");\n            cxt.block$data(valid, loopEnum);\n        }\n        else {\n            /* istanbul ignore if */\n            if (!Array.isArray(schema))\n                throw new Error(\"ajv implementation error\");\n            const vSchema = gen.const(\"vSchema\", schemaCode);\n            valid = (0, codegen_1.or)(...schema.map((_x, i) => equalCode(vSchema, i)));\n        }\n        cxt.pass(valid);\n        function loopEnum() {\n            gen.assign(valid, false);\n            gen.forOf(\"v\", schemaCode, (v) => gen.if((0, codegen_1._) `${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break()));\n        }\n        function equalCode(vSchema, i) {\n            const sch = schema[i];\n            return typeof sch === \"object\" && sch !== null\n                ? (0, codegen_1._) `${getEql()}(${data}, ${vSchema}[${i}])`\n                : (0, codegen_1._) `${data} === ${sch}`;\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=enum.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst limitNumber_1 = require(\"./limitNumber\");\nconst multipleOf_1 = require(\"./multipleOf\");\nconst limitLength_1 = require(\"./limitLength\");\nconst pattern_1 = require(\"./pattern\");\nconst limitProperties_1 = require(\"./limitProperties\");\nconst required_1 = require(\"./required\");\nconst limitItems_1 = require(\"./limitItems\");\nconst uniqueItems_1 = require(\"./uniqueItems\");\nconst const_1 = require(\"./const\");\nconst enum_1 = require(\"./enum\");\nconst validation = [\n    // number\n    limitNumber_1.default,\n    multipleOf_1.default,\n    // string\n    limitLength_1.default,\n    pattern_1.default,\n    // object\n    limitProperties_1.default,\n    required_1.default,\n    // array\n    limitItems_1.default,\n    uniqueItems_1.default,\n    // any\n    { keyword: \"type\", schemaType: [\"string\", \"array\"] },\n    { keyword: \"nullable\", schemaType: \"boolean\" },\n    const_1.default,\n    enum_1.default,\n];\nexports.default = validation;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} items`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxItems\", \"minItems\"],\n    type: \"array\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxItems\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `${data}.length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitItems.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst ucs2length_1 = require(\"../../runtime/ucs2length\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} characters`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxLength\", \"minLength\"],\n    type: \"string\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode, it } = cxt;\n        const op = keyword === \"maxLength\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        const len = it.opts.unicode === false ? (0, codegen_1._) `${data}.length` : (0, codegen_1._) `${(0, util_1.useFunc)(cxt.gen, ucs2length_1.default)}(${data})`;\n        cxt.fail$data((0, codegen_1._) `${len} ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitLength.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst ops = codegen_1.operators;\nconst KWDs = {\n    maximum: { okStr: \"<=\", ok: ops.LTE, fail: ops.GT },\n    minimum: { okStr: \">=\", ok: ops.GTE, fail: ops.LT },\n    exclusiveMaximum: { okStr: \"<\", ok: ops.LT, fail: ops.GTE },\n    exclusiveMinimum: { okStr: \">\", ok: ops.GT, fail: ops.LTE },\n};\nconst error = {\n    message: ({ keyword, schemaCode }) => (0, codegen_1.str) `must be ${KWDs[keyword].okStr} ${schemaCode}`,\n    params: ({ keyword, schemaCode }) => (0, codegen_1._) `{comparison: ${KWDs[keyword].okStr}, limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: Object.keys(KWDs),\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        cxt.fail$data((0, codegen_1._) `${data} ${KWDs[keyword].fail} ${schemaCode} || isNaN(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitNumber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message({ keyword, schemaCode }) {\n        const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\";\n        return (0, codegen_1.str) `must NOT have ${comp} than ${schemaCode} properties`;\n    },\n    params: ({ schemaCode }) => (0, codegen_1._) `{limit: ${schemaCode}}`,\n};\nconst def = {\n    keyword: [\"maxProperties\", \"minProperties\"],\n    type: \"object\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { keyword, data, schemaCode } = cxt;\n        const op = keyword === \"maxProperties\" ? codegen_1.operators.GT : codegen_1.operators.LT;\n        cxt.fail$data((0, codegen_1._) `Object.keys(${data}).length ${op} ${schemaCode}`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=limitProperties.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must be multiple of ${schemaCode}`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{multipleOf: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"multipleOf\",\n    type: \"number\",\n    schemaType: \"number\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, schemaCode, it } = cxt;\n        // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n        const prec = it.opts.multipleOfPrecision;\n        const res = gen.let(\"res\");\n        const invalid = prec\n            ? (0, codegen_1._) `Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n            : (0, codegen_1._) `${res} !== parseInt(${res})`;\n        cxt.fail$data((0, codegen_1._) `(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=multipleOf.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match pattern \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{pattern: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"pattern\",\n    type: \"string\",\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { data, $data, schema, schemaCode, it } = cxt;\n        // TODO regexp should be wrapped in try/catchs\n        const u = it.opts.unicodeRegExp ? \"u\" : \"\";\n        const regExp = $data ? (0, codegen_1._) `(new RegExp(${schemaCode}, ${u}))` : (0, code_1.usePattern)(cxt, schema);\n        cxt.fail$data((0, codegen_1._) `!${regExp}.test(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=pattern.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst error = {\n    message: ({ params: { missingProperty } }) => (0, codegen_1.str) `must have required property '${missingProperty}'`,\n    params: ({ params: { missingProperty } }) => (0, codegen_1._) `{missingProperty: ${missingProperty}}`,\n};\nconst def = {\n    keyword: \"required\",\n    type: \"object\",\n    schemaType: \"array\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, schema, schemaCode, data, $data, it } = cxt;\n        const { opts } = it;\n        if (!$data && schema.length === 0)\n            return;\n        const useLoop = schema.length >= opts.loopRequired;\n        if (it.allErrors)\n            allErrorsMode();\n        else\n            exitOnErrorMode();\n        if (opts.strictRequired) {\n            const props = cxt.parentSchema.properties;\n            const { definedProperties } = cxt.it;\n            for (const requiredKey of schema) {\n                if ((props === null || props === void 0 ? void 0 : props[requiredKey]) === undefined && !definedProperties.has(requiredKey)) {\n                    const schemaPath = it.schemaEnv.baseId + it.errSchemaPath;\n                    const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`;\n                    (0, util_1.checkStrictMode)(it, msg, it.opts.strictRequired);\n                }\n            }\n        }\n        function allErrorsMode() {\n            if (useLoop || $data) {\n                cxt.block$data(codegen_1.nil, loopAllRequired);\n            }\n            else {\n                for (const prop of schema) {\n                    (0, code_1.checkReportMissingProp)(cxt, prop);\n                }\n            }\n        }\n        function exitOnErrorMode() {\n            const missing = gen.let(\"missing\");\n            if (useLoop || $data) {\n                const valid = gen.let(\"valid\", true);\n                cxt.block$data(valid, () => loopUntilMissing(missing, valid));\n                cxt.ok(valid);\n            }\n            else {\n                gen.if((0, code_1.checkMissingProp)(cxt, schema, missing));\n                (0, code_1.reportMissingProp)(cxt, missing);\n                gen.else();\n            }\n        }\n        function loopAllRequired() {\n            gen.forOf(\"prop\", schemaCode, (prop) => {\n                cxt.setParams({ missingProperty: prop });\n                gen.if((0, code_1.noPropertyInData)(gen, data, prop, opts.ownProperties), () => cxt.error());\n            });\n        }\n        function loopUntilMissing(missing, valid) {\n            cxt.setParams({ missingProperty: missing });\n            gen.forOf(missing, schemaCode, () => {\n                gen.assign(valid, (0, code_1.propertyInData)(gen, data, missing, opts.ownProperties));\n                gen.if((0, codegen_1.not)(valid), () => {\n                    cxt.error();\n                    gen.break();\n                });\n            }, codegen_1.nil);\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=required.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst dataType_1 = require(\"../../compile/validate/dataType\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst util_1 = require(\"../../compile/util\");\nconst equal_1 = require(\"../../runtime/equal\");\nconst error = {\n    message: ({ params: { i, j } }) => (0, codegen_1.str) `must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n    params: ({ params: { i, j } }) => (0, codegen_1._) `{i: ${i}, j: ${j}}`,\n};\nconst def = {\n    keyword: \"uniqueItems\",\n    type: \"array\",\n    schemaType: \"boolean\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { gen, data, $data, schema, parentSchema, schemaCode, it } = cxt;\n        if (!$data && !schema)\n            return;\n        const valid = gen.let(\"valid\");\n        const itemTypes = parentSchema.items ? (0, dataType_1.getSchemaTypes)(parentSchema.items) : [];\n        cxt.block$data(valid, validateUniqueItems, (0, codegen_1._) `${schemaCode} === false`);\n        cxt.ok(valid);\n        function validateUniqueItems() {\n            const i = gen.let(\"i\", (0, codegen_1._) `${data}.length`);\n            const j = gen.let(\"j\");\n            cxt.setParams({ i, j });\n            gen.assign(valid, true);\n            gen.if((0, codegen_1._) `${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j));\n        }\n        function canOptimize() {\n            return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\");\n        }\n        function loopN(i, j) {\n            const item = gen.name(\"item\");\n            const wrongType = (0, dataType_1.checkDataTypes)(itemTypes, item, it.opts.strictNumbers, dataType_1.DataType.Wrong);\n            const indices = gen.const(\"indices\", (0, codegen_1._) `{}`);\n            gen.for((0, codegen_1._) `;${i}--;`, () => {\n                gen.let(item, (0, codegen_1._) `${data}[${i}]`);\n                gen.if(wrongType, (0, codegen_1._) `continue`);\n                if (itemTypes.length > 1)\n                    gen.if((0, codegen_1._) `typeof ${item} == \"string\"`, (0, codegen_1._) `${item} += \"_\"`);\n                gen\n                    .if((0, codegen_1._) `typeof ${indices}[${item}] == \"number\"`, () => {\n                    gen.assign(j, (0, codegen_1._) `${indices}[${item}]`);\n                    cxt.error();\n                    gen.assign(valid, false).break();\n                })\n                    .code((0, codegen_1._) `${indices}[${item}] = ${i}`);\n            });\n        }\n        function loopN2(i, j) {\n            const eql = (0, util_1.useFunc)(gen, equal_1.default);\n            const outer = gen.name(\"outer\");\n            gen.label(outer).for((0, codegen_1._) `;${i}--;`, () => gen.for((0, codegen_1._) `${j} = ${i}; ${j}--;`, () => gen.if((0, codegen_1._) `${eql}(${data}[${i}], ${data}[${j}])`, () => {\n                cxt.error();\n                gen.assign(valid, false).break(outer);\n            })));\n        }\n    },\n};\nexports.default = def;\n//# sourceMappingURL=uniqueItems.js.map"],"sourceRoot":""}