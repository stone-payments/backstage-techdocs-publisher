{"version":3,"sources":["webpack://techdocs-cli-embedded-app/../core-components/src/components/LogViewer/AnsiProcessor.ts","webpack://techdocs-cli-embedded-app/../core-components/src/components/LogViewer/styles.ts","webpack://techdocs-cli-embedded-app/../core-components/src/components/LogViewer/LogLine.tsx","webpack://techdocs-cli-embedded-app/../core-components/src/components/LogViewer/LogViewerControls.tsx","webpack://techdocs-cli-embedded-app/../core-components/src/components/LogViewer/useLogViewerSearch.tsx","webpack://techdocs-cli-embedded-app/../core-components/src/components/LogViewer/useLogViewerSelection.tsx","webpack://techdocs-cli-embedded-app/../core-components/src/components/LogViewer/RealLogViewer.tsx"],"names":["ansiRegex","ansiRegexMaker","newlineRegex","codeModifiers","Object","fromEntries","entries","m","bold","italic","underline","_","foreground","background","map","code","modifier","AnsiLine","lastChunk","chunks","length","replaceLastChunk","newChunks","splice","text","c","join","toLocaleLowerCase","constructor","lineNumber","AnsiProcessor","process","lines","startsWith","newLines","lastLineIndex","lastLine","processLines","slice","modifiers","push","startingLineNumber","currentModifiers","currentLineNumber","prevIndex","lastIndex","match","exec","processText","line","index","fullText","processCode","HEADER_SIZE","useStyles","makeStyles","theme","root","palette","paper","header","height","display","alignItems","justifyContent","log","fontFamily","fontSize","typography","pxToRem","position","whiteSpace","action","hover","lineSelected","selected","lineCopyButton","paddingTop","paddingBottom","textAlign","width","marginRight","spacing","cursor","textHighlight","alpha","info","main","textSelectedHighlight","modifierBold","fontWeight","fontWeightBold","modifierItalic","fontStyle","modifierUnderline","textDecoration","modifierForegroundBlack","color","colors","modifierForegroundRed","modifierForegroundGreen","modifierForegroundYellow","modifierForegroundBlue","modifierForegroundMagenta","modifierForegroundCyan","modifierForegroundWhite","modifierForegroundGrey","modifierBackgroundBlack","modifierBackgroundRed","modifierBackgroundGreen","modifierBackgroundYellow","modifierBackgroundBlue","modifierBackgroundMagenta","modifierBackgroundCyan","modifierBackgroundWhite","modifierBackgroundGrey","name","getModifierClasses","classes","classNames","Array","key","startCase","undefined","findSearchResults","searchText","includes","searchResults","offset","start","indexOf","end","calculateHighlightedChunks","results","lineOffset","resultIndex","result","chunk","localOffset","localStart","Math","max","localEnd","min","highlight","LogLine","highlightResultIndex","useMemo","elements","span","className","classnames","LogViewerControls","props","resultCount","resultIndexStep","toggleShouldFilter","handleKeyPress","event","metaKey","ctrlKey","altKey","shiftKey","IconButton","size","onClick","ChevronLeftIcon","Typography","ChevronRightIcon","TextField","variant","placeholder","value","searchInput","onKeyPress","onChange","e","setSearchInput","target","shouldFilter","FilterListIcon","applySearchFilter","matchingLines","lineResultIndex","lineIndex","useLogViewerSearch","filter","useState","setResultIndex","useToggle","searchResult","decrement","next","resultLine","resultLineIndex","useLogViewerSelection","errorApi","useApi","errorApiRef","sel","setSelection","error","copyToClipboard","useCopyToClipboard","useEffect","post","shouldShowButton","isSelected","add","s","copySelection","copyText","l","RealLogViewer","listRef","useRef","search","selection","location","useLocation","current","scrollToItem","hash","parseInt","replace","handleSelectLine","AutoSizer","div","style","FixedSizeList","ref","itemData","itemSize","itemCount","data","data-testid","CopyIcon","a","role","href"],"mappings":"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","file":"static/6051.f45bae28.chunk.js","sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ansiRegexMaker from 'ansi-regex';\n\nconst ansiRegex = ansiRegexMaker();\nconst newlineRegex = /\\n\\r?/g;\n\n// A mapping of how each escape code changes the modifiers\nconst codeModifiers = Object.fromEntries(\n  Object.entries({\n    1: m => ({ ...m, bold: true }),\n    3: m => ({ ...m, italic: true }),\n    4: m => ({ ...m, underline: true }),\n    22: ({ bold: _, ...m }) => m,\n    23: ({ italic: _, ...m }) => m,\n    24: ({ underline: _, ...m }) => m,\n    30: m => ({ ...m, foreground: 'black' }),\n    31: m => ({ ...m, foreground: 'red' }),\n    32: m => ({ ...m, foreground: 'green' }),\n    33: m => ({ ...m, foreground: 'yellow' }),\n    34: m => ({ ...m, foreground: 'blue' }),\n    35: m => ({ ...m, foreground: 'magenta' }),\n    36: m => ({ ...m, foreground: 'cyan' }),\n    37: m => ({ ...m, foreground: 'white' }),\n    39: ({ foreground: _, ...m }) => m,\n    90: m => ({ ...m, foreground: 'grey' }),\n    40: m => ({ ...m, background: 'black' }),\n    41: m => ({ ...m, background: 'red' }),\n    42: m => ({ ...m, background: 'green' }),\n    43: m => ({ ...m, background: 'yellow' }),\n    44: m => ({ ...m, background: 'blue' }),\n    45: m => ({ ...m, background: 'magenta' }),\n    46: m => ({ ...m, background: 'cyan' }),\n    47: m => ({ ...m, background: 'white' }),\n    49: ({ background: _, ...m }) => m,\n  } as Record<string, (m: ChunkModifiers) => ChunkModifiers>).map(\n    ([code, modifier]) => [`\\x1b[${code}m`, modifier],\n  ),\n);\n\nexport type AnsiColor =\n  | 'black'\n  | 'red'\n  | 'green'\n  | 'yellow'\n  | 'blue'\n  | 'magenta'\n  | 'cyan'\n  | 'white'\n  | 'grey';\n\nexport interface ChunkModifiers {\n  foreground?: AnsiColor;\n  background?: AnsiColor;\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n}\n\nexport interface AnsiChunk {\n  text: string;\n  modifiers: ChunkModifiers;\n}\n\nexport class AnsiLine {\n  text: string;\n\n  constructor(\n    readonly lineNumber: number = 1,\n    readonly chunks: AnsiChunk[] = [],\n  ) {\n    this.text = chunks\n      .map(c => c.text)\n      .join('')\n      .toLocaleLowerCase('en-US');\n  }\n\n  lastChunk(): AnsiChunk | undefined {\n    return this.chunks[this.chunks.length - 1];\n  }\n\n  replaceLastChunk(newChunks?: AnsiChunk[]) {\n    if (newChunks) {\n      this.chunks.splice(this.chunks.length - 1, 1, ...newChunks);\n      this.text = this.chunks\n        .map(c => c.text)\n        .join('')\n        .toLocaleLowerCase('en-US');\n    }\n  }\n}\n\nexport class AnsiProcessor {\n  private text: string = '';\n  private lines: AnsiLine[] = [];\n\n  /**\n   * Processes a chunk of text while keeping internal state that optimizes\n   * subsequent processing that appends to the text.\n   */\n  process(text: string): AnsiLine[] {\n    if (this.text === text) {\n      return this.lines;\n    }\n\n    if (text.startsWith(this.text)) {\n      const lastLineIndex = this.lines.length > 0 ? this.lines.length - 1 : 0;\n      const lastLine = this.lines[lastLineIndex] ?? new AnsiLine();\n      const lastChunk = lastLine.lastChunk();\n\n      const newLines = this.processLines(\n        (lastChunk?.text ?? '') + text.slice(this.text.length),\n        lastChunk?.modifiers,\n        lastLine?.lineNumber,\n      );\n      lastLine.replaceLastChunk(newLines[0]?.chunks);\n\n      this.lines[lastLineIndex] = lastLine;\n      this.lines.push(...newLines.slice(1));\n    } else {\n      this.lines = this.processLines(text);\n    }\n    this.text = text;\n\n    return this.lines;\n  }\n\n  // Split a chunk of text up into lines and process each line individually\n  private processLines = (\n    text: string,\n    modifiers: ChunkModifiers = {},\n    startingLineNumber: number = 1,\n  ): AnsiLine[] => {\n    const lines: AnsiLine[] = [];\n\n    let currentModifiers = modifiers;\n    let currentLineNumber = startingLineNumber;\n\n    let prevIndex = 0;\n    newlineRegex.lastIndex = 0;\n    for (;;) {\n      const match = newlineRegex.exec(text);\n      if (!match) {\n        const chunks = this.processText(\n          text.slice(prevIndex),\n          currentModifiers,\n        );\n        lines.push(new AnsiLine(currentLineNumber, chunks));\n        return lines;\n      }\n\n      const line = text.slice(prevIndex, match.index);\n      prevIndex = match.index + match[0].length;\n\n      const chunks = this.processText(line, currentModifiers);\n      lines.push(new AnsiLine(currentLineNumber, chunks));\n\n      // Modifiers that are active in the last chunk are carried over to the next line\n      currentModifiers =\n        chunks[chunks.length - 1].modifiers ?? currentModifiers;\n      currentLineNumber += 1;\n    }\n  };\n\n  // Processing of a one individual text chunk\n  private processText = (\n    fullText: string,\n    modifiers: ChunkModifiers,\n  ): AnsiChunk[] => {\n    const chunks: AnsiChunk[] = [];\n\n    let currentModifiers = modifiers;\n\n    let prevIndex = 0;\n    ansiRegex.lastIndex = 0;\n    for (;;) {\n      const match = ansiRegex.exec(fullText);\n      if (!match) {\n        chunks.push({\n          text: fullText.slice(prevIndex),\n          modifiers: currentModifiers,\n        });\n        return chunks;\n      }\n\n      const text = fullText.slice(prevIndex, match.index);\n      chunks.push({ text, modifiers: currentModifiers });\n\n      // For every escape code that we encounter we keep track of where the\n      // next chunk of text starts, and what modifiers it has\n      prevIndex = match.index + match[0].length;\n      currentModifiers = this.processCode(match[0], currentModifiers);\n    }\n  };\n\n  private processCode = (\n    code: string,\n    modifiers: ChunkModifiers,\n  ): ChunkModifiers => {\n    return codeModifiers[code]?.(modifiers) ?? modifiers;\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport * as colors from '@material-ui/core/colors';\n\nexport const HEADER_SIZE = 40;\n\n/** @public Class keys for overriding LogViewer styles */\nexport type LogViewerClassKey =\n  | 'root'\n  | 'header'\n  | 'log'\n  | 'line'\n  | 'lineSelected'\n  | 'lineCopyButton'\n  | 'lineNumber'\n  | 'textHighlight'\n  | 'textSelectedHighlight'\n  | 'modifierBold'\n  | 'modifierItalic'\n  | 'modifierUnderline'\n  | 'modifierForegroundBlack'\n  | 'modifierForegroundRed'\n  | 'modifierForegroundGreen'\n  | 'modifierForegroundYellow'\n  | 'modifierForegroundBlue'\n  | 'modifierForegroundMagenta'\n  | 'modifierForegroundCyan'\n  | 'modifierForegroundWhite'\n  | 'modifierForegroundGrey'\n  | 'modifierBackgroundBlack'\n  | 'modifierBackgroundRed'\n  | 'modifierBackgroundGreen'\n  | 'modifierBackgroundYellow'\n  | 'modifierBackgroundBlue'\n  | 'modifierBackgroundMagenta'\n  | 'modifierBackgroundCyan'\n  | 'modifierBackgroundWhite'\n  | 'modifierBackgroundGrey';\n\nexport const useStyles = makeStyles(\n  theme => ({\n    root: {\n      background: theme.palette.background.paper,\n    },\n    header: {\n      height: HEADER_SIZE,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n    },\n    log: {\n      fontFamily: '\"Monaco\", monospace',\n      fontSize: theme.typography.pxToRem(12),\n    },\n    line: {\n      position: 'relative',\n      whiteSpace: 'pre',\n\n      '&:hover': {\n        background: theme.palette.action.hover,\n      },\n    },\n    lineSelected: {\n      background: theme.palette.action.selected,\n\n      '&:hover': {\n        background: theme.palette.action.selected,\n      },\n    },\n    lineCopyButton: {\n      position: 'absolute',\n      paddingTop: 0,\n      paddingBottom: 0,\n    },\n    lineNumber: {\n      display: 'inline-block',\n      textAlign: 'end',\n      width: 60,\n      marginRight: theme.spacing(1),\n      cursor: 'pointer',\n    },\n    textHighlight: {\n      background: alpha(theme.palette.info.main, 0.15),\n    },\n    textSelectedHighlight: {\n      background: alpha(theme.palette.info.main, 0.4),\n    },\n    modifierBold: {\n      fontWeight: theme.typography.fontWeightBold,\n    },\n    modifierItalic: {\n      fontStyle: 'italic',\n    },\n    modifierUnderline: {\n      textDecoration: 'underline',\n    },\n    modifierForegroundBlack: {\n      color: colors.common.black,\n    },\n    modifierForegroundRed: {\n      color: colors.red[500],\n    },\n    modifierForegroundGreen: {\n      color: colors.green[500],\n    },\n    modifierForegroundYellow: {\n      color: colors.yellow[500],\n    },\n    modifierForegroundBlue: {\n      color: colors.blue[500],\n    },\n    modifierForegroundMagenta: {\n      color: colors.purple[500],\n    },\n    modifierForegroundCyan: {\n      color: colors.cyan[500],\n    },\n    modifierForegroundWhite: {\n      color: colors.common.white,\n    },\n    modifierForegroundGrey: {\n      color: colors.grey[500],\n    },\n    modifierBackgroundBlack: {\n      background: colors.common.black,\n    },\n    modifierBackgroundRed: {\n      background: colors.red[500],\n    },\n    modifierBackgroundGreen: {\n      background: colors.green[500],\n    },\n    modifierBackgroundYellow: {\n      background: colors.yellow[500],\n    },\n    modifierBackgroundBlue: {\n      background: colors.blue[500],\n    },\n    modifierBackgroundMagenta: {\n      background: colors.purple[500],\n    },\n    modifierBackgroundCyan: {\n      background: colors.cyan[500],\n    },\n    modifierBackgroundWhite: {\n      background: colors.common.white,\n    },\n    modifierBackgroundGrey: {\n      background: colors.grey[500],\n    },\n  }),\n  { name: 'BackstageLogViewer' },\n);\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useMemo } from 'react';\nimport { AnsiChunk, AnsiLine, ChunkModifiers } from './AnsiProcessor';\nimport startCase from 'lodash/startCase';\nimport classnames from 'classnames';\nimport { useStyles } from './styles';\n\nexport function getModifierClasses(\n  classes: ReturnType<typeof useStyles>,\n  modifiers: ChunkModifiers,\n) {\n  const classNames = new Array<string>();\n  if (modifiers.bold) {\n    classNames.push(classes.modifierBold);\n  }\n  if (modifiers.italic) {\n    classNames.push(classes.modifierItalic);\n  }\n  if (modifiers.underline) {\n    classNames.push(classes.modifierUnderline);\n  }\n  if (modifiers.foreground) {\n    const key = `modifierForeground${startCase(\n      modifiers.foreground,\n    )}` as keyof typeof classes;\n    classNames.push(classes[key]);\n  }\n  if (modifiers.background) {\n    const key = `modifierBackground${startCase(\n      modifiers.background,\n    )}` as keyof typeof classes;\n    classNames.push(classes[key]);\n  }\n  return classNames.length > 0 ? classNames.join(' ') : undefined;\n}\n\nexport function findSearchResults(text: string, searchText: string) {\n  if (!searchText || !text.includes(searchText)) {\n    return undefined;\n  }\n  const searchResults = new Array<{ start: number; end: number }>();\n  let offset = 0;\n  for (;;) {\n    const start = text.indexOf(searchText, offset);\n    if (start === -1) {\n      break;\n    }\n    const end = start + searchText.length;\n    searchResults.push({ start, end });\n    offset = end;\n  }\n  return searchResults;\n}\n\nexport interface HighlightAnsiChunk extends AnsiChunk {\n  highlight?: number;\n}\n\nexport function calculateHighlightedChunks(\n  line: AnsiLine,\n  searchText: string,\n): HighlightAnsiChunk[] {\n  const results = findSearchResults(line.text, searchText);\n  if (!results) {\n    return line.chunks;\n  }\n\n  const chunks = new Array<HighlightAnsiChunk>();\n\n  let lineOffset = 0;\n  let resultIndex = 0;\n  let result = results[resultIndex];\n  for (const chunk of line.chunks) {\n    const { text, modifiers } = chunk;\n    if (!result || lineOffset + text.length < result.start) {\n      chunks.push(chunk);\n      lineOffset += text.length;\n      continue;\n    }\n\n    let localOffset = 0;\n    while (result) {\n      const localStart = Math.max(result.start - lineOffset, 0);\n      if (localStart > text.length) {\n        break; // The next result is not in this chunk\n      }\n\n      const localEnd = Math.min(result.end - lineOffset, text.length);\n\n      const hasTextBeforeResult = localStart > localOffset;\n      if (hasTextBeforeResult) {\n        chunks.push({ text: text.slice(localOffset, localStart), modifiers });\n      }\n      const hasResultText = localEnd > localStart;\n      if (hasResultText) {\n        chunks.push({\n          modifiers,\n          highlight: resultIndex,\n          text: text.slice(localStart, localEnd),\n        });\n      }\n\n      localOffset = localEnd;\n\n      const foundCompleteResult = result.end - lineOffset === localEnd;\n      if (foundCompleteResult) {\n        resultIndex += 1;\n        result = results[resultIndex];\n      } else {\n        break; // The rest of the result is in the following chunks\n      }\n    }\n\n    const hasTextAfterResult = localOffset < text.length;\n    if (hasTextAfterResult) {\n      chunks.push({ text: text.slice(localOffset), modifiers });\n    }\n\n    lineOffset += text.length;\n  }\n\n  return chunks;\n}\n\nexport interface LogLineProps {\n  line: AnsiLine;\n  classes: ReturnType<typeof useStyles>;\n  searchText: string;\n  highlightResultIndex?: number;\n}\n\nexport function LogLine({\n  line,\n  classes,\n  searchText,\n  highlightResultIndex,\n}: LogLineProps) {\n  const chunks = useMemo(\n    () => calculateHighlightedChunks(line, searchText),\n    [line, searchText],\n  );\n\n  const elements = useMemo(\n    () =>\n      chunks.map(({ text, modifiers, highlight }, index) => (\n        <span\n          key={index}\n          className={classnames(\n            getModifierClasses(classes, modifiers),\n            highlight !== undefined &&\n              (highlight === highlightResultIndex\n                ? classes.textSelectedHighlight\n                : classes.textHighlight),\n          )}\n        >\n          {text}\n        </span>\n      )),\n    [chunks, highlightResultIndex, classes],\n  );\n\n  return <>{elements}</>;\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { LogViewerSearch } from './useLogViewerSearch';\n\nexport interface LogViewerControlsProps extends LogViewerSearch {}\n\nexport function LogViewerControls(props: LogViewerControlsProps) {\n  const { resultCount, resultIndexStep, toggleShouldFilter } = props;\n  const resultIndex = props.resultIndex ?? 0;\n\n  const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (event.metaKey || event.ctrlKey || event.altKey) {\n        toggleShouldFilter();\n      } else {\n        resultIndexStep(event.shiftKey);\n      }\n    }\n  };\n\n  return (\n    <>\n      {resultCount !== undefined && (\n        <>\n          <IconButton size=\"small\" onClick={() => resultIndexStep(true)}>\n            <ChevronLeftIcon />\n          </IconButton>\n          <Typography>\n            {Math.min(resultIndex + 1, resultCount)}/{resultCount}\n          </Typography>\n          <IconButton size=\"small\" onClick={() => resultIndexStep()}>\n            <ChevronRightIcon />\n          </IconButton>\n        </>\n      )}\n      <TextField\n        size=\"small\"\n        variant=\"standard\"\n        placeholder=\"Search\"\n        value={props.searchInput}\n        onKeyPress={handleKeyPress}\n        onChange={e => props.setSearchInput(e.target.value)}\n      />\n      <IconButton size=\"small\" onClick={toggleShouldFilter}>\n        {props.shouldFilter ? (\n          <FilterListIcon color=\"primary\" />\n        ) : (\n          <FilterListIcon color=\"disabled\" />\n        )}\n      </IconButton>\n    </>\n  );\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useMemo, useState } from 'react';\nimport { useToggle } from '@react-hookz/web';\nimport { AnsiLine } from './AnsiProcessor';\n\nexport function applySearchFilter(lines: AnsiLine[], searchText: string) {\n  if (!searchText) {\n    return { lines };\n  }\n\n  const matchingLines = [];\n  const searchResults = [];\n  for (const line of lines) {\n    if (line.text.includes(searchText)) {\n      matchingLines.push(line);\n\n      let offset = 0;\n      let lineResultIndex = 0;\n      for (;;) {\n        const start = line.text.indexOf(searchText, offset);\n        if (start === -1) {\n          break;\n        }\n        searchResults.push({\n          lineNumber: line.lineNumber,\n          lineIndex: lineResultIndex++,\n        });\n        offset = start + searchText.length;\n      }\n    }\n  }\n\n  return {\n    lines: matchingLines,\n    results: searchResults,\n  };\n}\n\nexport interface LogViewerSearch {\n  lines: AnsiLine[];\n\n  searchText: string;\n  searchInput: string;\n  setSearchInput: (searchInput: string) => void;\n\n  shouldFilter: boolean;\n  toggleShouldFilter: () => void;\n\n  resultCount: number | undefined;\n  resultIndex: number | undefined;\n  resultIndexStep: (decrement?: boolean) => void;\n\n  resultLine: number | undefined;\n  resultLineIndex: number | undefined;\n}\n\nexport function useLogViewerSearch(lines: AnsiLine[]): LogViewerSearch {\n  const [searchInput, setSearchInput] = useState('');\n  const searchText = searchInput.toLocaleLowerCase('en-US');\n\n  const [resultIndex, setResultIndex] = useState<number>(0);\n\n  const [shouldFilter, toggleShouldFilter] = useToggle(false);\n\n  const filter = useMemo(\n    () => applySearchFilter(lines, searchText),\n    [lines, searchText],\n  );\n\n  const searchResult = filter.results\n    ? filter.results[Math.min(resultIndex, filter.results.length - 1)]\n    : undefined;\n  const resultCount = filter.results?.length;\n\n  const resultIndexStep = (decrement?: boolean) => {\n    if (decrement) {\n      if (resultCount !== undefined) {\n        const next = Math.min(resultIndex - 1, resultCount - 2);\n        setResultIndex(next < 0 ? resultCount - 1 : next);\n      }\n    } else {\n      if (resultCount !== undefined) {\n        const next = resultIndex + 1;\n        setResultIndex(next >= resultCount ? 0 : next);\n      }\n    }\n  };\n\n  return {\n    lines: shouldFilter ? filter.lines : lines,\n    searchText,\n    searchInput,\n    setSearchInput,\n    shouldFilter,\n    toggleShouldFilter,\n    resultCount,\n    resultIndex,\n    resultIndexStep,\n    resultLine: searchResult?.lineNumber,\n    resultLineIndex: searchResult?.lineIndex,\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { errorApiRef, useApi } from '@backstage/core-plugin-api';\nimport { useEffect, useState } from 'react';\nimport useCopyToClipboard from 'react-use/lib/useCopyToClipboard';\nimport { AnsiLine } from './AnsiProcessor';\n\nexport function useLogViewerSelection(lines: AnsiLine[]) {\n  const errorApi = useApi(errorApiRef);\n  const [sel, setSelection] = useState<{ start: number; end: number }>();\n  const start = sel ? Math.min(sel.start, sel.end) : undefined;\n  const end = sel ? Math.max(sel.start, sel.end) : undefined;\n\n  const [{ error }, copyToClipboard] = useCopyToClipboard();\n\n  useEffect(() => {\n    if (error) {\n      errorApi.post(error);\n    }\n  }, [error, errorApi]);\n\n  return {\n    shouldShowButton(line: number) {\n      return start === line || end === line;\n    },\n    isSelected(line: number) {\n      if (!sel) {\n        return false;\n      }\n      return start! <= line && line <= end!;\n    },\n    setSelection(line: number, add: boolean) {\n      if (add) {\n        setSelection(s =>\n          s ? { start: s.start, end: line } : { start: line, end: line },\n        );\n      } else {\n        setSelection(s =>\n          s?.start === line && s?.end === line\n            ? undefined\n            : { start: line, end: line },\n        );\n      }\n    },\n    copySelection() {\n      if (sel) {\n        const copyText = lines\n          .slice(Math.min(sel.start, sel.end) - 1, Math.max(sel.start, sel.end))\n          .map(l => l.chunks.map(c => c.text).join(''))\n          .join('\\n');\n        copyToClipboard(copyText);\n        setSelection(undefined);\n      }\n    },\n  };\n}\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport CopyIcon from '@material-ui/icons/FileCopy';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { FixedSizeList } from 'react-window';\nimport { AnsiProcessor } from './AnsiProcessor';\nimport { HEADER_SIZE, useStyles } from './styles';\nimport classnames from 'classnames';\nimport { LogLine } from './LogLine';\nimport { LogViewerControls } from './LogViewerControls';\nimport { useLogViewerSearch } from './useLogViewerSearch';\nimport { useLogViewerSelection } from './useLogViewerSelection';\n\nexport interface RealLogViewerProps {\n  text: string;\n  classes?: { root?: string };\n}\n\nexport function RealLogViewer(props: RealLogViewerProps) {\n  const classes = useStyles({ classes: props.classes });\n  const listRef = useRef<FixedSizeList | null>(null);\n\n  // The processor keeps state that optimizes appending to the text\n  const processor = useMemo(() => new AnsiProcessor(), []);\n  const lines = processor.process(props.text);\n\n  const search = useLogViewerSearch(lines);\n  const selection = useLogViewerSelection(lines);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (search.resultLine !== undefined && listRef.current) {\n      listRef.current.scrollToItem(search.resultLine - 1, 'center');\n    }\n  }, [search.resultLine]);\n\n  useEffect(() => {\n    if (location.hash) {\n      // #line-6 -> 6\n      const line = parseInt(location.hash.replace(/\\D/g, ''), 10);\n      selection.setSelection(line, false);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleSelectLine = (\n    line: number,\n    event: { shiftKey: boolean; preventDefault: () => void },\n  ) => {\n    selection.setSelection(line, event.shiftKey);\n  };\n\n  return (\n    <AutoSizer>\n      {({ height, width }) => (\n        <div style={{ width, height }} className={classes.root}>\n          <div className={classes.header}>\n            <LogViewerControls {...search} />\n          </div>\n          <FixedSizeList\n            ref={listRef}\n            className={classes.log}\n            height={height - HEADER_SIZE}\n            width={width}\n            itemData={search.lines}\n            itemSize={20}\n            itemCount={search.lines.length}\n          >\n            {({ index, style, data }) => {\n              const line = data[index];\n              const { lineNumber } = line;\n              return (\n                <div\n                  style={{ ...style }}\n                  className={classnames(classes.line, {\n                    [classes.lineSelected]: selection.isSelected(lineNumber),\n                  })}\n                >\n                  {selection.shouldShowButton(lineNumber) && (\n                    <IconButton\n                      data-testid=\"copy-button\"\n                      size=\"small\"\n                      className={classes.lineCopyButton}\n                      onClick={() => selection.copySelection()}\n                    >\n                      <CopyIcon fontSize=\"inherit\" />\n                    </IconButton>\n                  )}\n                  <a\n                    role=\"row\"\n                    target=\"_self\"\n                    href={`#line-${lineNumber}`}\n                    className={classes.lineNumber}\n                    onClick={event => handleSelectLine(lineNumber, event)}\n                    onKeyPress={event => handleSelectLine(lineNumber, event)}\n                  >\n                    {lineNumber}\n                  </a>\n                  <LogLine\n                    line={line}\n                    classes={classes}\n                    searchText={search.searchText}\n                    highlightResultIndex={\n                      search.resultLine === lineNumber\n                        ? search.resultLineIndex\n                        : undefined\n                    }\n                  />\n                </div>\n              );\n            }}\n          </FixedSizeList>\n        </div>\n      )}\n    </AutoSizer>\n  );\n}\n"],"sourceRoot":""}