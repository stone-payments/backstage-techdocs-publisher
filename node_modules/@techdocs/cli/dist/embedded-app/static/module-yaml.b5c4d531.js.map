{"version":3,"sources":["webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/nodes/Node.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/visit.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/doc/directives.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/doc/anchors.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/nodes/Alias.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/nodes/toJS.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/nodes/Scalar.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/doc/createNode.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/nodes/Collection.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/stringify/stringifyComment.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/stringify/foldFlowLines.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/stringify/stringifyString.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/stringify/stringify.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/stringify/stringifyPair.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/log.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/nodes/Pair.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/stringify/stringifyCollection.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/nodes/YAMLMap.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/common/map.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/nodes/YAMLSeq.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/common/seq.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/common/string.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/common/null.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/core/bool.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/stringify/stringifyNumber.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/core/float.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/core/int.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/core/schema.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/json/schema.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/tags.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/schema/Schema.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/stringify/stringifyDocument.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/doc/applyReviver.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/doc/Document.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/errors.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/resolve-props.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/util-contains-newline.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/util-map-includes.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/resolve-block-map.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/resolve-block-seq.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/resolve-end.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/compose-collection.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/compose-scalar.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/compose-node.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/compose-doc.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/compose/composer.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/parse/cst-scalar.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/parse/cst-stringify.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/parse/cst-visit.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/parse/cst.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/parse/lexer.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/parse/line-counter.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/parse/parser.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/dist/public-api.js","webpack://techdocs-cli-embedded-app/javascript/node_modules/yaml/browser/index.js"],"names":["ALIAS","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","node","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","hasAnchor","NodeBase","type","copy","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","visit_","key","path","ctrl","callVisitor","replaceNode","i","ci","ck","cv","visitAsync","visitAsync_","parent","pt","escapeChars","escapeTagName","tn","ch","Directives","yaml","tags","res","line","onError","parts","name","handle","prefix","version","isValid","source","verbatim","suffix","tag","doc","lines","tagEntries","tagNames","_key","anchorIsValid","anchor","msg","anchorNames","root","anchors","findNewAnchor","exclude","createNodeAnchors","aliasObjects","sourceObjects","prevAnchors","ref","error","Alias","found","_arg","ctx","maxAliasCount","data","getAliasCount","_onComment","_onChompKeep","src","count","item","c","kc","vc","toJS","value","arg","v","isScalarValue","Scalar","defaultTagPrefix","findTagObject","tagName","match","t","tagObj","createNode","map","aliasDuplicateObjects","onAnchor","onTagObj","schema","collectionFromPath","k","a","isEmptyPath","Collection","it","rest","keepScalar","allowScalar","stringifyComment","str","indentComment","comment","indent","lineComment","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","text","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","end","split","prev","overflow","escStart","escEnd","consumeMoreIndentedLines","next","j","fold","getFoldOptions","containsDocumentMarker","lineLengthOverLimit","indentLength","limit","strLen","start","doubleQuotedString","json","implicitKey","minMultiLineLength","code","singleQuotedString","quotedString","singleQuote","qs","hasDouble","hasSingle","blockString","onComment","onChompKeep","blockQuote","commentString","literal","chomp","endStart","endNlPos","startWithSpace","startEnd","startNlPos","header","body","plainString","actualString","inFlow","test","compat","stringifyString","ss","_stringify","_type","defaultKeyType","defaultStringType","createStringifyContext","options","opt","getTagObject","obj","stringifyProps","props","stringify","o","stringifyPair","allNullValues","indentStep","indentSeq","simpleKeys","keyComment","explicitKey","keyCommentDone","chompKeep","vcb","valueComment","cs","valueCommentDone","valueStr","ws","debug","logLevel","messages","warn","warning","process","MERGE_KEY","addPairToJSMap","isMergeKey","mergeToJSMap","jsKey","stringKey","stringifyKey","jsValue","srcMap","strCtx","strKey","jsonStr","createPair","Pair","_","pair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","items","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","reqNewline","linesAtValue","iv","sum","ic","findPair","YAMLMap","overwrite","_pair","sortEntries","Type","createMap","keepUndefined","replacer","add","YAMLSeq","idx","asItemIndex","seq","createSeq","string","nullTag","boolTag","sv","stringifyNumber","format","minFractionDigits","num","n","d","floatNaN","floatExp","dot","intIdentify","intResolve","offset","radix","intAsBigInt","intStringify","intOct","_onError","intHex","stringifyJSON","jsonScalars","jsonError","binary","Buffer","buffer","buf","s","resolvePairs","cn","createPairs","iterable","pairs","keys","YAMLOMap","omap","seenKeys","boolStringify","trueTag","falseTag","f","sign","intBin","YAMLSet","keepPair","set","parseSexagesimal","asBigInt","p","stringifySexagesimal","_60","intTime","floatTime","timestamp","year","month","day","hour","minute","second","millisec","date","tz","schemas","tagsByName","coreKnownTags","getTags","customTags","schemaName","sortMapEntriesByKey","b","Schema","merge","resolveKnownTags","sortMapEntries","toStringDefaults","stringifyDocument","hasDirectives","dir","contentComment","dc","applyReviver","reviver","val","len","v0","v1","Document","_replacer","assertCollection","keyToStr","asStr","anchorPrefix","flow","setAnchors","jsonArg","mapAsMap","contents","YAMLError","pos","message","YAMLParseError","YAMLWarning","prettifyError","lc","col","lineStr","trimStart","pointer","resolveProps","tokens","indicator","startOnNewline","spaceBefore","atNewline","hasSpace","commentSep","hasNewline","hasNewlineAfterProp","reqSpace","comma","token","cb","last","containsNewline","st","flowIndentCheck","fc","mapIncludes","search","uniqueKeys","isEqual","startColMsg","resolveBlockMap","composeNode","composeEmptyNode","bm","collItem","sep","keyProps","keyStart","keyNode","valueProps","valueNode","resolveBlockSeq","bs","resolveEnd","blockMsg","isBlock","resolveFlowCollection","fcName","coll","atRoot","prevItemComment","loop","expectedEnd","ce","ee","cePos","composeCollection","CN","tagToken","Coll","expType","kt","resolveBlockScalar","scalar","strict","parseBlockScalarHeader","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","length","ts","first","m","resolveFlowScalar","rel","plainValue","singleQuotedValue","doubleQuotedValue","valueEnd","re","badChar","foldLines","foldNewline","cc","escapeCodes","parseCharCode","raw","wsStart","composeScalar","range","findScalarTagByName","findScalarTagByTest","matchWithTest","directives","emptyScalarPosition","before","isSrcToken","composeAlias","alias","composeDoc","opts","contentEnd","getErrorPos","parsePrelude","prelude","atComment","afterEmptyLine","Composer","afterDoc","forceDoc","endOffset","resolveAsScalar","createScalarToken","context","he","head","addEndtoBlockProps","setScalarValue","afterKey","setBlockScalarValue","setFlowScalarValue","oa","tok","nl","cst","stringifyToken","stringifyItem","_visit","field","index","BOM","DOCUMENT","FLOW_END","prettyToken","tokenType","isEmpty","hexDigits","tagChars","invalidFlowScalarChars","invalidAnchorChars","isNotAnchorChar","Lexer","incomplete","dt","state","dirEnd","sp","ch0","ch1","quote","qb","lastChar","allowEmpty","allowTabs","LineCounter","low","high","mid","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","getFirstKeyStartProps","fixFlowSeqItems","Parser","onNewLine","lexeme","top","bv","atNextItem","fs","docEnd","parseOptions","prettyErrors","parseAllDocuments","lineCounter","parser","composer","docs","parseDocument","_doc","parse","_reviver"],"mappings":"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","file":"static/module-yaml.b5c4d531.js","sourcesContent":["const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n}\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, NodeBase, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/Node.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/Node.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { NodeBase, ALIAS, isAlias, isCollection, isPair } from './Node.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        const data = anchors.get(source);\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { hasAnchor } from './Node.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { NodeBase, SCALAR } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt === 'function' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { NodeBase, isNode, isPair, isCollection, isScalar } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_QUOTED, FOLD_FLOW, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx) => ({\n    indentAtStart: ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(/\\n+(?!\\n|$)/g, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, inFlow } = ctx;\n    if ((implicitKey && /[\\n[\\]{},]/.test(value)) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (indent === '' && containsDocumentMarker(value)) {\n        ctx.forceBlockIndent = true;\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/Node.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vcb = '';\n    let valueComment = null;\n    if (isNode(value)) {\n        if (value.spaceBefore)\n            vcb = '\\n';\n        if (value.commentBefore) {\n            const cs = commentString(value.commentBefore);\n            vcb += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        valueComment = value.comment;\n    }\n    else if (value && typeof value === 'object') {\n        value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substr(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (vcb || keyComment) {\n        if (valueStr === '' && !ctx.inFlow)\n            ws = vcb === '\\n' ? '\\n\\n' : vcb;\n        else\n            ws = `${vcb}\\n${ctx.indent}`;\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const flow = valueStr[0] === '[' || valueStr[0] === '{';\n        if (!flow || valueStr.includes('\\n'))\n            ws = `\\n${ctx.indent}`;\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n')\n        ws = '';\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { warn } from '../log.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isAlias, isSeq, isScalar, isMap, isNode } from './Node.js';\nimport { Scalar } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx && ctx.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './Node.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { Collection } from '../nodes/Collection.js';\nimport { isNode, isPair } from '../nodes/Node.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start} ${lines.join(' ')} ${end}`;\n        }\n    }\n    if (comment) {\n        str += lineComment(str, commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { isPair, isScalar, MAP } from './Node.js';\nimport { Pair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/Node.js';\nimport { createPair } from '../../nodes/Pair.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nfunction createMap(schema, obj, ctx) {\n    const { keepUndefined, replacer } = ctx;\n    const map = new YAMLMap(schema);\n    const add = (key, value) => {\n        if (typeof replacer === 'function')\n            value = replacer.call(obj, key, value);\n        else if (Array.isArray(replacer) && !replacer.includes(key))\n            return;\n        if (value !== undefined || keepUndefined)\n            map.items.push(createPair(key, value, ctx));\n    };\n    if (obj instanceof Map) {\n        for (const [key, value] of obj)\n            add(key, value);\n    }\n    else if (obj && typeof obj === 'object') {\n        for (const key of Object.keys(obj))\n            add(key, obj[key]);\n    }\n    if (typeof schema.sortMapEntries === 'function') {\n        map.items.sort(schema.sortMapEntries);\n    }\n    return map;\n}\nconst map = {\n    collection: 'map',\n    createNode: createMap,\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { map };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './Node.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { createNode } from '../../doc/createNode.js';\nimport { isSeq } from '../../nodes/Node.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction createSeq(schema, obj, ctx) {\n    const { replacer } = ctx;\n    const seq = new YAMLSeq(schema);\n    if (obj && Symbol.iterator in Object(obj)) {\n        let i = 0;\n        for (let it of obj) {\n            if (typeof replacer === 'function') {\n                const key = obj instanceof Set ? it : String(i++);\n                it = replacer.call(obj, key, it);\n            }\n            seq.items.push(createNode(it, undefined, ctx));\n        }\n    }\n    return seq;\n}\nconst seq = {\n    collection: 'seq',\n    createNode: createSeq,\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    }\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/Node.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else\n                    throw new TypeError(`Expected { key: value } tuple: ${it}`);\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { isScalar, isPair } from '../../nodes/Node.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new YAMLOMap();\n        omap.items = pairs.items;\n        return omap;\n    }\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/Node.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new YAMLSet(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => (n < 10 ? '0' + String(n) : String(n)))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { float, floatExp, floatNaN } from './core/float.js';\nimport { int, intHex, intOct } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { floatTime, intTime, timestamp } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/Node.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { isNode } from '../nodes/Node.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringify } from '../stringify/stringify.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        if (value === undefined)\n            this.contents = null;\n        else {\n            this.contents = this.createNode(value, _replacer, options);\n        }\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path))\n            this.contents = value;\n        else if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100,\n            stringify\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.min(end.col - col, 80 - ci);\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/Node.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar(a) &&\n                isScalar(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError) {\n    const map = new YAMLMap(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                // TODO: assert being at last item?\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    map.range = [bm.offset, offset, offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError) {\n    const seq = new YAMLSeq(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        offset = props.end;\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(offset, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                // TODO: assert being at last item?\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, offset, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/Node.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const coll = isMap\n        ? new YAMLMap(ctx.schema)\n        : new YAMLSeq(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode, isMap } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    let coll;\n    switch (token.type) {\n        case 'block-map': {\n            coll = resolveBlockMap(CN, ctx, token, onError);\n            break;\n        }\n        case 'block-seq': {\n            coll = resolveBlockSeq(CN, ctx, token, onError);\n            break;\n        }\n        case 'flow-collection': {\n            coll = resolveFlowCollection(CN, ctx, token, onError);\n            break;\n        }\n    }\n    if (!tagToken)\n        return coll;\n    const tagName = ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (!tagName)\n        return coll;\n    // Cast needed due to: https://github.com/Microsoft/TypeScript/issues/3841\n    const Coll = coll.constructor;\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    const expType = isMap(coll) ? 'map' : 'seq';\n    let tag = ctx.schema.tags.find(t => t.collection === expType && t.tag === tagName);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            coll.tag = tagName;\n            return coll;\n        }\n    }\n    const res = tag.resolve(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { SCALAR, isScalar } from '../nodes/Node.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment)\n        node.comment = comment;\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/Node.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine && this.indent === map.indent && it.sep;\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\nimport * as YAML from './dist/index.js'\nexport default YAML\nexport * from './dist/index.js'\n"],"sourceRoot":""}